#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPI_ServerFilterRules

#include "Basic.hpp"

#include "BPI_ServerFilterRules_classes.hpp"
#include "BPI_ServerFilterRules_parameters.hpp"


namespace SDK
{

// Function BPI_ServerFilterRules.BPI_ServerFilterRules_C.GetFilterRules
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// bool                                    bActiveOnly                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// TMap<class UClass*, struct FHDFilterRuleParams>FilterRules                                            (Parm, OutParm)

void IBPI_ServerFilterRules_C::GetFilterRules(bool bActiveOnly, TMap<class UClass*, struct FHDFilterRuleParams>* FilterRules) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_ServerFilterRules_C", "GetFilterRules");

	Params::BPI_ServerFilterRules_C_GetFilterRules Parms{};

	Parms.bActiveOnly = bActiveOnly;

	UObject::ProcessEvent(Func, &Parms);

	if (FilterRules != nullptr)
		*FilterRules = Parms.FilterRules;
}

}

