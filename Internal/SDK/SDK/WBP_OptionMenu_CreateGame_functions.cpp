#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_OptionMenu_CreateGame

#include "Basic.hpp"

#include "WBP_OptionMenu_CreateGame_classes.hpp"
#include "WBP_OptionMenu_CreateGame_parameters.hpp"


namespace SDK
{

// Function WBP_OptionMenu_CreateGame.WBP_OptionMenu_CreateGame_C.OnBuildTravelURL__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void UWBP_OptionMenu_CreateGame_C::OnBuildTravelURL__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_OptionMenu_CreateGame_C", "OnBuildTravelURL__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_OptionMenu_CreateGame.WBP_OptionMenu_CreateGame_C.ExecuteUbergraph_WBP_OptionMenu_CreateGame
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Temp_int_Array_Index_Variable                          (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Temp_int_Loop_Counter_Variable                         (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   CallFunc_Add_IntInt_ReturnValue                        (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Temp_int_Array_Index_Variable_1                        (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          K2Node_ComponentBoundEvent_Item_3                      (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    K2Node_ComponentBoundEvent_bIsSelected_1               (ZeroConstructor, IsPlainOldData, NoDestructor)
// class UObject*                          CallFunc_BP_GetSelectedItem_ReturnValue                (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UBP_GMListItemData_C*             K2Node_DynamicCast_AsBP_GMList_Item_Data               (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    K2Node_DynamicCast_bSuccess                            (ZeroConstructor, IsPlainOldData, NoDestructor)
// class UBP_MapListItemData_C*            K2Node_DynamicCast_AsBP_Map_List_Item_Data             (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    K2Node_DynamicCast_bSuccess_1                          (ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    CallFunc_IsValid_ReturnValue                           (ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    CallFunc_IsValid_ReturnValue_1                         (ZeroConstructor, IsPlainOldData, NoDestructor)
// class UObject*                          K2Node_ComponentBoundEvent_Item_2                      (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UUserWidget*                      K2Node_ComponentBoundEvent_Widget_1                    (ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   CallFunc_BP_GetNumItemsSelected_ReturnValue            (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    CallFunc_Less_IntInt_ReturnValue                       (ZeroConstructor, IsPlainOldData, NoDestructor)
// class UObject*                          K2Node_ComponentBoundEvent_Item_1                      (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UUserWidget*                      K2Node_ComponentBoundEvent_Widget                      (ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    CallFunc_BooleanAND_ReturnValue                        (ZeroConstructor, IsPlainOldData, NoDestructor)
// int32                                   CallFunc_BP_GetNumItemsSelected_ReturnValue_1          (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    CallFunc_Less_IntInt_ReturnValue_1                     (ZeroConstructor, IsPlainOldData, NoDestructor)
// class UObject*                          K2Node_ComponentBoundEvent_Item                        (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    K2Node_ComponentBoundEvent_bIsSelected                 (ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    CallFunc_BooleanAND_ReturnValue_1                      (ZeroConstructor, IsPlainOldData, NoDestructor)
// class UBP_MapListItemData_C*            K2Node_DynamicCast_AsBP_Map_List_Item_Data_1           (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    K2Node_DynamicCast_bSuccess_2                          (ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    CallFunc_IsValid_ReturnValue_2                         (ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    CallFunc_IsValid_ReturnValue_3                         (ZeroConstructor, IsPlainOldData, NoDestructor)
// int32                                   Temp_int_Loop_Counter_Variable_1                       (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          CallFunc_BP_GetSelectedItem_ReturnValue_1              (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UBP_GMListItemData_C*             K2Node_DynamicCast_AsBP_GMList_Item_Data_1             (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    K2Node_DynamicCast_bSuccess_3                          (ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    CallFunc_IsValid_ReturnValue_4                         (ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    CallFunc_BooleanAND_ReturnValue_2                      (ZeroConstructor, IsPlainOldData, NoDestructor)
// int32                                   CallFunc_Add_IntInt_ReturnValue_1                      (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<class UWidget*>                  CallFunc_GetAllChildren_ReturnValue                    (ReferenceParm, ContainsInstancedReference, HasGetValueTypeHash)
// class UWidget*                          CallFunc_Array_Get_Item                                (ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   CallFunc_Array_Length_ReturnValue                      (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TScriptInterface<class IBPI_GameModifierSettings_C>K2Node_DynamicCast_AsBPI_Game_Modifier_Settings        (ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    K2Node_DynamicCast_bSuccess_4                          (ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    CallFunc_Less_IntInt_ReturnValue_2                     (ZeroConstructor, IsPlainOldData, NoDestructor)
// TArray<struct FPrimaryAssetId>          CallFunc_GetPrimaryAssetIdList_OutPrimaryAssetIdList   (ReferenceParm, HasGetValueTypeHash)
// TArray<class FName>                     K2Node_MakeArray_Array                                 (ConstParm, ReferenceParm, HasGetValueTypeHash)
// TArray<struct FPrimaryAssetId>          CallFunc_SplitLoadedPrimaryAssetIds_UnloadedAssetIds   (ReferenceParm, HasGetValueTypeHash)
// TArray<class UObject*>                  CallFunc_SplitLoadedPrimaryAssetIds_LoadedAssets       (ReferenceParm, HasGetValueTypeHash)
// TArray<class UObject*>                  Temp_object_Variable                                   (ReferenceParm, HasGetValueTypeHash)
// class UObject*                          CallFunc_Array_Get_Item_1                              (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UHDGameModeDefinition*            K2Node_DynamicCast_AsHDGame_Mode_Definition            (ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    K2Node_DynamicCast_bSuccess_5                          (ZeroConstructor, IsPlainOldData, NoDestructor)
// int32                                   CallFunc_Array_Length_ReturnValue_1                    (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    CallFunc_ShouldAddGMListing_bAddListing                (ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    CallFunc_Less_IntInt_ReturnValue_3                     (ZeroConstructor, IsPlainOldData, NoDestructor)
// class UAsyncActionLoadPrimaryAssetList* CallFunc_AsyncLoadPrimaryAssetList_ReturnValue         (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<class UObject*>                  K2Node_CustomEvent_Loaded                              (ConstParm, ReferenceParm, HasGetValueTypeHash)
// bool                                    CallFunc_IsValid_ReturnValue_5                         (ZeroConstructor, IsPlainOldData, NoDestructor)
// int32                                   CallFunc_Array_Add_ReturnValue                         (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// FDelegateProperty_                      K2Node_CreateDelegate_OutputDelegate                   (ZeroConstructor, NoDestructor)
// TArray<struct FPrimaryAssetId>          CallFunc_GetPrimaryAssetIdList_OutPrimaryAssetIdList_1 (ReferenceParm, HasGetValueTypeHash)

void UWBP_OptionMenu_CreateGame_C::ExecuteUbergraph_WBP_OptionMenu_CreateGame(int32 EntryPoint, int32 Temp_int_Array_Index_Variable, int32 Temp_int_Loop_Counter_Variable, int32 CallFunc_Add_IntInt_ReturnValue, int32 Temp_int_Array_Index_Variable_1, class UObject* K2Node_ComponentBoundEvent_Item_3, bool K2Node_ComponentBoundEvent_bIsSelected_1, class UObject* CallFunc_BP_GetSelectedItem_ReturnValue, class UBP_GMListItemData_C* K2Node_DynamicCast_AsBP_GMList_Item_Data, bool K2Node_DynamicCast_bSuccess, class UBP_MapListItemData_C* K2Node_DynamicCast_AsBP_Map_List_Item_Data, bool K2Node_DynamicCast_bSuccess_1, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsValid_ReturnValue_1, class UObject* K2Node_ComponentBoundEvent_Item_2, class UUserWidget* K2Node_ComponentBoundEvent_Widget_1, int32 CallFunc_BP_GetNumItemsSelected_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, class UObject* K2Node_ComponentBoundEvent_Item_1, class UUserWidget* K2Node_ComponentBoundEvent_Widget, bool CallFunc_BooleanAND_ReturnValue, int32 CallFunc_BP_GetNumItemsSelected_ReturnValue_1, bool CallFunc_Less_IntInt_ReturnValue_1, class UObject* K2Node_ComponentBoundEvent_Item, bool K2Node_ComponentBoundEvent_bIsSelected, bool CallFunc_BooleanAND_ReturnValue_1, class UBP_MapListItemData_C* K2Node_DynamicCast_AsBP_Map_List_Item_Data_1, bool K2Node_DynamicCast_bSuccess_2, bool CallFunc_IsValid_ReturnValue_2, bool CallFunc_IsValid_ReturnValue_3, int32 Temp_int_Loop_Counter_Variable_1, class UObject* CallFunc_BP_GetSelectedItem_ReturnValue_1, class UBP_GMListItemData_C* K2Node_DynamicCast_AsBP_GMList_Item_Data_1, bool K2Node_DynamicCast_bSuccess_3, bool CallFunc_IsValid_ReturnValue_4, bool CallFunc_BooleanAND_ReturnValue_2, int32 CallFunc_Add_IntInt_ReturnValue_1, TArray<class UWidget*>& CallFunc_GetAllChildren_ReturnValue, class UWidget* CallFunc_Array_Get_Item, int32 CallFunc_Array_Length_ReturnValue, TScriptInterface<class IBPI_GameModifierSettings_C> K2Node_DynamicCast_AsBPI_Game_Modifier_Settings, bool K2Node_DynamicCast_bSuccess_4, bool CallFunc_Less_IntInt_ReturnValue_2, TArray<struct FPrimaryAssetId>& CallFunc_GetPrimaryAssetIdList_OutPrimaryAssetIdList, TArray<class FName>& K2Node_MakeArray_Array, TArray<struct FPrimaryAssetId>& CallFunc_SplitLoadedPrimaryAssetIds_UnloadedAssetIds, TArray<class UObject*>& CallFunc_SplitLoadedPrimaryAssetIds_LoadedAssets, TArray<class UObject*>& Temp_object_Variable, class UObject* CallFunc_Array_Get_Item_1, class UHDGameModeDefinition* K2Node_DynamicCast_AsHDGame_Mode_Definition, bool K2Node_DynamicCast_bSuccess_5, int32 CallFunc_Array_Length_ReturnValue_1, bool CallFunc_ShouldAddGMListing_bAddListing, bool CallFunc_Less_IntInt_ReturnValue_3, class UAsyncActionLoadPrimaryAssetList* CallFunc_AsyncLoadPrimaryAssetList_ReturnValue, TArray<class UObject*>& K2Node_CustomEvent_Loaded, bool CallFunc_IsValid_ReturnValue_5, int32 CallFunc_Array_Add_ReturnValue, FDelegateProperty_ K2Node_CreateDelegate_OutputDelegate, TArray<struct FPrimaryAssetId>& CallFunc_GetPrimaryAssetIdList_OutPrimaryAssetIdList_1)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_OptionMenu_CreateGame_C", "ExecuteUbergraph_WBP_OptionMenu_CreateGame");

	Params::WBP_OptionMenu_CreateGame_C_ExecuteUbergraph_WBP_OptionMenu_CreateGame Parms{};

	Parms.EntryPoint = EntryPoint;
	Parms.Temp_int_Array_Index_Variable = Temp_int_Array_Index_Variable;
	Parms.Temp_int_Loop_Counter_Variable = Temp_int_Loop_Counter_Variable;
	Parms.CallFunc_Add_IntInt_ReturnValue = CallFunc_Add_IntInt_ReturnValue;
	Parms.Temp_int_Array_Index_Variable_1 = Temp_int_Array_Index_Variable_1;
	Parms.K2Node_ComponentBoundEvent_Item_3 = K2Node_ComponentBoundEvent_Item_3;
	Parms.K2Node_ComponentBoundEvent_bIsSelected_1 = K2Node_ComponentBoundEvent_bIsSelected_1;
	Parms.CallFunc_BP_GetSelectedItem_ReturnValue = CallFunc_BP_GetSelectedItem_ReturnValue;
	Parms.K2Node_DynamicCast_AsBP_GMList_Item_Data = K2Node_DynamicCast_AsBP_GMList_Item_Data;
	Parms.K2Node_DynamicCast_bSuccess = K2Node_DynamicCast_bSuccess;
	Parms.K2Node_DynamicCast_AsBP_Map_List_Item_Data = K2Node_DynamicCast_AsBP_Map_List_Item_Data;
	Parms.K2Node_DynamicCast_bSuccess_1 = K2Node_DynamicCast_bSuccess_1;
	Parms.CallFunc_IsValid_ReturnValue = CallFunc_IsValid_ReturnValue;
	Parms.CallFunc_IsValid_ReturnValue_1 = CallFunc_IsValid_ReturnValue_1;
	Parms.K2Node_ComponentBoundEvent_Item_2 = K2Node_ComponentBoundEvent_Item_2;
	Parms.K2Node_ComponentBoundEvent_Widget_1 = K2Node_ComponentBoundEvent_Widget_1;
	Parms.CallFunc_BP_GetNumItemsSelected_ReturnValue = CallFunc_BP_GetNumItemsSelected_ReturnValue;
	Parms.CallFunc_Less_IntInt_ReturnValue = CallFunc_Less_IntInt_ReturnValue;
	Parms.K2Node_ComponentBoundEvent_Item_1 = K2Node_ComponentBoundEvent_Item_1;
	Parms.K2Node_ComponentBoundEvent_Widget = K2Node_ComponentBoundEvent_Widget;
	Parms.CallFunc_BooleanAND_ReturnValue = CallFunc_BooleanAND_ReturnValue;
	Parms.CallFunc_BP_GetNumItemsSelected_ReturnValue_1 = CallFunc_BP_GetNumItemsSelected_ReturnValue_1;
	Parms.CallFunc_Less_IntInt_ReturnValue_1 = CallFunc_Less_IntInt_ReturnValue_1;
	Parms.K2Node_ComponentBoundEvent_Item = K2Node_ComponentBoundEvent_Item;
	Parms.K2Node_ComponentBoundEvent_bIsSelected = K2Node_ComponentBoundEvent_bIsSelected;
	Parms.CallFunc_BooleanAND_ReturnValue_1 = CallFunc_BooleanAND_ReturnValue_1;
	Parms.K2Node_DynamicCast_AsBP_Map_List_Item_Data_1 = K2Node_DynamicCast_AsBP_Map_List_Item_Data_1;
	Parms.K2Node_DynamicCast_bSuccess_2 = K2Node_DynamicCast_bSuccess_2;
	Parms.CallFunc_IsValid_ReturnValue_2 = CallFunc_IsValid_ReturnValue_2;
	Parms.CallFunc_IsValid_ReturnValue_3 = CallFunc_IsValid_ReturnValue_3;
	Parms.Temp_int_Loop_Counter_Variable_1 = Temp_int_Loop_Counter_Variable_1;
	Parms.CallFunc_BP_GetSelectedItem_ReturnValue_1 = CallFunc_BP_GetSelectedItem_ReturnValue_1;
	Parms.K2Node_DynamicCast_AsBP_GMList_Item_Data_1 = K2Node_DynamicCast_AsBP_GMList_Item_Data_1;
	Parms.K2Node_DynamicCast_bSuccess_3 = K2Node_DynamicCast_bSuccess_3;
	Parms.CallFunc_IsValid_ReturnValue_4 = CallFunc_IsValid_ReturnValue_4;
	Parms.CallFunc_BooleanAND_ReturnValue_2 = CallFunc_BooleanAND_ReturnValue_2;
	Parms.CallFunc_Add_IntInt_ReturnValue_1 = CallFunc_Add_IntInt_ReturnValue_1;
	Parms.CallFunc_GetAllChildren_ReturnValue = std::move(CallFunc_GetAllChildren_ReturnValue);
	Parms.CallFunc_Array_Get_Item = CallFunc_Array_Get_Item;
	Parms.CallFunc_Array_Length_ReturnValue = CallFunc_Array_Length_ReturnValue;
	Parms.K2Node_DynamicCast_AsBPI_Game_Modifier_Settings = K2Node_DynamicCast_AsBPI_Game_Modifier_Settings;
	Parms.K2Node_DynamicCast_bSuccess_4 = K2Node_DynamicCast_bSuccess_4;
	Parms.CallFunc_Less_IntInt_ReturnValue_2 = CallFunc_Less_IntInt_ReturnValue_2;
	Parms.CallFunc_GetPrimaryAssetIdList_OutPrimaryAssetIdList = std::move(CallFunc_GetPrimaryAssetIdList_OutPrimaryAssetIdList);
	Parms.K2Node_MakeArray_Array = std::move(K2Node_MakeArray_Array);
	Parms.CallFunc_SplitLoadedPrimaryAssetIds_UnloadedAssetIds = std::move(CallFunc_SplitLoadedPrimaryAssetIds_UnloadedAssetIds);
	Parms.CallFunc_SplitLoadedPrimaryAssetIds_LoadedAssets = std::move(CallFunc_SplitLoadedPrimaryAssetIds_LoadedAssets);
	Parms.Temp_object_Variable = std::move(Temp_object_Variable);
	Parms.CallFunc_Array_Get_Item_1 = CallFunc_Array_Get_Item_1;
	Parms.K2Node_DynamicCast_AsHDGame_Mode_Definition = K2Node_DynamicCast_AsHDGame_Mode_Definition;
	Parms.K2Node_DynamicCast_bSuccess_5 = K2Node_DynamicCast_bSuccess_5;
	Parms.CallFunc_Array_Length_ReturnValue_1 = CallFunc_Array_Length_ReturnValue_1;
	Parms.CallFunc_ShouldAddGMListing_bAddListing = CallFunc_ShouldAddGMListing_bAddListing;
	Parms.CallFunc_Less_IntInt_ReturnValue_3 = CallFunc_Less_IntInt_ReturnValue_3;
	Parms.CallFunc_AsyncLoadPrimaryAssetList_ReturnValue = CallFunc_AsyncLoadPrimaryAssetList_ReturnValue;
	Parms.K2Node_CustomEvent_Loaded = std::move(K2Node_CustomEvent_Loaded);
	Parms.CallFunc_IsValid_ReturnValue_5 = CallFunc_IsValid_ReturnValue_5;
	Parms.CallFunc_Array_Add_ReturnValue = CallFunc_Array_Add_ReturnValue;
	Parms.K2Node_CreateDelegate_OutputDelegate = K2Node_CreateDelegate_OutputDelegate;
	Parms.CallFunc_GetPrimaryAssetIdList_OutPrimaryAssetIdList_1 = std::move(CallFunc_GetPrimaryAssetIdList_OutPrimaryAssetIdList_1);

	UObject::ProcessEvent(Func, &Parms);

	CallFunc_GetAllChildren_ReturnValue = std::move(Parms.CallFunc_GetAllChildren_ReturnValue);
	CallFunc_GetPrimaryAssetIdList_OutPrimaryAssetIdList = std::move(Parms.CallFunc_GetPrimaryAssetIdList_OutPrimaryAssetIdList);
	CallFunc_SplitLoadedPrimaryAssetIds_UnloadedAssetIds = std::move(Parms.CallFunc_SplitLoadedPrimaryAssetIds_UnloadedAssetIds);
	CallFunc_SplitLoadedPrimaryAssetIds_LoadedAssets = std::move(Parms.CallFunc_SplitLoadedPrimaryAssetIds_LoadedAssets);
	Temp_object_Variable = std::move(Parms.Temp_object_Variable);
	CallFunc_GetPrimaryAssetIdList_OutPrimaryAssetIdList_1 = std::move(Parms.CallFunc_GetPrimaryAssetIdList_OutPrimaryAssetIdList_1);
}


// Function WBP_OptionMenu_CreateGame.WBP_OptionMenu_CreateGame_C.Destruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UWBP_OptionMenu_CreateGame_C::Destruct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_OptionMenu_CreateGame_C", "Destruct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_OptionMenu_CreateGame.WBP_OptionMenu_CreateGame_C.FetchGameModes
// (BlueprintCallable, BlueprintEvent)

void UWBP_OptionMenu_CreateGame_C::FetchGameModes()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_OptionMenu_CreateGame_C", "FetchGameModes");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_OptionMenu_CreateGame.WBP_OptionMenu_CreateGame_C.BndEvt__MapList_K2Node_ComponentBoundEvent_1_OnListItemSelectionChangedDynamic__DelegateSignature
// (BlueprintEvent)
// Parameters:
// class UObject*                          Item                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bIsSelected                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UWBP_OptionMenu_CreateGame_C::BndEvt__MapList_K2Node_ComponentBoundEvent_1_OnListItemSelectionChangedDynamic__DelegateSignature(class UObject* Item, bool bIsSelected)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_OptionMenu_CreateGame_C", "BndEvt__MapList_K2Node_ComponentBoundEvent_1_OnListItemSelectionChangedDynamic__DelegateSignature");

	Params::WBP_OptionMenu_CreateGame_C_BndEvt__MapList_K2Node_ComponentBoundEvent_1_OnListItemSelectionChangedDynamic__DelegateSignature Parms{};

	Parms.Item = Item;
	Parms.bIsSelected = bIsSelected;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_OptionMenu_CreateGame.WBP_OptionMenu_CreateGame_C.BndEvt__MapList_K2Node_ComponentBoundEvent_5_OnListEntryInitializedDynamic__DelegateSignature
// (BlueprintEvent)
// Parameters:
// class UObject*                          Item                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UUserWidget*                      Widget                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_OptionMenu_CreateGame_C::BndEvt__MapList_K2Node_ComponentBoundEvent_5_OnListEntryInitializedDynamic__DelegateSignature(class UObject* Item, class UUserWidget* Widget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_OptionMenu_CreateGame_C", "BndEvt__MapList_K2Node_ComponentBoundEvent_5_OnListEntryInitializedDynamic__DelegateSignature");

	Params::WBP_OptionMenu_CreateGame_C_BndEvt__MapList_K2Node_ComponentBoundEvent_5_OnListEntryInitializedDynamic__DelegateSignature Parms{};

	Parms.Item = Item;
	Parms.Widget = Widget;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_OptionMenu_CreateGame.WBP_OptionMenu_CreateGame_C.BndEvt__GMList_K2Node_ComponentBoundEvent_3_OnListEntryInitializedDynamic__DelegateSignature
// (BlueprintEvent)
// Parameters:
// class UObject*                          Item                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UUserWidget*                      Widget                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_OptionMenu_CreateGame_C::BndEvt__GMList_K2Node_ComponentBoundEvent_3_OnListEntryInitializedDynamic__DelegateSignature(class UObject* Item, class UUserWidget* Widget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_OptionMenu_CreateGame_C", "BndEvt__GMList_K2Node_ComponentBoundEvent_3_OnListEntryInitializedDynamic__DelegateSignature");

	Params::WBP_OptionMenu_CreateGame_C_BndEvt__GMList_K2Node_ComponentBoundEvent_3_OnListEntryInitializedDynamic__DelegateSignature Parms{};

	Parms.Item = Item;
	Parms.Widget = Widget;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_OptionMenu_CreateGame.WBP_OptionMenu_CreateGame_C.BndEvt__GMList_K2Node_ComponentBoundEvent_2_OnListItemSelectionChangedDynamic__DelegateSignature
// (BlueprintEvent)
// Parameters:
// class UObject*                          Item                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bIsSelected                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UWBP_OptionMenu_CreateGame_C::BndEvt__GMList_K2Node_ComponentBoundEvent_2_OnListItemSelectionChangedDynamic__DelegateSignature(class UObject* Item, bool bIsSelected)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_OptionMenu_CreateGame_C", "BndEvt__GMList_K2Node_ComponentBoundEvent_2_OnListItemSelectionChangedDynamic__DelegateSignature");

	Params::WBP_OptionMenu_CreateGame_C_BndEvt__GMList_K2Node_ComponentBoundEvent_2_OnListItemSelectionChangedDynamic__DelegateSignature Parms{};

	Parms.Item = Item;
	Parms.bIsSelected = bIsSelected;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_OptionMenu_CreateGame.WBP_OptionMenu_CreateGame_C.OnInitialized
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UWBP_OptionMenu_CreateGame_C::OnInitialized()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_OptionMenu_CreateGame_C", "OnInitialized");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_OptionMenu_CreateGame.WBP_OptionMenu_CreateGame_C.BndEvt__CreateGameBtn_K2Node_ComponentBoundEvent_0_OnButtonClickedEvent__DelegateSignature
// (BlueprintEvent)

void UWBP_OptionMenu_CreateGame_C::BndEvt__CreateGameBtn_K2Node_ComponentBoundEvent_0_OnButtonClickedEvent__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_OptionMenu_CreateGame_C", "BndEvt__CreateGameBtn_K2Node_ComponentBoundEvent_0_OnButtonClickedEvent__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_OptionMenu_CreateGame.WBP_OptionMenu_CreateGame_C.Completed_D5E8D9AE41A0DF3C4DEC0184D72FF481
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class UObject*>                  Loaded                                                 (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)

void UWBP_OptionMenu_CreateGame_C::Completed_D5E8D9AE41A0DF3C4DEC0184D72FF481(TArray<class UObject*>& Loaded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_OptionMenu_CreateGame_C", "Completed_D5E8D9AE41A0DF3C4DEC0184D72FF481");

	Params::WBP_OptionMenu_CreateGame_C_Completed_D5E8D9AE41A0DF3C4DEC0184D72FF481 Parms{};

	Parms.Loaded = std::move(Loaded);

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_OptionMenu_CreateGame.WBP_OptionMenu_CreateGame_C.FetchMapsFromRegistry
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<struct FFMapInfo>                MapsFound                                              (Parm, OutParm, HasGetValueTypeHash)
// struct FFMapInfo                        NewMap                                                 (Edit, BlueprintVisible, HasGetValueTypeHash)
// TArray<struct FFMapInfo>                MapInfos                                               (Edit, BlueprintVisible, HasGetValueTypeHash)
// int32                                   Temp_int_Loop_Counter_Variable                         (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Temp_int_Array_Index_Variable                          (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   CallFunc_Add_IntInt_ReturnValue                        (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<struct FPrimaryAssetId>          CallFunc_GetPrimaryAssetIdList_OutPrimaryAssetIdList   (ReferenceParm, HasGetValueTypeHash)
// struct FPrimaryAssetId                  CallFunc_Array_Get_Item                                (ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// int32                                   CallFunc_Array_Length_ReturnValue                      (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TSoftObjectPtr<class UTexture2D>        CallFunc_GetMapAssetPreviewBannerImg_OutMapPreviewBannerImgRef(HasGetValueTypeHash)
// bool                                    CallFunc_GetMapAssetPreviewBannerImg_ReturnValue       (ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    CallFunc_Less_IntInt_ReturnValue                       (ZeroConstructor, IsPlainOldData, NoDestructor)
// class UObject*                          CallFunc_LoadAsset_Blocking_ReturnValue                (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    CallFunc_IsValidSoftObjectReference_ReturnValue        (ZeroConstructor, IsPlainOldData, NoDestructor)
// class UTexture2D*                       K2Node_DynamicCast_AsTexture_2D                        (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    K2Node_DynamicCast_bSuccess                            (ZeroConstructor, IsPlainOldData, NoDestructor)
// TSoftObjectPtr<class UObject>           CallFunc_GetSoftObjectReferenceFromPrimaryAssetId_ReturnValue(HasGetValueTypeHash)
// class FText                             CallFunc_GetMapAssetNameForDisplay_ReturnValue         ()
// class FString                           CallFunc_Conv_SoftObjectReferenceToString_ReturnValue  (ZeroConstructor, HasGetValueTypeHash)
// class FString                           CallFunc_GetPluginDisplayNameFromPath_ModName          (ZeroConstructor, HasGetValueTypeHash)
// class FString                           CallFunc_Conv_NameToString_ReturnValue                 (ZeroConstructor, HasGetValueTypeHash)
// class FText                             CallFunc_Conv_StringToText_ReturnValue                 ()
// bool                                    CallFunc_GetPackageShortName_bSuccess                  (ZeroConstructor, IsPlainOldData, NoDestructor)
// class FString                           CallFunc_GetPackageShortName_ShortName                 (ZeroConstructor, HasGetValueTypeHash)
// TSoftObjectPtr<class UTexture2D>        CallFunc_GetMapAssetPreviewImg_OutMapPreviewImgRef     (HasGetValueTypeHash)
// bool                                    CallFunc_GetMapAssetPreviewImg_ReturnValue             (ZeroConstructor, IsPlainOldData, NoDestructor)
// class FName                             CallFunc_Conv_StringToName_ReturnValue                 (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FText                             CallFunc_Map_Find_Value                                ()
// bool                                    CallFunc_Map_Find_ReturnValue                          (ZeroConstructor, IsPlainOldData, NoDestructor)
// class UObject*                          CallFunc_LoadAsset_Blocking_ReturnValue_1              (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    CallFunc_IsValidSoftObjectReference_ReturnValue_1      (ZeroConstructor, IsPlainOldData, NoDestructor)
// class UTexture2D*                       K2Node_DynamicCast_AsTexture_2D_1                      (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    K2Node_DynamicCast_bSuccess_1                          (ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    CallFunc_ShouldAddMapListing_bAddListing               (ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Temp_bool_Variable                                     (ZeroConstructor, IsPlainOldData, NoDestructor)
// class FText                             K2Node_Select_Default                                  ()
// int32                                   CallFunc_Array_Add_ReturnValue                         (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FFMapInfo                        K2Node_MakeStruct_FMapInfo                             (HasGetValueTypeHash)
// struct FFMapInfo                        K2Node_SetFieldsInStruct_StructOut                     (HasGetValueTypeHash)

void UWBP_OptionMenu_CreateGame_C::FetchMapsFromRegistry(TArray<struct FFMapInfo>* MapsFound, const struct FFMapInfo& NewMap, const TArray<struct FFMapInfo>& MapInfos, int32 Temp_int_Loop_Counter_Variable, int32 Temp_int_Array_Index_Variable, int32 CallFunc_Add_IntInt_ReturnValue, TArray<struct FPrimaryAssetId>& CallFunc_GetPrimaryAssetIdList_OutPrimaryAssetIdList, const struct FPrimaryAssetId& CallFunc_Array_Get_Item, int32 CallFunc_Array_Length_ReturnValue, TSoftObjectPtr<class UTexture2D> CallFunc_GetMapAssetPreviewBannerImg_OutMapPreviewBannerImgRef, bool CallFunc_GetMapAssetPreviewBannerImg_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, class UObject* CallFunc_LoadAsset_Blocking_ReturnValue, bool CallFunc_IsValidSoftObjectReference_ReturnValue, class UTexture2D* K2Node_DynamicCast_AsTexture_2D, bool K2Node_DynamicCast_bSuccess, TSoftObjectPtr<class UObject> CallFunc_GetSoftObjectReferenceFromPrimaryAssetId_ReturnValue, class FText CallFunc_GetMapAssetNameForDisplay_ReturnValue, const class FString& CallFunc_Conv_SoftObjectReferenceToString_ReturnValue, const class FString& CallFunc_GetPluginDisplayNameFromPath_ModName, const class FString& CallFunc_Conv_NameToString_ReturnValue, class FText CallFunc_Conv_StringToText_ReturnValue, bool CallFunc_GetPackageShortName_bSuccess, const class FString& CallFunc_GetPackageShortName_ShortName, TSoftObjectPtr<class UTexture2D> CallFunc_GetMapAssetPreviewImg_OutMapPreviewImgRef, bool CallFunc_GetMapAssetPreviewImg_ReturnValue, class FName CallFunc_Conv_StringToName_ReturnValue, class FText CallFunc_Map_Find_Value, bool CallFunc_Map_Find_ReturnValue, class UObject* CallFunc_LoadAsset_Blocking_ReturnValue_1, bool CallFunc_IsValidSoftObjectReference_ReturnValue_1, class UTexture2D* K2Node_DynamicCast_AsTexture_2D_1, bool K2Node_DynamicCast_bSuccess_1, bool CallFunc_ShouldAddMapListing_bAddListing, bool Temp_bool_Variable, class FText K2Node_Select_Default, int32 CallFunc_Array_Add_ReturnValue, const struct FFMapInfo& K2Node_MakeStruct_FMapInfo, const struct FFMapInfo& K2Node_SetFieldsInStruct_StructOut)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_OptionMenu_CreateGame_C", "FetchMapsFromRegistry");

	Params::WBP_OptionMenu_CreateGame_C_FetchMapsFromRegistry Parms{};

	Parms.NewMap = std::move(NewMap);
	Parms.MapInfos = std::move(MapInfos);
	Parms.Temp_int_Loop_Counter_Variable = Temp_int_Loop_Counter_Variable;
	Parms.Temp_int_Array_Index_Variable = Temp_int_Array_Index_Variable;
	Parms.CallFunc_Add_IntInt_ReturnValue = CallFunc_Add_IntInt_ReturnValue;
	Parms.CallFunc_GetPrimaryAssetIdList_OutPrimaryAssetIdList = std::move(CallFunc_GetPrimaryAssetIdList_OutPrimaryAssetIdList);
	Parms.CallFunc_Array_Get_Item = std::move(CallFunc_Array_Get_Item);
	Parms.CallFunc_Array_Length_ReturnValue = CallFunc_Array_Length_ReturnValue;
	Parms.CallFunc_GetMapAssetPreviewBannerImg_OutMapPreviewBannerImgRef = CallFunc_GetMapAssetPreviewBannerImg_OutMapPreviewBannerImgRef;
	Parms.CallFunc_GetMapAssetPreviewBannerImg_ReturnValue = CallFunc_GetMapAssetPreviewBannerImg_ReturnValue;
	Parms.CallFunc_Less_IntInt_ReturnValue = CallFunc_Less_IntInt_ReturnValue;
	Parms.CallFunc_LoadAsset_Blocking_ReturnValue = CallFunc_LoadAsset_Blocking_ReturnValue;
	Parms.CallFunc_IsValidSoftObjectReference_ReturnValue = CallFunc_IsValidSoftObjectReference_ReturnValue;
	Parms.K2Node_DynamicCast_AsTexture_2D = K2Node_DynamicCast_AsTexture_2D;
	Parms.K2Node_DynamicCast_bSuccess = K2Node_DynamicCast_bSuccess;
	Parms.CallFunc_GetSoftObjectReferenceFromPrimaryAssetId_ReturnValue = CallFunc_GetSoftObjectReferenceFromPrimaryAssetId_ReturnValue;
	Parms.CallFunc_GetMapAssetNameForDisplay_ReturnValue = CallFunc_GetMapAssetNameForDisplay_ReturnValue;
	Parms.CallFunc_Conv_SoftObjectReferenceToString_ReturnValue = std::move(CallFunc_Conv_SoftObjectReferenceToString_ReturnValue);
	Parms.CallFunc_GetPluginDisplayNameFromPath_ModName = std::move(CallFunc_GetPluginDisplayNameFromPath_ModName);
	Parms.CallFunc_Conv_NameToString_ReturnValue = std::move(CallFunc_Conv_NameToString_ReturnValue);
	Parms.CallFunc_Conv_StringToText_ReturnValue = CallFunc_Conv_StringToText_ReturnValue;
	Parms.CallFunc_GetPackageShortName_bSuccess = CallFunc_GetPackageShortName_bSuccess;
	Parms.CallFunc_GetPackageShortName_ShortName = std::move(CallFunc_GetPackageShortName_ShortName);
	Parms.CallFunc_GetMapAssetPreviewImg_OutMapPreviewImgRef = CallFunc_GetMapAssetPreviewImg_OutMapPreviewImgRef;
	Parms.CallFunc_GetMapAssetPreviewImg_ReturnValue = CallFunc_GetMapAssetPreviewImg_ReturnValue;
	Parms.CallFunc_Conv_StringToName_ReturnValue = CallFunc_Conv_StringToName_ReturnValue;
	Parms.CallFunc_Map_Find_Value = CallFunc_Map_Find_Value;
	Parms.CallFunc_Map_Find_ReturnValue = CallFunc_Map_Find_ReturnValue;
	Parms.CallFunc_LoadAsset_Blocking_ReturnValue_1 = CallFunc_LoadAsset_Blocking_ReturnValue_1;
	Parms.CallFunc_IsValidSoftObjectReference_ReturnValue_1 = CallFunc_IsValidSoftObjectReference_ReturnValue_1;
	Parms.K2Node_DynamicCast_AsTexture_2D_1 = K2Node_DynamicCast_AsTexture_2D_1;
	Parms.K2Node_DynamicCast_bSuccess_1 = K2Node_DynamicCast_bSuccess_1;
	Parms.CallFunc_ShouldAddMapListing_bAddListing = CallFunc_ShouldAddMapListing_bAddListing;
	Parms.Temp_bool_Variable = Temp_bool_Variable;
	Parms.K2Node_Select_Default = K2Node_Select_Default;
	Parms.CallFunc_Array_Add_ReturnValue = CallFunc_Array_Add_ReturnValue;
	Parms.K2Node_MakeStruct_FMapInfo = std::move(K2Node_MakeStruct_FMapInfo);
	Parms.K2Node_SetFieldsInStruct_StructOut = std::move(K2Node_SetFieldsInStruct_StructOut);

	UObject::ProcessEvent(Func, &Parms);

	CallFunc_GetPrimaryAssetIdList_OutPrimaryAssetIdList = std::move(Parms.CallFunc_GetPrimaryAssetIdList_OutPrimaryAssetIdList);

	if (MapsFound != nullptr)
		*MapsFound = Parms.MapsFound;
}


// Function WBP_OptionMenu_CreateGame.WBP_OptionMenu_CreateGame_C.ShouldAddMapListing
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FPrimaryAssetId                  MapAssetId                                             (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash)
// bool                                    bAddListing                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bLegacyMap                                             (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
// class FString                           ContentRootName                                        (Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
// class FString                           MapName                                                (Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
// TArray<TSoftClassPtr<class UClass>>     GameModes                                              (Edit, BlueprintVisible, HasGetValueTypeHash)
// class FString                           CallFunc_Conv_NameToString_ReturnValue                 (ZeroConstructor, HasGetValueTypeHash)
// bool                                    CallFunc_DoesMapIDSupportGMDefinition_ReturnValue      (ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    CallFunc_GetPackageShortName_bSuccess                  (ZeroConstructor, IsPlainOldData, NoDestructor)
// class FString                           CallFunc_GetPackageShortName_ShortName                 (ZeroConstructor, HasGetValueTypeHash)
// bool                                    CallFunc_GetContentRootFromPackageName_bSuccess        (ZeroConstructor, IsPlainOldData, NoDestructor)
// class FString                           CallFunc_GetContentRootFromPackageName_ContentRootName (ZeroConstructor, HasGetValueTypeHash)
// TSoftClassPtr<class UClass>             CallFunc_GetMapAssetDefaultGameMode_OutDefaultGameModeRef(HasGetValueTypeHash)
// bool                                    CallFunc_GetMapAssetDefaultGameMode_ReturnValue        (ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    CallFunc_GetMapAssetVisibleInMapSelectUI_bOutVisibleInMapSelectUI(ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    CallFunc_GetMapAssetVisibleInMapSelectUI_ReturnValue   (ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    CallFunc_BooleanAND_ReturnValue                        (ZeroConstructor, IsPlainOldData, NoDestructor)
// TSet<TSoftClassPtr<class UClass>>       CallFunc_GetMapAssetSupportedGameModes_OutSupportedGameModes()
// bool                                    CallFunc_GetMapAssetSupportedGameModes_ReturnValue     (ZeroConstructor, IsPlainOldData, NoDestructor)
// TArray<TSoftClassPtr<class UClass>>     CallFunc_Set_ToArray_Result                            (ReferenceParm, HasGetValueTypeHash)
// int32                                   Temp_int_Loop_Counter_Variable                         (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   CallFunc_Add_IntInt_ReturnValue                        (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Temp_int_Array_Index_Variable                          (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TSoftClassPtr<class UClass>             CallFunc_Array_Get_Item                                (HasGetValueTypeHash)
// bool                                    CallFunc_FilterExcludesGMClass_bExcludeGM              (ZeroConstructor, IsPlainOldData, NoDestructor)
// int32                                   CallFunc_Array_Length_ReturnValue                      (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    CallFunc_Less_IntInt_ReturnValue                       (ZeroConstructor, IsPlainOldData, NoDestructor)
// int32                                   CallFunc_Array_Add_ReturnValue                         (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    CallFunc_DoesModPluginUseLegacyMapScanning_ReturnValue (ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    CallFunc_Not_PreBool_ReturnValue                       (ZeroConstructor, IsPlainOldData, NoDestructor)

void UWBP_OptionMenu_CreateGame_C::ShouldAddMapListing(struct FPrimaryAssetId& MapAssetId, bool* bAddListing, bool bLegacyMap, const class FString& ContentRootName, const class FString& MapName, const TArray<TSoftClassPtr<class UClass>>& GameModes, const class FString& CallFunc_Conv_NameToString_ReturnValue, bool CallFunc_DoesMapIDSupportGMDefinition_ReturnValue, bool CallFunc_GetPackageShortName_bSuccess, const class FString& CallFunc_GetPackageShortName_ShortName, bool CallFunc_GetContentRootFromPackageName_bSuccess, const class FString& CallFunc_GetContentRootFromPackageName_ContentRootName, TSoftClassPtr<class UClass> CallFunc_GetMapAssetDefaultGameMode_OutDefaultGameModeRef, bool CallFunc_GetMapAssetDefaultGameMode_ReturnValue, bool CallFunc_GetMapAssetVisibleInMapSelectUI_bOutVisibleInMapSelectUI, bool CallFunc_GetMapAssetVisibleInMapSelectUI_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, const TSet<TSoftClassPtr<class UClass>>& CallFunc_GetMapAssetSupportedGameModes_OutSupportedGameModes, bool CallFunc_GetMapAssetSupportedGameModes_ReturnValue, TArray<TSoftClassPtr<class UClass>>& CallFunc_Set_ToArray_Result, int32 Temp_int_Loop_Counter_Variable, int32 CallFunc_Add_IntInt_ReturnValue, int32 Temp_int_Array_Index_Variable, TSoftClassPtr<class UClass> CallFunc_Array_Get_Item, bool CallFunc_FilterExcludesGMClass_bExcludeGM, int32 CallFunc_Array_Length_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, int32 CallFunc_Array_Add_ReturnValue, bool CallFunc_DoesModPluginUseLegacyMapScanning_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_OptionMenu_CreateGame_C", "ShouldAddMapListing");

	Params::WBP_OptionMenu_CreateGame_C_ShouldAddMapListing Parms{};

	Parms.MapAssetId = std::move(MapAssetId);
	Parms.bLegacyMap = bLegacyMap;
	Parms.ContentRootName = std::move(ContentRootName);
	Parms.MapName = std::move(MapName);
	Parms.GameModes = std::move(GameModes);
	Parms.CallFunc_Conv_NameToString_ReturnValue = std::move(CallFunc_Conv_NameToString_ReturnValue);
	Parms.CallFunc_DoesMapIDSupportGMDefinition_ReturnValue = CallFunc_DoesMapIDSupportGMDefinition_ReturnValue;
	Parms.CallFunc_GetPackageShortName_bSuccess = CallFunc_GetPackageShortName_bSuccess;
	Parms.CallFunc_GetPackageShortName_ShortName = std::move(CallFunc_GetPackageShortName_ShortName);
	Parms.CallFunc_GetContentRootFromPackageName_bSuccess = CallFunc_GetContentRootFromPackageName_bSuccess;
	Parms.CallFunc_GetContentRootFromPackageName_ContentRootName = std::move(CallFunc_GetContentRootFromPackageName_ContentRootName);
	Parms.CallFunc_GetMapAssetDefaultGameMode_OutDefaultGameModeRef = CallFunc_GetMapAssetDefaultGameMode_OutDefaultGameModeRef;
	Parms.CallFunc_GetMapAssetDefaultGameMode_ReturnValue = CallFunc_GetMapAssetDefaultGameMode_ReturnValue;
	Parms.CallFunc_GetMapAssetVisibleInMapSelectUI_bOutVisibleInMapSelectUI = CallFunc_GetMapAssetVisibleInMapSelectUI_bOutVisibleInMapSelectUI;
	Parms.CallFunc_GetMapAssetVisibleInMapSelectUI_ReturnValue = CallFunc_GetMapAssetVisibleInMapSelectUI_ReturnValue;
	Parms.CallFunc_BooleanAND_ReturnValue = CallFunc_BooleanAND_ReturnValue;
	Parms.CallFunc_GetMapAssetSupportedGameModes_OutSupportedGameModes = std::move(CallFunc_GetMapAssetSupportedGameModes_OutSupportedGameModes);
	Parms.CallFunc_GetMapAssetSupportedGameModes_ReturnValue = CallFunc_GetMapAssetSupportedGameModes_ReturnValue;
	Parms.CallFunc_Set_ToArray_Result = std::move(CallFunc_Set_ToArray_Result);
	Parms.Temp_int_Loop_Counter_Variable = Temp_int_Loop_Counter_Variable;
	Parms.CallFunc_Add_IntInt_ReturnValue = CallFunc_Add_IntInt_ReturnValue;
	Parms.Temp_int_Array_Index_Variable = Temp_int_Array_Index_Variable;
	Parms.CallFunc_Array_Get_Item = CallFunc_Array_Get_Item;
	Parms.CallFunc_FilterExcludesGMClass_bExcludeGM = CallFunc_FilterExcludesGMClass_bExcludeGM;
	Parms.CallFunc_Array_Length_ReturnValue = CallFunc_Array_Length_ReturnValue;
	Parms.CallFunc_Less_IntInt_ReturnValue = CallFunc_Less_IntInt_ReturnValue;
	Parms.CallFunc_Array_Add_ReturnValue = CallFunc_Array_Add_ReturnValue;
	Parms.CallFunc_DoesModPluginUseLegacyMapScanning_ReturnValue = CallFunc_DoesModPluginUseLegacyMapScanning_ReturnValue;
	Parms.CallFunc_Not_PreBool_ReturnValue = CallFunc_Not_PreBool_ReturnValue;

	UObject::ProcessEvent(Func, &Parms);

	MapAssetId = std::move(Parms.MapAssetId);
	CallFunc_Set_ToArray_Result = std::move(Parms.CallFunc_Set_ToArray_Result);

	if (bAddListing != nullptr)
		*bAddListing = std::move(Parms.bAddListing);
}


// Function WBP_OptionMenu_CreateGame.WBP_OptionMenu_CreateGame_C.FetchGameModesFromRegistry
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<struct FFGameModeInfo>           GMsFound                                               (Parm, OutParm, HasGetValueTypeHash)
// TArray<struct FFGameModeInfo>           GMInfos                                                (Edit, BlueprintVisible, HasGetValueTypeHash)
// int32                                   Temp_int_Array_Index_Variable                          (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Temp_int_Loop_Counter_Variable                         (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   CallFunc_Add_IntInt_ReturnValue                        (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UHDGameModeDefinition*            CallFunc_Array_Get_Item                                (ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   CallFunc_Array_Length_ReturnValue                      (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    CallFunc_Less_IntInt_ReturnValue                       (ZeroConstructor, IsPlainOldData, NoDestructor)
// class FString                           CallFunc_Conv_SoftClassReferenceToString_ReturnValue   (ZeroConstructor, HasGetValueTypeHash)
// class FName                             CallFunc_Conv_StringToName_ReturnValue                 (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FText                             CallFunc_GetValidDisplayNameForGMDefinition_DisplayName()
// class UObject*                          CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UTexture2D*                       K2Node_DynamicCast_AsTexture_2D                        (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    K2Node_DynamicCast_bSuccess                            (ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FFGameModeInfo                   K2Node_MakeStruct_FGameModeInfo                        (HasGetValueTypeHash)
// int32                                   CallFunc_Array_Add_ReturnValue                         (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_OptionMenu_CreateGame_C::FetchGameModesFromRegistry(TArray<struct FFGameModeInfo>* GMsFound, const TArray<struct FFGameModeInfo>& GMInfos, int32 Temp_int_Array_Index_Variable, int32 Temp_int_Loop_Counter_Variable, int32 CallFunc_Add_IntInt_ReturnValue, class UHDGameModeDefinition* CallFunc_Array_Get_Item, int32 CallFunc_Array_Length_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, const class FString& CallFunc_Conv_SoftClassReferenceToString_ReturnValue, class FName CallFunc_Conv_StringToName_ReturnValue, class FText CallFunc_GetValidDisplayNameForGMDefinition_DisplayName, class UObject* CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue, class UTexture2D* K2Node_DynamicCast_AsTexture_2D, bool K2Node_DynamicCast_bSuccess, const struct FFGameModeInfo& K2Node_MakeStruct_FGameModeInfo, int32 CallFunc_Array_Add_ReturnValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_OptionMenu_CreateGame_C", "FetchGameModesFromRegistry");

	Params::WBP_OptionMenu_CreateGame_C_FetchGameModesFromRegistry Parms{};

	Parms.GMInfos = std::move(GMInfos);
	Parms.Temp_int_Array_Index_Variable = Temp_int_Array_Index_Variable;
	Parms.Temp_int_Loop_Counter_Variable = Temp_int_Loop_Counter_Variable;
	Parms.CallFunc_Add_IntInt_ReturnValue = CallFunc_Add_IntInt_ReturnValue;
	Parms.CallFunc_Array_Get_Item = CallFunc_Array_Get_Item;
	Parms.CallFunc_Array_Length_ReturnValue = CallFunc_Array_Length_ReturnValue;
	Parms.CallFunc_Less_IntInt_ReturnValue = CallFunc_Less_IntInt_ReturnValue;
	Parms.CallFunc_Conv_SoftClassReferenceToString_ReturnValue = std::move(CallFunc_Conv_SoftClassReferenceToString_ReturnValue);
	Parms.CallFunc_Conv_StringToName_ReturnValue = CallFunc_Conv_StringToName_ReturnValue;
	Parms.CallFunc_GetValidDisplayNameForGMDefinition_DisplayName = CallFunc_GetValidDisplayNameForGMDefinition_DisplayName;
	Parms.CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue = CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue;
	Parms.K2Node_DynamicCast_AsTexture_2D = K2Node_DynamicCast_AsTexture_2D;
	Parms.K2Node_DynamicCast_bSuccess = K2Node_DynamicCast_bSuccess;
	Parms.K2Node_MakeStruct_FGameModeInfo = std::move(K2Node_MakeStruct_FGameModeInfo);
	Parms.CallFunc_Array_Add_ReturnValue = CallFunc_Array_Add_ReturnValue;

	UObject::ProcessEvent(Func, &Parms);

	if (GMsFound != nullptr)
		*GMsFound = Parms.GMsFound;
}


// Function WBP_OptionMenu_CreateGame.WBP_OptionMenu_CreateGame_C.ShouldAddGMListing
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UHDGameModeDefinition*            GMDef                                                  (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bAddListing                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    CallFunc_IsValid_ReturnValue                           (ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    CallFunc_IsValidSoftClassReference_ReturnValue         (ZeroConstructor, IsPlainOldData, NoDestructor)

void UWBP_OptionMenu_CreateGame_C::ShouldAddGMListing(class UHDGameModeDefinition* GMDef, bool* bAddListing, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsValidSoftClassReference_ReturnValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_OptionMenu_CreateGame_C", "ShouldAddGMListing");

	Params::WBP_OptionMenu_CreateGame_C_ShouldAddGMListing Parms{};

	Parms.GMDef = GMDef;
	Parms.CallFunc_IsValid_ReturnValue = CallFunc_IsValid_ReturnValue;
	Parms.CallFunc_IsValidSoftClassReference_ReturnValue = CallFunc_IsValidSoftClassReference_ReturnValue;

	UObject::ProcessEvent(Func, &Parms);

	if (bAddListing != nullptr)
		*bAddListing = std::move(Parms.bAddListing);
}


// Function WBP_OptionMenu_CreateGame.WBP_OptionMenu_CreateGame_C.RepopulateGameListFromRegistry
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<struct FFGameModeInfo>           GMListSorted                                           (Edit, BlueprintVisible, HasGetValueTypeHash)
// TArray<class UBP_GMListItemData_C*>     GMItemsArr                                             (Edit, BlueprintVisible, HasGetValueTypeHash)
// int32                                   Temp_int_Array_Index_Variable                          (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Temp_int_Loop_Counter_Variable                         (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   CallFunc_Add_IntInt_ReturnValue                        (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<struct FFGameModeInfo>           CallFunc_FetchGameModesFromRegistry_GMsFound           (ReferenceParm, HasGetValueTypeHash)
// struct FFGameModeInfo                   CallFunc_Array_Get_Item                                (HasGetValueTypeHash)
// int32                                   CallFunc_Array_Length_ReturnValue                      (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UBP_GMListItemData_C*             CallFunc_CreateGMListItem_GMItem                       (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    CallFunc_Less_IntInt_ReturnValue                       (ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Temp_bool_Variable                                     (ZeroConstructor, IsPlainOldData, NoDestructor)
// int32                                   CallFunc_Array_Add_ReturnValue                         (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    CallFunc_Not_PreBool_ReturnValue                       (ZeroConstructor, IsPlainOldData, NoDestructor)
// TArray<struct FFGameModeInfo>           K2Node_Select_Default                                  (ReferenceParm, HasGetValueTypeHash)

void UWBP_OptionMenu_CreateGame_C::RepopulateGameListFromRegistry(const TArray<struct FFGameModeInfo>& GMListSorted, const TArray<class UBP_GMListItemData_C*>& GMItemsArr, int32 Temp_int_Array_Index_Variable, int32 Temp_int_Loop_Counter_Variable, int32 CallFunc_Add_IntInt_ReturnValue, TArray<struct FFGameModeInfo>& CallFunc_FetchGameModesFromRegistry_GMsFound, const struct FFGameModeInfo& CallFunc_Array_Get_Item, int32 CallFunc_Array_Length_ReturnValue, class UBP_GMListItemData_C* CallFunc_CreateGMListItem_GMItem, bool CallFunc_Less_IntInt_ReturnValue, bool Temp_bool_Variable, int32 CallFunc_Array_Add_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue, TArray<struct FFGameModeInfo>& K2Node_Select_Default)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_OptionMenu_CreateGame_C", "RepopulateGameListFromRegistry");

	Params::WBP_OptionMenu_CreateGame_C_RepopulateGameListFromRegistry Parms{};

	Parms.GMListSorted = std::move(GMListSorted);
	Parms.GMItemsArr = std::move(GMItemsArr);
	Parms.Temp_int_Array_Index_Variable = Temp_int_Array_Index_Variable;
	Parms.Temp_int_Loop_Counter_Variable = Temp_int_Loop_Counter_Variable;
	Parms.CallFunc_Add_IntInt_ReturnValue = CallFunc_Add_IntInt_ReturnValue;
	Parms.CallFunc_FetchGameModesFromRegistry_GMsFound = std::move(CallFunc_FetchGameModesFromRegistry_GMsFound);
	Parms.CallFunc_Array_Get_Item = std::move(CallFunc_Array_Get_Item);
	Parms.CallFunc_Array_Length_ReturnValue = CallFunc_Array_Length_ReturnValue;
	Parms.CallFunc_CreateGMListItem_GMItem = CallFunc_CreateGMListItem_GMItem;
	Parms.CallFunc_Less_IntInt_ReturnValue = CallFunc_Less_IntInt_ReturnValue;
	Parms.Temp_bool_Variable = Temp_bool_Variable;
	Parms.CallFunc_Array_Add_ReturnValue = CallFunc_Array_Add_ReturnValue;
	Parms.CallFunc_Not_PreBool_ReturnValue = CallFunc_Not_PreBool_ReturnValue;
	Parms.K2Node_Select_Default = std::move(K2Node_Select_Default);

	UObject::ProcessEvent(Func, &Parms);

	CallFunc_FetchGameModesFromRegistry_GMsFound = std::move(Parms.CallFunc_FetchGameModesFromRegistry_GMsFound);
	K2Node_Select_Default = std::move(Parms.K2Node_Select_Default);
}


// Function WBP_OptionMenu_CreateGame.WBP_OptionMenu_CreateGame_C.RepopulateMapListFromRegistry
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UBP_GMListItemData_C*             GMItemFilter                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<struct FFMapInfo>                MapListSorted                                          (Edit, BlueprintVisible, HasGetValueTypeHash)
// TArray<class UBP_MapListItemData_C*>    MapItemsArr                                            (Edit, BlueprintVisible, HasGetValueTypeHash)
// int32                                   Temp_int_Array_Index_Variable                          (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           CallFunc_Conv_NameToString_ReturnValue                 (ZeroConstructor, HasGetValueTypeHash)
// int32                                   Temp_int_Loop_Counter_Variable                         (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UHDGameModeDefinition*            CallFunc_FindGMDefinitionByClassName_GMDef             (ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   CallFunc_Add_IntInt_ReturnValue                        (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FFMapInfo                        CallFunc_Array_Get_Item                                (HasGetValueTypeHash)
// int32                                   CallFunc_Array_Length_ReturnValue                      (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UBP_MapListItemData_C*            CallFunc_CreateMapListItem_MapItem                     (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    CallFunc_Less_IntInt_ReturnValue                       (ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Temp_bool_Variable                                     (ZeroConstructor, IsPlainOldData, NoDestructor)
// int32                                   CallFunc_Array_Add_ReturnValue                         (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    CallFunc_Not_PreBool_ReturnValue                       (ZeroConstructor, IsPlainOldData, NoDestructor)
// TArray<struct FFMapInfo>                CallFunc_FetchMapsFromRegistry_MapsFound               (ReferenceParm, HasGetValueTypeHash)
// TArray<struct FFMapInfo>                K2Node_Select_Default                                  (ReferenceParm, HasGetValueTypeHash)

void UWBP_OptionMenu_CreateGame_C::RepopulateMapListFromRegistry(class UBP_GMListItemData_C* GMItemFilter, const TArray<struct FFMapInfo>& MapListSorted, const TArray<class UBP_MapListItemData_C*>& MapItemsArr, int32 Temp_int_Array_Index_Variable, const class FString& CallFunc_Conv_NameToString_ReturnValue, int32 Temp_int_Loop_Counter_Variable, class UHDGameModeDefinition* CallFunc_FindGMDefinitionByClassName_GMDef, int32 CallFunc_Add_IntInt_ReturnValue, const struct FFMapInfo& CallFunc_Array_Get_Item, int32 CallFunc_Array_Length_ReturnValue, class UBP_MapListItemData_C* CallFunc_CreateMapListItem_MapItem, bool CallFunc_Less_IntInt_ReturnValue, bool Temp_bool_Variable, int32 CallFunc_Array_Add_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue, TArray<struct FFMapInfo>& CallFunc_FetchMapsFromRegistry_MapsFound, TArray<struct FFMapInfo>& K2Node_Select_Default)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_OptionMenu_CreateGame_C", "RepopulateMapListFromRegistry");

	Params::WBP_OptionMenu_CreateGame_C_RepopulateMapListFromRegistry Parms{};

	Parms.GMItemFilter = GMItemFilter;
	Parms.MapListSorted = std::move(MapListSorted);
	Parms.MapItemsArr = std::move(MapItemsArr);
	Parms.Temp_int_Array_Index_Variable = Temp_int_Array_Index_Variable;
	Parms.CallFunc_Conv_NameToString_ReturnValue = std::move(CallFunc_Conv_NameToString_ReturnValue);
	Parms.Temp_int_Loop_Counter_Variable = Temp_int_Loop_Counter_Variable;
	Parms.CallFunc_FindGMDefinitionByClassName_GMDef = CallFunc_FindGMDefinitionByClassName_GMDef;
	Parms.CallFunc_Add_IntInt_ReturnValue = CallFunc_Add_IntInt_ReturnValue;
	Parms.CallFunc_Array_Get_Item = std::move(CallFunc_Array_Get_Item);
	Parms.CallFunc_Array_Length_ReturnValue = CallFunc_Array_Length_ReturnValue;
	Parms.CallFunc_CreateMapListItem_MapItem = CallFunc_CreateMapListItem_MapItem;
	Parms.CallFunc_Less_IntInt_ReturnValue = CallFunc_Less_IntInt_ReturnValue;
	Parms.Temp_bool_Variable = Temp_bool_Variable;
	Parms.CallFunc_Array_Add_ReturnValue = CallFunc_Array_Add_ReturnValue;
	Parms.CallFunc_Not_PreBool_ReturnValue = CallFunc_Not_PreBool_ReturnValue;
	Parms.CallFunc_FetchMapsFromRegistry_MapsFound = std::move(CallFunc_FetchMapsFromRegistry_MapsFound);
	Parms.K2Node_Select_Default = std::move(K2Node_Select_Default);

	UObject::ProcessEvent(Func, &Parms);

	CallFunc_FetchMapsFromRegistry_MapsFound = std::move(Parms.CallFunc_FetchMapsFromRegistry_MapsFound);
	K2Node_Select_Default = std::move(Parms.K2Node_Select_Default);
}


// Function WBP_OptionMenu_CreateGame.WBP_OptionMenu_CreateGame_C.CreateMapListItem
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FFMapInfo                        MapInfo                                                (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
// class UBP_MapListItemData_C*            MapItem                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UBP_MapListItemData_C*            CallFunc_SpawnObject_ReturnValue                       (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_OptionMenu_CreateGame_C::CreateMapListItem(struct FFMapInfo& MapInfo, class UBP_MapListItemData_C** MapItem, class UBP_MapListItemData_C* CallFunc_SpawnObject_ReturnValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_OptionMenu_CreateGame_C", "CreateMapListItem");

	Params::WBP_OptionMenu_CreateGame_C_CreateMapListItem Parms{};

	Parms.MapInfo = std::move(MapInfo);
	Parms.CallFunc_SpawnObject_ReturnValue = CallFunc_SpawnObject_ReturnValue;

	UObject::ProcessEvent(Func, &Parms);

	MapInfo = std::move(Parms.MapInfo);

	if (MapItem != nullptr)
		*MapItem = std::move(Parms.MapItem);
}


// Function WBP_OptionMenu_CreateGame.WBP_OptionMenu_CreateGame_C.AddMapToList
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FFMapInfo                        MapInfo                                                (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
// class UBP_MapListItemData_C*            NewMapItem                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UBP_MapListItemData_C*            CallFunc_CreateMapListItem_MapItem                     (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_OptionMenu_CreateGame_C::AddMapToList(struct FFMapInfo& MapInfo, class UBP_MapListItemData_C** NewMapItem, class UBP_MapListItemData_C* CallFunc_CreateMapListItem_MapItem)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_OptionMenu_CreateGame_C", "AddMapToList");

	Params::WBP_OptionMenu_CreateGame_C_AddMapToList Parms{};

	Parms.MapInfo = std::move(MapInfo);
	Parms.CallFunc_CreateMapListItem_MapItem = CallFunc_CreateMapListItem_MapItem;

	UObject::ProcessEvent(Func, &Parms);

	MapInfo = std::move(Parms.MapInfo);

	if (NewMapItem != nullptr)
		*NewMapItem = std::move(Parms.NewMapItem);
}


// Function WBP_OptionMenu_CreateGame.WBP_OptionMenu_CreateGame_C.AppendTravelURL
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           OptionsToAdd                                           (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash)
// class FString                           CallFunc_Concat_StrStr_ReturnValue                     (ZeroConstructor, HasGetValueTypeHash)
// class FString                           CallFunc_Concat_StrStr_ReturnValue_1                   (ZeroConstructor, HasGetValueTypeHash)

void UWBP_OptionMenu_CreateGame_C::AppendTravelURL(class FString& OptionsToAdd, const class FString& CallFunc_Concat_StrStr_ReturnValue, const class FString& CallFunc_Concat_StrStr_ReturnValue_1)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_OptionMenu_CreateGame_C", "AppendTravelURL");

	Params::WBP_OptionMenu_CreateGame_C_AppendTravelURL Parms{};

	Parms.OptionsToAdd = std::move(OptionsToAdd);
	Parms.CallFunc_Concat_StrStr_ReturnValue = std::move(CallFunc_Concat_StrStr_ReturnValue);
	Parms.CallFunc_Concat_StrStr_ReturnValue_1 = std::move(CallFunc_Concat_StrStr_ReturnValue_1);

	UObject::ProcessEvent(Func, &Parms);

	OptionsToAdd = std::move(Parms.OptionsToAdd);
}


// Function WBP_OptionMenu_CreateGame.WBP_OptionMenu_CreateGame_C.GetActiveModifiers
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// TArray<TScriptInterface<class IBPI_GameModifierSettings_C>>ActiveModifiers                                        (Parm, OutParm, HasGetValueTypeHash)
// TArray<TScriptInterface<class IBPI_GameModifierSettings_C>>ActiveModifierList                                     (Edit, BlueprintVisible, HasGetValueTypeHash)
// int32                                   Temp_int_Array_Index_Variable                          (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Temp_int_Loop_Counter_Variable                         (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   CallFunc_Add_IntInt_ReturnValue                        (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<class UWidget*>                  CallFunc_GetAllChildren_ReturnValue                    (ReferenceParm, ContainsInstancedReference, HasGetValueTypeHash)
// int32                                   CallFunc_Array_Length_ReturnValue                      (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UWidget*                          CallFunc_Array_Get_Item                                (ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    CallFunc_Less_IntInt_ReturnValue                       (ZeroConstructor, IsPlainOldData, NoDestructor)
// TScriptInterface<class IBPI_GameModifierSettings_C>K2Node_DynamicCast_AsBPI_Game_Modifier_Settings        (ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    K2Node_DynamicCast_bSuccess                            (ZeroConstructor, IsPlainOldData, NoDestructor)
// int32                                   CallFunc_Array_Add_ReturnValue                         (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    CallFunc_IsEnabled_bEnabled                            (ZeroConstructor, IsPlainOldData, NoDestructor)

void UWBP_OptionMenu_CreateGame_C::GetActiveModifiers(TArray<TScriptInterface<class IBPI_GameModifierSettings_C>>* ActiveModifiers, const TArray<TScriptInterface<class IBPI_GameModifierSettings_C>>& ActiveModifierList, int32 Temp_int_Array_Index_Variable, int32 Temp_int_Loop_Counter_Variable, int32 CallFunc_Add_IntInt_ReturnValue, TArray<class UWidget*>& CallFunc_GetAllChildren_ReturnValue, int32 CallFunc_Array_Length_ReturnValue, class UWidget* CallFunc_Array_Get_Item, bool CallFunc_Less_IntInt_ReturnValue, TScriptInterface<class IBPI_GameModifierSettings_C> K2Node_DynamicCast_AsBPI_Game_Modifier_Settings, bool K2Node_DynamicCast_bSuccess, int32 CallFunc_Array_Add_ReturnValue, bool CallFunc_IsEnabled_bEnabled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_OptionMenu_CreateGame_C", "GetActiveModifiers");

	Params::WBP_OptionMenu_CreateGame_C_GetActiveModifiers Parms{};

	Parms.ActiveModifierList = std::move(ActiveModifierList);
	Parms.Temp_int_Array_Index_Variable = Temp_int_Array_Index_Variable;
	Parms.Temp_int_Loop_Counter_Variable = Temp_int_Loop_Counter_Variable;
	Parms.CallFunc_Add_IntInt_ReturnValue = CallFunc_Add_IntInt_ReturnValue;
	Parms.CallFunc_GetAllChildren_ReturnValue = std::move(CallFunc_GetAllChildren_ReturnValue);
	Parms.CallFunc_Array_Length_ReturnValue = CallFunc_Array_Length_ReturnValue;
	Parms.CallFunc_Array_Get_Item = CallFunc_Array_Get_Item;
	Parms.CallFunc_Less_IntInt_ReturnValue = CallFunc_Less_IntInt_ReturnValue;
	Parms.K2Node_DynamicCast_AsBPI_Game_Modifier_Settings = K2Node_DynamicCast_AsBPI_Game_Modifier_Settings;
	Parms.K2Node_DynamicCast_bSuccess = K2Node_DynamicCast_bSuccess;
	Parms.CallFunc_Array_Add_ReturnValue = CallFunc_Array_Add_ReturnValue;
	Parms.CallFunc_IsEnabled_bEnabled = CallFunc_IsEnabled_bEnabled;

	UObject::ProcessEvent(Func, &Parms);

	CallFunc_GetAllChildren_ReturnValue = std::move(Parms.CallFunc_GetAllChildren_ReturnValue);

	if (ActiveModifiers != nullptr)
		*ActiveModifiers = Parms.ActiveModifiers;
}


// Function WBP_OptionMenu_CreateGame.WBP_OptionMenu_CreateGame_C.AppendOptionsFromActiveModifiers
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Temp_int_Array_Index_Variable                          (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Temp_int_Loop_Counter_Variable                         (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   CallFunc_Add_IntInt_ReturnValue                        (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<TScriptInterface<class IBPI_GameModifierSettings_C>>CallFunc_GetActiveModifiers_ActiveModifiers            (ReferenceParm, HasGetValueTypeHash)
// int32                                   CallFunc_Array_Length_ReturnValue                      (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TScriptInterface<class IBPI_GameModifierSettings_C>CallFunc_Array_Get_Item                                (ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    CallFunc_Less_IntInt_ReturnValue                       (ZeroConstructor, IsPlainOldData, NoDestructor)
// class FString                           CallFunc_GetTravelURLOptions_Options                   (ZeroConstructor, HasGetValueTypeHash)

void UWBP_OptionMenu_CreateGame_C::AppendOptionsFromActiveModifiers(int32 Temp_int_Array_Index_Variable, int32 Temp_int_Loop_Counter_Variable, int32 CallFunc_Add_IntInt_ReturnValue, TArray<TScriptInterface<class IBPI_GameModifierSettings_C>>& CallFunc_GetActiveModifiers_ActiveModifiers, int32 CallFunc_Array_Length_ReturnValue, TScriptInterface<class IBPI_GameModifierSettings_C> CallFunc_Array_Get_Item, bool CallFunc_Less_IntInt_ReturnValue, const class FString& CallFunc_GetTravelURLOptions_Options)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_OptionMenu_CreateGame_C", "AppendOptionsFromActiveModifiers");

	Params::WBP_OptionMenu_CreateGame_C_AppendOptionsFromActiveModifiers Parms{};

	Parms.Temp_int_Array_Index_Variable = Temp_int_Array_Index_Variable;
	Parms.Temp_int_Loop_Counter_Variable = Temp_int_Loop_Counter_Variable;
	Parms.CallFunc_Add_IntInt_ReturnValue = CallFunc_Add_IntInt_ReturnValue;
	Parms.CallFunc_GetActiveModifiers_ActiveModifiers = std::move(CallFunc_GetActiveModifiers_ActiveModifiers);
	Parms.CallFunc_Array_Length_ReturnValue = CallFunc_Array_Length_ReturnValue;
	Parms.CallFunc_Array_Get_Item = CallFunc_Array_Get_Item;
	Parms.CallFunc_Less_IntInt_ReturnValue = CallFunc_Less_IntInt_ReturnValue;
	Parms.CallFunc_GetTravelURLOptions_Options = std::move(CallFunc_GetTravelURLOptions_Options);

	UObject::ProcessEvent(Func, &Parms);

	CallFunc_GetActiveModifiers_ActiveModifiers = std::move(Parms.CallFunc_GetActiveModifiers_ActiveModifiers);
}


// Function WBP_OptionMenu_CreateGame.WBP_OptionMenu_CreateGame_C.HandleStartGame
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FFMapInfo                        SelectedMapInfo                                        (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
// struct FFGameModeInfo                   SelectedGMInfo                                         (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
// class FString                           CallFunc_Conv_NameToString_ReturnValue                 (ZeroConstructor, HasGetValueTypeHash)
// class FString                           CallFunc_Concat_StrStr_ReturnValue                     (ZeroConstructor, HasGetValueTypeHash)

void UWBP_OptionMenu_CreateGame_C::HandleStartGame(struct FFMapInfo& SelectedMapInfo, struct FFGameModeInfo& SelectedGMInfo, const class FString& CallFunc_Conv_NameToString_ReturnValue, const class FString& CallFunc_Concat_StrStr_ReturnValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_OptionMenu_CreateGame_C", "HandleStartGame");

	Params::WBP_OptionMenu_CreateGame_C_HandleStartGame Parms{};

	Parms.SelectedMapInfo = std::move(SelectedMapInfo);
	Parms.SelectedGMInfo = std::move(SelectedGMInfo);
	Parms.CallFunc_Conv_NameToString_ReturnValue = std::move(CallFunc_Conv_NameToString_ReturnValue);
	Parms.CallFunc_Concat_StrStr_ReturnValue = std::move(CallFunc_Concat_StrStr_ReturnValue);

	UObject::ProcessEvent(Func, &Parms);

	SelectedMapInfo = std::move(Parms.SelectedMapInfo);
	SelectedGMInfo = std::move(Parms.SelectedGMInfo);
}


// Function WBP_OptionMenu_CreateGame.WBP_OptionMenu_CreateGame_C.CreateGMListItem
// (Private, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FFGameModeInfo                   GMInfo                                                 (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
// class UBP_GMListItemData_C*             GMItem                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FFGameModeInfo                   GMInfoToUse                                            (Edit, BlueprintVisible, HasGetValueTypeHash)
// class UBP_GMListItemData_C*             CallFunc_SpawnObject_ReturnValue                       (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    CallFunc_IsValid_ReturnValue                           (ZeroConstructor, IsPlainOldData, NoDestructor)

void UWBP_OptionMenu_CreateGame_C::CreateGMListItem(struct FFGameModeInfo& GMInfo, class UBP_GMListItemData_C** GMItem, const struct FFGameModeInfo& GMInfoToUse, class UBP_GMListItemData_C* CallFunc_SpawnObject_ReturnValue, bool CallFunc_IsValid_ReturnValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_OptionMenu_CreateGame_C", "CreateGMListItem");

	Params::WBP_OptionMenu_CreateGame_C_CreateGMListItem Parms{};

	Parms.GMInfo = std::move(GMInfo);
	Parms.GMInfoToUse = std::move(GMInfoToUse);
	Parms.CallFunc_SpawnObject_ReturnValue = CallFunc_SpawnObject_ReturnValue;
	Parms.CallFunc_IsValid_ReturnValue = CallFunc_IsValid_ReturnValue;

	UObject::ProcessEvent(Func, &Parms);

	GMInfo = std::move(Parms.GMInfo);

	if (GMItem != nullptr)
		*GMItem = std::move(Parms.GMItem);
}


// Function WBP_OptionMenu_CreateGame.WBP_OptionMenu_CreateGame_C.AddGMToList
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FFGameModeInfo                   GMInfo                                                 (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
// class UBP_GMListItemData_C*             NewGMItem                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UBP_GMListItemData_C*             CallFunc_CreateGMListItem_GMItem                       (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_OptionMenu_CreateGame_C::AddGMToList(struct FFGameModeInfo& GMInfo, class UBP_GMListItemData_C** NewGMItem, class UBP_GMListItemData_C* CallFunc_CreateGMListItem_GMItem)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_OptionMenu_CreateGame_C", "AddGMToList");

	Params::WBP_OptionMenu_CreateGame_C_AddGMToList Parms{};

	Parms.GMInfo = std::move(GMInfo);
	Parms.CallFunc_CreateGMListItem_GMItem = CallFunc_CreateGMListItem_GMItem;

	UObject::ProcessEvent(Func, &Parms);

	GMInfo = std::move(Parms.GMInfo);

	if (NewGMItem != nullptr)
		*NewGMItem = std::move(Parms.NewGMItem);
}


// Function WBP_OptionMenu_CreateGame.WBP_OptionMenu_CreateGame_C.SetMapPreviewImage
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UTexture2D*                       NewImg                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_OptionMenu_CreateGame_C::SetMapPreviewImage(class UTexture2D* NewImg)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_OptionMenu_CreateGame_C", "SetMapPreviewImage");

	Params::WBP_OptionMenu_CreateGame_C_SetMapPreviewImage Parms{};

	Parms.NewImg = NewImg;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_OptionMenu_CreateGame.WBP_OptionMenu_CreateGame_C.ClearMapPreviewImage
// (Public, BlueprintCallable, BlueprintEvent)

void UWBP_OptionMenu_CreateGame_C::ClearMapPreviewImage()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_OptionMenu_CreateGame_C", "ClearMapPreviewImage");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_OptionMenu_CreateGame.WBP_OptionMenu_CreateGame_C.UpdateStartButtonState
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   CallFunc_BP_GetNumItemsSelected_ReturnValue            (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   CallFunc_BP_GetNumItemsSelected_ReturnValue_1          (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    CallFunc_Greater_IntInt_ReturnValue                    (ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    CallFunc_Greater_IntInt_ReturnValue_1                  (ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    CallFunc_BooleanAND_ReturnValue                        (ZeroConstructor, IsPlainOldData, NoDestructor)

void UWBP_OptionMenu_CreateGame_C::UpdateStartButtonState(int32 CallFunc_BP_GetNumItemsSelected_ReturnValue, int32 CallFunc_BP_GetNumItemsSelected_ReturnValue_1, bool CallFunc_Greater_IntInt_ReturnValue, bool CallFunc_Greater_IntInt_ReturnValue_1, bool CallFunc_BooleanAND_ReturnValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_OptionMenu_CreateGame_C", "UpdateStartButtonState");

	Params::WBP_OptionMenu_CreateGame_C_UpdateStartButtonState Parms{};

	Parms.CallFunc_BP_GetNumItemsSelected_ReturnValue = CallFunc_BP_GetNumItemsSelected_ReturnValue;
	Parms.CallFunc_BP_GetNumItemsSelected_ReturnValue_1 = CallFunc_BP_GetNumItemsSelected_ReturnValue_1;
	Parms.CallFunc_Greater_IntInt_ReturnValue = CallFunc_Greater_IntInt_ReturnValue;
	Parms.CallFunc_Greater_IntInt_ReturnValue_1 = CallFunc_Greater_IntInt_ReturnValue_1;
	Parms.CallFunc_BooleanAND_ReturnValue = CallFunc_BooleanAND_ReturnValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_OptionMenu_CreateGame.WBP_OptionMenu_CreateGame_C.SortMapList
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<struct FFMapInfo>                MapListToSort                                          (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
// bool                                    bDescending                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// TMap<class FName, struct FFMapInfo>     InfoMap                                                (Edit, BlueprintVisible)
// TArray<struct FAssetDescriptor>         MapDescriptors                                         (Edit, BlueprintVisible, HasGetValueTypeHash)
// int32                                   Temp_int_Array_Index_Variable                          (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   CallFunc_Array_Length_ReturnValue                      (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Temp_int_Array_Index_Variable_1                        (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Temp_int_Loop_Counter_Variable                         (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    CallFunc_Less_IntInt_ReturnValue                       (ZeroConstructor, IsPlainOldData, NoDestructor)
// int32                                   CallFunc_Add_IntInt_ReturnValue                        (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Temp_int_Array_Index_Variable_2                        (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FFMapInfo                        CallFunc_Array_Get_Item                                (HasGetValueTypeHash)
// int32                                   Temp_int_Loop_Counter_Variable_1                       (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FAssetDescriptor                 CallFunc_Array_Get_Item_1                              ()
// int32                                   CallFunc_Add_IntInt_ReturnValue_1                      (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FFMapInfo                        CallFunc_Map_Find_Value                                (HasGetValueTypeHash)
// bool                                    CallFunc_Map_Find_ReturnValue                          (ZeroConstructor, IsPlainOldData, NoDestructor)
// int32                                   CallFunc_Array_Length_ReturnValue_1                    (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Temp_int_Loop_Counter_Variable_2                       (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    CallFunc_Less_IntInt_ReturnValue_1                     (ZeroConstructor, IsPlainOldData, NoDestructor)
// int32                                   CallFunc_Add_IntInt_ReturnValue_2                      (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<struct FFMapInfo>                CallFunc_Map_Values_Values                             (ReferenceParm, HasGetValueTypeHash)
// struct FFMapInfo                        CallFunc_Array_Get_Item_2                              (HasGetValueTypeHash)
// int32                                   CallFunc_Array_Length_ReturnValue_2                    (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FAssetDescriptor                 K2Node_MakeStruct_AssetDescriptor                      ()
// int32                                   CallFunc_Array_Length_ReturnValue_3                    (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    CallFunc_Less_IntInt_ReturnValue_2                     (ZeroConstructor, IsPlainOldData, NoDestructor)
// int32                                   CallFunc_Array_Add_ReturnValue                         (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_OptionMenu_CreateGame_C::SortMapList(TArray<struct FFMapInfo>& MapListToSort, bool bDescending, const TMap<class FName, struct FFMapInfo>& InfoMap, const TArray<struct FAssetDescriptor>& MapDescriptors, int32 Temp_int_Array_Index_Variable, int32 CallFunc_Array_Length_ReturnValue, int32 Temp_int_Array_Index_Variable_1, int32 Temp_int_Loop_Counter_Variable, bool CallFunc_Less_IntInt_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue, int32 Temp_int_Array_Index_Variable_2, const struct FFMapInfo& CallFunc_Array_Get_Item, int32 Temp_int_Loop_Counter_Variable_1, const struct FAssetDescriptor& CallFunc_Array_Get_Item_1, int32 CallFunc_Add_IntInt_ReturnValue_1, const struct FFMapInfo& CallFunc_Map_Find_Value, bool CallFunc_Map_Find_ReturnValue, int32 CallFunc_Array_Length_ReturnValue_1, int32 Temp_int_Loop_Counter_Variable_2, bool CallFunc_Less_IntInt_ReturnValue_1, int32 CallFunc_Add_IntInt_ReturnValue_2, TArray<struct FFMapInfo>& CallFunc_Map_Values_Values, const struct FFMapInfo& CallFunc_Array_Get_Item_2, int32 CallFunc_Array_Length_ReturnValue_2, const struct FAssetDescriptor& K2Node_MakeStruct_AssetDescriptor, int32 CallFunc_Array_Length_ReturnValue_3, bool CallFunc_Less_IntInt_ReturnValue_2, int32 CallFunc_Array_Add_ReturnValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_OptionMenu_CreateGame_C", "SortMapList");

	Params::WBP_OptionMenu_CreateGame_C_SortMapList Parms{};

	Parms.MapListToSort = std::move(MapListToSort);
	Parms.bDescending = bDescending;
	Parms.InfoMap = std::move(InfoMap);
	Parms.MapDescriptors = std::move(MapDescriptors);
	Parms.Temp_int_Array_Index_Variable = Temp_int_Array_Index_Variable;
	Parms.CallFunc_Array_Length_ReturnValue = CallFunc_Array_Length_ReturnValue;
	Parms.Temp_int_Array_Index_Variable_1 = Temp_int_Array_Index_Variable_1;
	Parms.Temp_int_Loop_Counter_Variable = Temp_int_Loop_Counter_Variable;
	Parms.CallFunc_Less_IntInt_ReturnValue = CallFunc_Less_IntInt_ReturnValue;
	Parms.CallFunc_Add_IntInt_ReturnValue = CallFunc_Add_IntInt_ReturnValue;
	Parms.Temp_int_Array_Index_Variable_2 = Temp_int_Array_Index_Variable_2;
	Parms.CallFunc_Array_Get_Item = std::move(CallFunc_Array_Get_Item);
	Parms.Temp_int_Loop_Counter_Variable_1 = Temp_int_Loop_Counter_Variable_1;
	Parms.CallFunc_Array_Get_Item_1 = std::move(CallFunc_Array_Get_Item_1);
	Parms.CallFunc_Add_IntInt_ReturnValue_1 = CallFunc_Add_IntInt_ReturnValue_1;
	Parms.CallFunc_Map_Find_Value = std::move(CallFunc_Map_Find_Value);
	Parms.CallFunc_Map_Find_ReturnValue = CallFunc_Map_Find_ReturnValue;
	Parms.CallFunc_Array_Length_ReturnValue_1 = CallFunc_Array_Length_ReturnValue_1;
	Parms.Temp_int_Loop_Counter_Variable_2 = Temp_int_Loop_Counter_Variable_2;
	Parms.CallFunc_Less_IntInt_ReturnValue_1 = CallFunc_Less_IntInt_ReturnValue_1;
	Parms.CallFunc_Add_IntInt_ReturnValue_2 = CallFunc_Add_IntInt_ReturnValue_2;
	Parms.CallFunc_Map_Values_Values = std::move(CallFunc_Map_Values_Values);
	Parms.CallFunc_Array_Get_Item_2 = std::move(CallFunc_Array_Get_Item_2);
	Parms.CallFunc_Array_Length_ReturnValue_2 = CallFunc_Array_Length_ReturnValue_2;
	Parms.K2Node_MakeStruct_AssetDescriptor = std::move(K2Node_MakeStruct_AssetDescriptor);
	Parms.CallFunc_Array_Length_ReturnValue_3 = CallFunc_Array_Length_ReturnValue_3;
	Parms.CallFunc_Less_IntInt_ReturnValue_2 = CallFunc_Less_IntInt_ReturnValue_2;
	Parms.CallFunc_Array_Add_ReturnValue = CallFunc_Array_Add_ReturnValue;

	UObject::ProcessEvent(Func, &Parms);

	MapListToSort = std::move(Parms.MapListToSort);
	CallFunc_Map_Values_Values = std::move(Parms.CallFunc_Map_Values_Values);
}


// Function WBP_OptionMenu_CreateGame.WBP_OptionMenu_CreateGame_C.SortGMList
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<struct FFGameModeInfo>           GMListToSort                                           (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
// bool                                    bDescending                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// TMap<class FName, struct FFGameModeInfo>InfoMap                                                (Edit, BlueprintVisible)
// TArray<struct FAssetDescriptor>         GMDescriptors                                          (Edit, BlueprintVisible, HasGetValueTypeHash)
// int32                                   Temp_int_Array_Index_Variable                          (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   CallFunc_Array_Length_ReturnValue                      (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FFGameModeInfo                   CallFunc_Array_Get_Item                                (HasGetValueTypeHash)
// int32                                   Temp_int_Array_Index_Variable_1                        (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Temp_int_Loop_Counter_Variable                         (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   CallFunc_Add_IntInt_ReturnValue                        (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Temp_int_Array_Index_Variable_2                        (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Temp_int_Loop_Counter_Variable_1                       (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   CallFunc_Add_IntInt_ReturnValue_1                      (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Temp_int_Loop_Counter_Variable_2                       (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    CallFunc_Less_IntInt_ReturnValue                       (ZeroConstructor, IsPlainOldData, NoDestructor)
// int32                                   CallFunc_Add_IntInt_ReturnValue_2                      (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FAssetDescriptor                 CallFunc_Array_Get_Item_1                              ()
// int32                                   CallFunc_Array_Length_ReturnValue_1                    (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FFGameModeInfo                   CallFunc_Map_Find_Value                                (HasGetValueTypeHash)
// bool                                    CallFunc_Map_Find_ReturnValue                          (ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    CallFunc_Less_IntInt_ReturnValue_1                     (ZeroConstructor, IsPlainOldData, NoDestructor)
// TArray<struct FFGameModeInfo>           CallFunc_Map_Values_Values                             (ReferenceParm, HasGetValueTypeHash)
// int32                                   CallFunc_Array_Length_ReturnValue_2                    (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FFGameModeInfo                   CallFunc_Array_Get_Item_2                              (HasGetValueTypeHash)
// int32                                   CallFunc_Array_Length_ReturnValue_3                    (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FAssetDescriptor                 K2Node_MakeStruct_AssetDescriptor                      ()
// bool                                    CallFunc_Less_IntInt_ReturnValue_2                     (ZeroConstructor, IsPlainOldData, NoDestructor)
// int32                                   CallFunc_Array_Add_ReturnValue                         (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_OptionMenu_CreateGame_C::SortGMList(TArray<struct FFGameModeInfo>& GMListToSort, bool bDescending, const TMap<class FName, struct FFGameModeInfo>& InfoMap, const TArray<struct FAssetDescriptor>& GMDescriptors, int32 Temp_int_Array_Index_Variable, int32 CallFunc_Array_Length_ReturnValue, const struct FFGameModeInfo& CallFunc_Array_Get_Item, int32 Temp_int_Array_Index_Variable_1, int32 Temp_int_Loop_Counter_Variable, int32 CallFunc_Add_IntInt_ReturnValue, int32 Temp_int_Array_Index_Variable_2, int32 Temp_int_Loop_Counter_Variable_1, int32 CallFunc_Add_IntInt_ReturnValue_1, int32 Temp_int_Loop_Counter_Variable_2, bool CallFunc_Less_IntInt_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue_2, const struct FAssetDescriptor& CallFunc_Array_Get_Item_1, int32 CallFunc_Array_Length_ReturnValue_1, const struct FFGameModeInfo& CallFunc_Map_Find_Value, bool CallFunc_Map_Find_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue_1, TArray<struct FFGameModeInfo>& CallFunc_Map_Values_Values, int32 CallFunc_Array_Length_ReturnValue_2, const struct FFGameModeInfo& CallFunc_Array_Get_Item_2, int32 CallFunc_Array_Length_ReturnValue_3, const struct FAssetDescriptor& K2Node_MakeStruct_AssetDescriptor, bool CallFunc_Less_IntInt_ReturnValue_2, int32 CallFunc_Array_Add_ReturnValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_OptionMenu_CreateGame_C", "SortGMList");

	Params::WBP_OptionMenu_CreateGame_C_SortGMList Parms{};

	Parms.GMListToSort = std::move(GMListToSort);
	Parms.bDescending = bDescending;
	Parms.InfoMap = std::move(InfoMap);
	Parms.GMDescriptors = std::move(GMDescriptors);
	Parms.Temp_int_Array_Index_Variable = Temp_int_Array_Index_Variable;
	Parms.CallFunc_Array_Length_ReturnValue = CallFunc_Array_Length_ReturnValue;
	Parms.CallFunc_Array_Get_Item = std::move(CallFunc_Array_Get_Item);
	Parms.Temp_int_Array_Index_Variable_1 = Temp_int_Array_Index_Variable_1;
	Parms.Temp_int_Loop_Counter_Variable = Temp_int_Loop_Counter_Variable;
	Parms.CallFunc_Add_IntInt_ReturnValue = CallFunc_Add_IntInt_ReturnValue;
	Parms.Temp_int_Array_Index_Variable_2 = Temp_int_Array_Index_Variable_2;
	Parms.Temp_int_Loop_Counter_Variable_1 = Temp_int_Loop_Counter_Variable_1;
	Parms.CallFunc_Add_IntInt_ReturnValue_1 = CallFunc_Add_IntInt_ReturnValue_1;
	Parms.Temp_int_Loop_Counter_Variable_2 = Temp_int_Loop_Counter_Variable_2;
	Parms.CallFunc_Less_IntInt_ReturnValue = CallFunc_Less_IntInt_ReturnValue;
	Parms.CallFunc_Add_IntInt_ReturnValue_2 = CallFunc_Add_IntInt_ReturnValue_2;
	Parms.CallFunc_Array_Get_Item_1 = std::move(CallFunc_Array_Get_Item_1);
	Parms.CallFunc_Array_Length_ReturnValue_1 = CallFunc_Array_Length_ReturnValue_1;
	Parms.CallFunc_Map_Find_Value = std::move(CallFunc_Map_Find_Value);
	Parms.CallFunc_Map_Find_ReturnValue = CallFunc_Map_Find_ReturnValue;
	Parms.CallFunc_Less_IntInt_ReturnValue_1 = CallFunc_Less_IntInt_ReturnValue_1;
	Parms.CallFunc_Map_Values_Values = std::move(CallFunc_Map_Values_Values);
	Parms.CallFunc_Array_Length_ReturnValue_2 = CallFunc_Array_Length_ReturnValue_2;
	Parms.CallFunc_Array_Get_Item_2 = std::move(CallFunc_Array_Get_Item_2);
	Parms.CallFunc_Array_Length_ReturnValue_3 = CallFunc_Array_Length_ReturnValue_3;
	Parms.K2Node_MakeStruct_AssetDescriptor = std::move(K2Node_MakeStruct_AssetDescriptor);
	Parms.CallFunc_Less_IntInt_ReturnValue_2 = CallFunc_Less_IntInt_ReturnValue_2;
	Parms.CallFunc_Array_Add_ReturnValue = CallFunc_Array_Add_ReturnValue;

	UObject::ProcessEvent(Func, &Parms);

	GMListToSort = std::move(Parms.GMListToSort);
	CallFunc_Map_Values_Values = std::move(Parms.CallFunc_Map_Values_Values);
}


// Function WBP_OptionMenu_CreateGame.WBP_OptionMenu_CreateGame_C.FilterExcludesMapPrefix
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class FString                           MapName                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// bool                                    bExcludePrefix                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class FString                           CallFunc_GetGameModeForMapName_ReturnValue             (ZeroConstructor, HasGetValueTypeHash)
// bool                                    CallFunc_IsValid_ReturnValue                           (ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FSoftClassPath                   CallFunc_MakeSoftClassPath_ReturnValue                 (ZeroConstructor, HasGetValueTypeHash)
// TSoftClassPtr<class UClass>             CallFunc_Conv_SoftClassPathToSoftClassRef_ReturnValue  (HasGetValueTypeHash)
// bool                                    CallFunc_NotEqual_SoftClassReference_ReturnValue       (ZeroConstructor, IsPlainOldData, NoDestructor)

void UWBP_OptionMenu_CreateGame_C::FilterExcludesMapPrefix(const class FString& MapName, bool* bExcludePrefix, const class FString& CallFunc_GetGameModeForMapName_ReturnValue, bool CallFunc_IsValid_ReturnValue, const struct FSoftClassPath& CallFunc_MakeSoftClassPath_ReturnValue, TSoftClassPtr<class UClass> CallFunc_Conv_SoftClassPathToSoftClassRef_ReturnValue, bool CallFunc_NotEqual_SoftClassReference_ReturnValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_OptionMenu_CreateGame_C", "FilterExcludesMapPrefix");

	Params::WBP_OptionMenu_CreateGame_C_FilterExcludesMapPrefix Parms{};

	Parms.MapName = std::move(MapName);
	Parms.CallFunc_GetGameModeForMapName_ReturnValue = std::move(CallFunc_GetGameModeForMapName_ReturnValue);
	Parms.CallFunc_IsValid_ReturnValue = CallFunc_IsValid_ReturnValue;
	Parms.CallFunc_MakeSoftClassPath_ReturnValue = std::move(CallFunc_MakeSoftClassPath_ReturnValue);
	Parms.CallFunc_Conv_SoftClassPathToSoftClassRef_ReturnValue = CallFunc_Conv_SoftClassPathToSoftClassRef_ReturnValue;
	Parms.CallFunc_NotEqual_SoftClassReference_ReturnValue = CallFunc_NotEqual_SoftClassReference_ReturnValue;

	UObject::ProcessEvent(Func, &Parms);

	if (bExcludePrefix != nullptr)
		*bExcludePrefix = std::move(Parms.bExcludePrefix);
}


// Function WBP_OptionMenu_CreateGame.WBP_OptionMenu_CreateGame_C.FilterExcludesGMClass
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// TSoftClassPtr<class UClass>             GMClass                                                (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
// bool                                    bLegacyAASSupport                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bExcludeGM                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    CallFunc_Not_PreBool_ReturnValue                       (ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    CallFunc_IsValid_ReturnValue                           (ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    CallFunc_EqualEqual_SoftClassReference_ReturnValue     (ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    CallFunc_IsValidSoftClassReference_ReturnValue         (ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    CallFunc_BooleanAND_ReturnValue                        (ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    CallFunc_NotEqual_SoftClassReference_ReturnValue       (ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    CallFunc_BooleanOR_ReturnValue                         (ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    CallFunc_BooleanAND_ReturnValue_1                      (ZeroConstructor, IsPlainOldData, NoDestructor)

void UWBP_OptionMenu_CreateGame_C::FilterExcludesGMClass(TSoftClassPtr<class UClass> GMClass, bool bLegacyAASSupport, bool* bExcludeGM, bool CallFunc_Not_PreBool_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool CallFunc_EqualEqual_SoftClassReference_ReturnValue, bool CallFunc_IsValidSoftClassReference_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, bool CallFunc_NotEqual_SoftClassReference_ReturnValue, bool CallFunc_BooleanOR_ReturnValue, bool CallFunc_BooleanAND_ReturnValue_1)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_OptionMenu_CreateGame_C", "FilterExcludesGMClass");

	Params::WBP_OptionMenu_CreateGame_C_FilterExcludesGMClass Parms{};

	Parms.GMClass = GMClass;
	Parms.bLegacyAASSupport = bLegacyAASSupport;
	Parms.CallFunc_Not_PreBool_ReturnValue = CallFunc_Not_PreBool_ReturnValue;
	Parms.CallFunc_IsValid_ReturnValue = CallFunc_IsValid_ReturnValue;
	Parms.CallFunc_EqualEqual_SoftClassReference_ReturnValue = CallFunc_EqualEqual_SoftClassReference_ReturnValue;
	Parms.CallFunc_IsValidSoftClassReference_ReturnValue = CallFunc_IsValidSoftClassReference_ReturnValue;
	Parms.CallFunc_BooleanAND_ReturnValue = CallFunc_BooleanAND_ReturnValue;
	Parms.CallFunc_NotEqual_SoftClassReference_ReturnValue = CallFunc_NotEqual_SoftClassReference_ReturnValue;
	Parms.CallFunc_BooleanOR_ReturnValue = CallFunc_BooleanOR_ReturnValue;
	Parms.CallFunc_BooleanAND_ReturnValue_1 = CallFunc_BooleanAND_ReturnValue_1;

	UObject::ProcessEvent(Func, &Parms);

	if (bExcludeGM != nullptr)
		*bExcludeGM = std::move(Parms.bExcludeGM);
}


// Function WBP_OptionMenu_CreateGame.WBP_OptionMenu_CreateGame_C.ContainsGMByClass
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// TSoftClassPtr<class UClass>             GMClass                                                (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
// bool                                    bContainsGM                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// int32                                   Temp_int_Array_Index_Variable                          (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Temp_int_Loop_Counter_Variable                         (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   CallFunc_Add_IntInt_ReturnValue                        (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UHDGameModeDefinition*            CallFunc_Array_Get_Item                                (ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   CallFunc_Array_Length_ReturnValue                      (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    CallFunc_Less_IntInt_ReturnValue                       (ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    CallFunc_EqualEqual_SoftClassReference_ReturnValue     (ZeroConstructor, IsPlainOldData, NoDestructor)

void UWBP_OptionMenu_CreateGame_C::ContainsGMByClass(TSoftClassPtr<class UClass> GMClass, bool* bContainsGM, int32 Temp_int_Array_Index_Variable, int32 Temp_int_Loop_Counter_Variable, int32 CallFunc_Add_IntInt_ReturnValue, class UHDGameModeDefinition* CallFunc_Array_Get_Item, int32 CallFunc_Array_Length_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, bool CallFunc_EqualEqual_SoftClassReference_ReturnValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_OptionMenu_CreateGame_C", "ContainsGMByClass");

	Params::WBP_OptionMenu_CreateGame_C_ContainsGMByClass Parms{};

	Parms.GMClass = GMClass;
	Parms.Temp_int_Array_Index_Variable = Temp_int_Array_Index_Variable;
	Parms.Temp_int_Loop_Counter_Variable = Temp_int_Loop_Counter_Variable;
	Parms.CallFunc_Add_IntInt_ReturnValue = CallFunc_Add_IntInt_ReturnValue;
	Parms.CallFunc_Array_Get_Item = CallFunc_Array_Get_Item;
	Parms.CallFunc_Array_Length_ReturnValue = CallFunc_Array_Length_ReturnValue;
	Parms.CallFunc_Less_IntInt_ReturnValue = CallFunc_Less_IntInt_ReturnValue;
	Parms.CallFunc_EqualEqual_SoftClassReference_ReturnValue = CallFunc_EqualEqual_SoftClassReference_ReturnValue;

	UObject::ProcessEvent(Func, &Parms);

	if (bContainsGM != nullptr)
		*bContainsGM = std::move(Parms.bContainsGM);
}


// Function WBP_OptionMenu_CreateGame.WBP_OptionMenu_CreateGame_C.FindGMDefinitionByClassName
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class FString                           ClassName                                              (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash)
// class UHDGameModeDefinition*            GMDef                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Temp_int_Array_Index_Variable                          (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Temp_int_Loop_Counter_Variable                         (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   CallFunc_Add_IntInt_ReturnValue                        (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   CallFunc_Array_Length_ReturnValue                      (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UHDGameModeDefinition*            CallFunc_Array_Get_Item                                (ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    CallFunc_Less_IntInt_ReturnValue                       (ZeroConstructor, IsPlainOldData, NoDestructor)
// class FString                           CallFunc_Conv_SoftClassReferenceToString_ReturnValue   (ZeroConstructor, HasGetValueTypeHash)
// bool                                    CallFunc_EqualEqual_StrStr_ReturnValue                 (ZeroConstructor, IsPlainOldData, NoDestructor)

void UWBP_OptionMenu_CreateGame_C::FindGMDefinitionByClassName(class FString& ClassName, class UHDGameModeDefinition** GMDef, int32 Temp_int_Array_Index_Variable, int32 Temp_int_Loop_Counter_Variable, int32 CallFunc_Add_IntInt_ReturnValue, int32 CallFunc_Array_Length_ReturnValue, class UHDGameModeDefinition* CallFunc_Array_Get_Item, bool CallFunc_Less_IntInt_ReturnValue, const class FString& CallFunc_Conv_SoftClassReferenceToString_ReturnValue, bool CallFunc_EqualEqual_StrStr_ReturnValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_OptionMenu_CreateGame_C", "FindGMDefinitionByClassName");

	Params::WBP_OptionMenu_CreateGame_C_FindGMDefinitionByClassName Parms{};

	Parms.ClassName = std::move(ClassName);
	Parms.Temp_int_Array_Index_Variable = Temp_int_Array_Index_Variable;
	Parms.Temp_int_Loop_Counter_Variable = Temp_int_Loop_Counter_Variable;
	Parms.CallFunc_Add_IntInt_ReturnValue = CallFunc_Add_IntInt_ReturnValue;
	Parms.CallFunc_Array_Length_ReturnValue = CallFunc_Array_Length_ReturnValue;
	Parms.CallFunc_Array_Get_Item = CallFunc_Array_Get_Item;
	Parms.CallFunc_Less_IntInt_ReturnValue = CallFunc_Less_IntInt_ReturnValue;
	Parms.CallFunc_Conv_SoftClassReferenceToString_ReturnValue = std::move(CallFunc_Conv_SoftClassReferenceToString_ReturnValue);
	Parms.CallFunc_EqualEqual_StrStr_ReturnValue = CallFunc_EqualEqual_StrStr_ReturnValue;

	UObject::ProcessEvent(Func, &Parms);

	ClassName = std::move(Parms.ClassName);

	if (GMDef != nullptr)
		*GMDef = std::move(Parms.GMDef);
}


// Function WBP_OptionMenu_CreateGame.WBP_OptionMenu_CreateGame_C.GetValidDisplayNameForGMDefinition
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UHDGameModeDefinition*            GMDef                                                  (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FText                             DisplayName                                            (Parm, OutParm)
// bool                                    Temp_bool_Variable                                     (ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FPrimaryAssetId                  CallFunc_GetPrimaryAssetIdFromObject_ReturnValue       (ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    CallFunc_IsValidSoftClassReference_ReturnValue         (ZeroConstructor, IsPlainOldData, NoDestructor)
// class FText                             CallFunc_Conv_NameToText_ReturnValue                   ()
// class FString                           CallFunc_Conv_SoftClassReferenceToString_ReturnValue   (ZeroConstructor, HasGetValueTypeHash)
// bool                                    CallFunc_GetPackageShortName_bSuccess                  (ZeroConstructor, IsPlainOldData, NoDestructor)
// class FString                           CallFunc_GetPackageShortName_ShortName                 (ZeroConstructor, HasGetValueTypeHash)
// bool                                    CallFunc_TextIsEmptyOrWhitespace_ReturnValue           (ZeroConstructor, IsPlainOldData, NoDestructor)
// int32                                   CallFunc_Len_ReturnValue                               (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   CallFunc_FindSubstring_ReturnValue                     (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Temp_bool_Variable_1                                   (ZeroConstructor, IsPlainOldData, NoDestructor)
// int32                                   CallFunc_Add_IntInt_ReturnValue                        (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   CallFunc_Subtract_IntInt_ReturnValue                   (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Temp_bool_Variable_2                                   (ZeroConstructor, IsPlainOldData, NoDestructor)
// class FString                           CallFunc_Right_ReturnValue                             (ZeroConstructor, HasGetValueTypeHash)
// bool                                    CallFunc_EndsWith_ReturnValue                          (ZeroConstructor, IsPlainOldData, NoDestructor)
// class FString                           CallFunc_LeftChop_ReturnValue                          (ZeroConstructor, HasGetValueTypeHash)
// class FString                           K2Node_Select_Default                                  (ZeroConstructor, HasGetValueTypeHash)
// class FText                             CallFunc_Conv_StringToText_ReturnValue                 ()
// class FText                             K2Node_Select_Default_1                                ()
// class FText                             K2Node_Select_Default_2                                ()

void UWBP_OptionMenu_CreateGame_C::GetValidDisplayNameForGMDefinition(class UHDGameModeDefinition* GMDef, class FText* DisplayName, bool Temp_bool_Variable, const struct FPrimaryAssetId& CallFunc_GetPrimaryAssetIdFromObject_ReturnValue, bool CallFunc_IsValidSoftClassReference_ReturnValue, class FText CallFunc_Conv_NameToText_ReturnValue, const class FString& CallFunc_Conv_SoftClassReferenceToString_ReturnValue, bool CallFunc_GetPackageShortName_bSuccess, const class FString& CallFunc_GetPackageShortName_ShortName, bool CallFunc_TextIsEmptyOrWhitespace_ReturnValue, int32 CallFunc_Len_ReturnValue, int32 CallFunc_FindSubstring_ReturnValue, bool Temp_bool_Variable_1, int32 CallFunc_Add_IntInt_ReturnValue, int32 CallFunc_Subtract_IntInt_ReturnValue, bool Temp_bool_Variable_2, const class FString& CallFunc_Right_ReturnValue, bool CallFunc_EndsWith_ReturnValue, const class FString& CallFunc_LeftChop_ReturnValue, const class FString& K2Node_Select_Default, class FText CallFunc_Conv_StringToText_ReturnValue, class FText K2Node_Select_Default_1, class FText K2Node_Select_Default_2)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_OptionMenu_CreateGame_C", "GetValidDisplayNameForGMDefinition");

	Params::WBP_OptionMenu_CreateGame_C_GetValidDisplayNameForGMDefinition Parms{};

	Parms.GMDef = GMDef;
	Parms.Temp_bool_Variable = Temp_bool_Variable;
	Parms.CallFunc_GetPrimaryAssetIdFromObject_ReturnValue = std::move(CallFunc_GetPrimaryAssetIdFromObject_ReturnValue);
	Parms.CallFunc_IsValidSoftClassReference_ReturnValue = CallFunc_IsValidSoftClassReference_ReturnValue;
	Parms.CallFunc_Conv_NameToText_ReturnValue = CallFunc_Conv_NameToText_ReturnValue;
	Parms.CallFunc_Conv_SoftClassReferenceToString_ReturnValue = std::move(CallFunc_Conv_SoftClassReferenceToString_ReturnValue);
	Parms.CallFunc_GetPackageShortName_bSuccess = CallFunc_GetPackageShortName_bSuccess;
	Parms.CallFunc_GetPackageShortName_ShortName = std::move(CallFunc_GetPackageShortName_ShortName);
	Parms.CallFunc_TextIsEmptyOrWhitespace_ReturnValue = CallFunc_TextIsEmptyOrWhitespace_ReturnValue;
	Parms.CallFunc_Len_ReturnValue = CallFunc_Len_ReturnValue;
	Parms.CallFunc_FindSubstring_ReturnValue = CallFunc_FindSubstring_ReturnValue;
	Parms.Temp_bool_Variable_1 = Temp_bool_Variable_1;
	Parms.CallFunc_Add_IntInt_ReturnValue = CallFunc_Add_IntInt_ReturnValue;
	Parms.CallFunc_Subtract_IntInt_ReturnValue = CallFunc_Subtract_IntInt_ReturnValue;
	Parms.Temp_bool_Variable_2 = Temp_bool_Variable_2;
	Parms.CallFunc_Right_ReturnValue = std::move(CallFunc_Right_ReturnValue);
	Parms.CallFunc_EndsWith_ReturnValue = CallFunc_EndsWith_ReturnValue;
	Parms.CallFunc_LeftChop_ReturnValue = std::move(CallFunc_LeftChop_ReturnValue);
	Parms.K2Node_Select_Default = std::move(K2Node_Select_Default);
	Parms.CallFunc_Conv_StringToText_ReturnValue = CallFunc_Conv_StringToText_ReturnValue;
	Parms.K2Node_Select_Default_1 = K2Node_Select_Default_1;
	Parms.K2Node_Select_Default_2 = K2Node_Select_Default_2;

	UObject::ProcessEvent(Func, &Parms);

	if (DisplayName != nullptr)
		*DisplayName = std::move(Parms.DisplayName);
}

}

