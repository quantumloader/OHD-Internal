#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AugmentedReality

#include "Basic.hpp"

#include "Engine_classes.hpp"
#include "AugmentedReality_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "CoreUObject_classes.hpp"


namespace SDK
{

// Class AugmentedReality.ARBlueprintLibrary
// 0x0000 (0x0028 - 0x0028)
class UARBlueprintLibrary final  : public UBlueprintFunctionLibrary
{
public:
	static bool AddManualEnvironmentCaptureProbe(const struct FVector& Location, const struct FVector& Extent);
	static class UARCandidateImage* AddRuntimeCandidateImage(class UARSessionConfig* SessionConfig, class UTexture2D* CandidateTexture, const class FString& FriendlyName, float PhysicalWidth);
	static void DebugDrawPin(class UARPin* ARPin, class UObject* WorldContextObject, const struct FLinearColor& Color, float Scale, float PersistForSeconds);
	static void DebugDrawTrackedGeometry(class UARTrackedGeometry* TrackedGeometry, class UObject* WorldContextObject, const struct FLinearColor& Color, float OutlineThickness, float PersistForSeconds);
	static TArray<class UARTrackedGeometry*> GetAllGeometries();
	static TArray<class UARPin*> GetAllPins();
	static TArray<struct FARPose2D> GetAllTracked2DPoses();
	static TArray<class UAREnvironmentCaptureProbe*> GetAllTrackedEnvironmentCaptureProbes();
	static TArray<class UARTrackedImage*> GetAllTrackedImages();
	static TArray<class UARPlaneGeometry*> GetAllTrackedPlanes();
	static TArray<class UARTrackedPoint*> GetAllTrackedPoints();
	static TArray<class UARTrackedPose*> GetAllTrackedPoses();
	static struct FARSessionStatus GetARSessionStatus();
	static class UARTextureCameraDepth* GetCameraDepth();
	static class UARTextureCameraImage* GetCameraImage();
	static class UARLightEstimate* GetCurrentLightEstimate();
	static class UARTextureCameraImage* GetPersonSegmentationDepthImage();
	static class UARTextureCameraImage* GetPersonSegmentationImage();
	static TArray<struct FVector> GetPointCloud();
	static class UARSessionConfig* GetSessionConfig();
	static TArray<struct FARVideoFormat> GetSupportedVideoFormats(enum class EARSessionType SessionType);
	static enum class EARTrackingQuality GetTrackingQuality();
	static enum class EARTrackingQualityReason GetTrackingQualityReason();
	static enum class EARWorldMappingState GetWorldMappingStatus();
	static bool IsARSupported();
	static bool IsSessionTrackingFeatureSupported(enum class EARSessionType SessionType, enum class EARSessionTrackingFeature SessionTrackingFeature);
	static bool IsSessionTypeSupported(enum class EARSessionType SessionType);
	static TArray<struct FARTraceResult> LineTraceTrackedObjects(struct FVector2D& ScreenCoord, bool bTestFeaturePoints, bool bTestGroundPlane, bool bTestPlaneExtents, bool bTestPlaneBoundaryPolygon);
	static TArray<struct FARTraceResult> LineTraceTrackedObjects3D(struct FVector& Start, struct FVector& End, bool bTestFeaturePoints, bool bTestGroundPlane, bool bTestPlaneExtents, bool bTestPlaneBoundaryPolygon);
	static void PauseARSession();
	static class UARPin* PinComponent(class USceneComponent* ComponentToPin, struct FTransform& PinToWorldTransform, class UARTrackedGeometry* TrackedGeometry, class FName DebugName);
	static class UARPin* PinComponentToTraceResult(class USceneComponent* ComponentToPin, struct FARTraceResult& TraceResult, class FName DebugName);
	static void RemovePin(class UARPin* PinToRemove);
	static void SetAlignmentTransform(struct FTransform& InAlignmentTransform);
	static void StartARSession(class UARSessionConfig* SessionConfig);
	static void StopARSession();
	static void UnpinComponent(class USceneComponent* ComponentToUnpin);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ARBlueprintLibrary">();
	}
	static class UARBlueprintLibrary* GetDefaultObj()
	{
		return GetDefaultObjImpl<UARBlueprintLibrary>();
	}
};

// Class AugmentedReality.ARTraceResultLibrary
// 0x0000 (0x0028 - 0x0028)
class UARTraceResultLibrary final  : public UBlueprintFunctionLibrary
{
public:
	static float GetDistanceFromCamera(struct FARTraceResult& TraceResult);
	static struct FTransform GetLocalToTrackingTransform(struct FARTraceResult& TraceResult);
	static struct FTransform GetLocalToWorldTransform(struct FARTraceResult& TraceResult);
	static enum class EARLineTraceChannels GetTraceChannel(struct FARTraceResult& TraceResult);
	static class UARTrackedGeometry* GetTrackedGeometry(struct FARTraceResult& TraceResult);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ARTraceResultLibrary">();
	}
	static class UARTraceResultLibrary* GetDefaultObj()
	{
		return GetDefaultObjImpl<UARTraceResultLibrary>();
	}
};

// Class AugmentedReality.ARBaseAsyncTaskBlueprintProxy
// 0x0020 (0x0050 - 0x0030)
class UARBaseAsyncTaskBlueprintProxy : public UBlueprintAsyncActionBase
{
public:
	uint8                                         Pad_12CF[0x20];                                    // 0x0030(0x0020)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ARBaseAsyncTaskBlueprintProxy">();
	}
	static class UARBaseAsyncTaskBlueprintProxy* GetDefaultObj()
	{
		return GetDefaultObjImpl<UARBaseAsyncTaskBlueprintProxy>();
	}
};

// Class AugmentedReality.ARSaveWorldAsyncTaskBlueprintProxy
// 0x0030 (0x0080 - 0x0050)
class UARSaveWorldAsyncTaskBlueprintProxy final  : public UARBaseAsyncTaskBlueprintProxy
{
public:
	FMulticastInlineDelegateProperty_             OnSuccess;                                         // 0x0050(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             OnFailed;                                          // 0x0060(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_12D0[0x10];                                    // 0x0070(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UARSaveWorldAsyncTaskBlueprintProxy* ARSaveWorld(class UObject* WorldContextObject);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ARSaveWorldAsyncTaskBlueprintProxy">();
	}
	static class UARSaveWorldAsyncTaskBlueprintProxy* GetDefaultObj()
	{
		return GetDefaultObjImpl<UARSaveWorldAsyncTaskBlueprintProxy>();
	}
};

// Class AugmentedReality.ARGetCandidateObjectAsyncTaskBlueprintProxy
// 0x0048 (0x0098 - 0x0050)
class UARGetCandidateObjectAsyncTaskBlueprintProxy final  : public UARBaseAsyncTaskBlueprintProxy
{
public:
	FMulticastInlineDelegateProperty_             OnSuccess;                                         // 0x0050(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             OnFailed;                                          // 0x0060(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_12D1[0x28];                                    // 0x0070(0x0028)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UARGetCandidateObjectAsyncTaskBlueprintProxy* ARGetCandidateObject(class UObject* WorldContextObject, const struct FVector& Location, const struct FVector& Extent);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ARGetCandidateObjectAsyncTaskBlueprintProxy">();
	}
	static class UARGetCandidateObjectAsyncTaskBlueprintProxy* GetDefaultObj()
	{
		return GetDefaultObjImpl<UARGetCandidateObjectAsyncTaskBlueprintProxy>();
	}
};

// Class AugmentedReality.ARLightEstimate
// 0x0000 (0x0028 - 0x0028)
class UARLightEstimate : public UObject
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ARLightEstimate">();
	}
	static class UARLightEstimate* GetDefaultObj()
	{
		return GetDefaultObjImpl<UARLightEstimate>();
	}
};

// Class AugmentedReality.ARBasicLightEstimate
// 0x0018 (0x0040 - 0x0028)
class UARBasicLightEstimate final  : public UARLightEstimate
{
public:
	float                                         AmbientIntensityLumens;                            // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         AmbientColorTemperatureKelvin;                     // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FLinearColor                           AmbientColor;                                      // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	struct FLinearColor GetAmbientColor() const;
	float GetAmbientColorTemperatureKelvin() const;
	float GetAmbientIntensityLumens() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ARBasicLightEstimate">();
	}
	static class UARBasicLightEstimate* GetDefaultObj()
	{
		return GetDefaultObjImpl<UARBasicLightEstimate>();
	}
};

// Class AugmentedReality.AROriginActor
// 0x0000 (0x0220 - 0x0220)
class AAROriginActor final  : public AActor
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"AROriginActor">();
	}
	static class AAROriginActor* GetDefaultObj()
	{
		return GetDefaultObjImpl<AAROriginActor>();
	}
};

// Class AugmentedReality.ARPin
// 0x00C8 (0x00F0 - 0x0028)
class UARPin final  : public UObject
{
public:
	class UARTrackedGeometry*                     TrackedGeometry;                                   // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class USceneComponent*                        PinnedComponent;                                   // 0x0030(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_12D2[0x8];                                     // 0x0038(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             LocalToTrackingTransform;                          // 0x0040(0x0030)(IsPlainOldData, NoDestructor, NativeAccessSpecifierPrivate)
	struct FTransform                             LocalToAlignedTrackingTransform;                   // 0x0070(0x0030)(IsPlainOldData, NoDestructor, NativeAccessSpecifierPrivate)
	enum class EARTrackingState                   TrackingState;                                     // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_12D3[0x1F];                                    // 0x00A1(0x001F)(Fixing Size After Last Property [ Dumper-7 ])
	FMulticastInlineDelegateProperty_             OnARTrackingStateChanged;                          // 0x00C0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPrivate)
	FMulticastInlineDelegateProperty_             OnARTransformUpdated;                              // 0x00D0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPrivate)
	uint8                                         Pad_12D4[0x10];                                    // 0x00E0(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void DebugDraw(class UWorld* World, struct FLinearColor& Color, float Scale, float PersistForSeconds) const;
	class FName GetDebugName() const;
	struct FTransform GetLocalToTrackingTransform() const;
	struct FTransform GetLocalToWorldTransform() const;
	class USceneComponent* GetPinnedComponent() const;
	class UARTrackedGeometry* GetTrackedGeometry() const;
	enum class EARTrackingState GetTrackingState() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ARPin">();
	}
	static class UARPin* GetDefaultObj()
	{
		return GetDefaultObjImpl<UARPin>();
	}
};

// Class AugmentedReality.ARSessionConfig
// 0x0078 (0x00A8 - 0x0030)
class UARSessionConfig final  : public UDataAsset
{
public:
	bool                                          bGenerateMeshDataFromTrackedGeometry;              // 0x0030(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bGenerateCollisionForMeshData;                     // 0x0031(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bGenerateNavMeshForMeshData;                       // 0x0032(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUseMeshDataForOcclusion;                          // 0x0033(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bRenderMeshDataInWireframe;                        // 0x0034(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bTrackSceneObjects;                                // 0x0035(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUsePersonSegmentationForOcclusion;                // 0x0036(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EARWorldAlignment                  WorldAlignment;                                    // 0x0037(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EARSessionType                     SessionType;                                       // 0x0038(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EARPlaneDetectionMode              PlaneDetectionMode;                                // 0x0039(0x0001)(ZeroConstructor, Deprecated, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bHorizontalPlaneDetection;                         // 0x003A(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bVerticalPlaneDetection;                           // 0x003B(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bEnableAutoFocus;                                  // 0x003C(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EARLightEstimationMode             LightEstimationMode;                               // 0x003D(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EARFrameSyncMode                   FrameSyncMode;                                     // 0x003E(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bEnableAutomaticCameraOverlay;                     // 0x003F(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bEnableAutomaticCameraTracking;                    // 0x0040(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bResetCameraTracking;                              // 0x0041(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bResetTrackedObjects;                              // 0x0042(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_12D5[0x5];                                     // 0x0043(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UARCandidateImage*>              CandidateImages;                                   // 0x0048(0x0010)(Edit, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                         MaxNumSimultaneousImagesTracked;                   // 0x0058(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EAREnvironmentCaptureProbeType     EnvironmentCaptureProbeType;                       // 0x005C(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_12D6[0x3];                                     // 0x005D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<uint8>                                 WorldMapData;                                      // 0x0060(0x0010)(Edit, ZeroConstructor, EditConst, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UARCandidateObject*>             CandidateObjects;                                  // 0x0070(0x0010)(Edit, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FARVideoFormat                         DesiredVideoFormat;                                // 0x0080(0x0010)(Edit, NoDestructor, Protected, NativeAccessSpecifierProtected)
	enum class EARFaceTrackingDirection           FaceTrackingDirection;                             // 0x008C(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EARFaceTrackingUpdate              FaceTrackingUpdate;                                // 0x008D(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_12D7[0x2];                                     // 0x008E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<uint8>                                 SerializedARCandidateImageDatabase;                // 0x0090(0x0010)(ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EARSessionTrackingFeature          EnabledSessionTrackingFeature;                     // 0x00A0(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	void AddCandidateImage(class UARCandidateImage* NewCandidateImage);
	void AddCandidateObject(class UARCandidateObject* CandidateObject);
	void SetCandidateObjectList(TArray<class UARCandidateObject*>& InCandidateObjects);
	void SetDesiredVideoFormat(const struct FARVideoFormat& NewFormat);
	void SetEnableAutoFocus(bool bNewValue);
	void SetFaceTrackingDirection(enum class EARFaceTrackingDirection InDirection);
	void SetFaceTrackingUpdate(enum class EARFaceTrackingUpdate InUpdate);
	void SetResetCameraTracking(bool bNewValue);
	void SetResetTrackedObjects(bool bNewValue);
	void SetSessionTrackingFeatureToEnable(enum class EARSessionTrackingFeature InSessionTrackingFeature);
	void SetWorldMapData(const TArray<uint8>& Param_WorldMapData);

	const TArray<class UARCandidateImage*> GetCandidateImageList() const;
	const TArray<class UARCandidateObject*> GetCandidateObjectList() const;
	struct FARVideoFormat GetDesiredVideoFormat() const;
	enum class EARSessionTrackingFeature GetEnabledSessionTrackingFeature() const;
	enum class EAREnvironmentCaptureProbeType GetEnvironmentCaptureProbeType() const;
	enum class EARFaceTrackingDirection GetFaceTrackingDirection() const;
	enum class EARFaceTrackingUpdate GetFaceTrackingUpdate() const;
	enum class EARFrameSyncMode GetFrameSyncMode() const;
	enum class EARLightEstimationMode GetLightEstimationMode() const;
	int32 GetMaxNumSimultaneousImagesTracked() const;
	enum class EARPlaneDetectionMode GetPlaneDetectionMode() const;
	enum class EARSessionType GetSessionType() const;
	enum class EARWorldAlignment GetWorldAlignment() const;
	const TArray<uint8> GetWorldMapData() const;
	bool ShouldEnableAutoFocus() const;
	bool ShouldEnableCameraTracking() const;
	bool ShouldRenderCameraOverlay() const;
	bool ShouldResetCameraTracking() const;
	bool ShouldResetTrackedObjects() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ARSessionConfig">();
	}
	static class UARSessionConfig* GetDefaultObj()
	{
		return GetDefaultObjImpl<UARSessionConfig>();
	}
};

// Class AugmentedReality.ARSharedWorldGameMode
// 0x0068 (0x0370 - 0x0308)
class AARSharedWorldGameMode final  : public AGameMode
{
public:
	int32                                         BufferSizePerChunk;                                // 0x0308(0x0004)(Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_12D8[0x64];                                    // 0x030C(0x0064)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	class AARSharedWorldGameState* GetARSharedWorldGameState();
	void SetARSharedWorldData(const TArray<uint8>& ARWorldData);
	void SetARWorldSharingIsReady();
	void SetPreviewImageData(const TArray<uint8>& ImageData);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ARSharedWorldGameMode">();
	}
	static class AARSharedWorldGameMode* GetDefaultObj()
	{
		return GetDefaultObjImpl<AARSharedWorldGameMode>();
	}
};

// Class AugmentedReality.ARSharedWorldGameState
// 0x0038 (0x02C8 - 0x0290)
class AARSharedWorldGameState final  : public AGameState
{
public:
	TArray<uint8>                                 PreviewImageData;                                  // 0x0290(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<uint8>                                 ARWorldData;                                       // 0x02A0(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         PreviewImageBytesTotal;                            // 0x02B0(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ARWorldBytesTotal;                                 // 0x02B4(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         PreviewImageBytesDelivered;                        // 0x02B8(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ARWorldBytesDelivered;                             // 0x02BC(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_12D9[0x8];                                     // 0x02C0(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void K2_OnARWorldMapIsReady();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ARSharedWorldGameState">();
	}
	static class AARSharedWorldGameState* GetDefaultObj()
	{
		return GetDefaultObjImpl<AARSharedWorldGameState>();
	}
};

// Class AugmentedReality.ARSharedWorldPlayerController
// 0x0008 (0x0578 - 0x0570)
class AARSharedWorldPlayerController final  : public APlayerController
{
public:
	uint8                                         Pad_12DA[0x8];                                     // 0x0570(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void ClientInitSharedWorld(int32 PreviewImageSize, int32 ARWorldDataSize);
	void ClientUpdateARWorldData(int32 Offset, TArray<uint8>& Buffer);
	void ClientUpdatePreviewImageData(int32 Offset, TArray<uint8>& Buffer);
	void ServerMarkReadyForReceiving();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ARSharedWorldPlayerController">();
	}
	static class AARSharedWorldPlayerController* GetDefaultObj()
	{
		return GetDefaultObjImpl<AARSharedWorldPlayerController>();
	}
};

// Class AugmentedReality.ARSkyLight
// 0x0010 (0x0240 - 0x0230)
class AARSkyLight final  : public ASkyLight
{
public:
	class UAREnvironmentCaptureProbe*             CaptureProbe;                                      // 0x0230(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_12DD[0x8];                                     // 0x0238(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void SetEnvironmentCaptureProbe(class UAREnvironmentCaptureProbe* InCaptureProbe);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ARSkyLight">();
	}
	static class AARSkyLight* GetDefaultObj()
	{
		return GetDefaultObjImpl<AARSkyLight>();
	}
};

// Class AugmentedReality.ARTexture
// 0x0020 (0x00D8 - 0x00B8)
class UARTexture : public UTexture
{
public:
	enum class EARTextureType                     TextureType;                                       // 0x00B8(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_12DE[0x3];                                     // 0x00B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Timestamp;                                         // 0x00BC(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGuid                                  ExternalTextureGuid;                               // 0x00C0(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                              Size;                                              // 0x00D0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ARTexture">();
	}
	static class UARTexture* GetDefaultObj()
	{
		return GetDefaultObjImpl<UARTexture>();
	}
};

// Class AugmentedReality.ARTextureCameraImage
// 0x0000 (0x00D8 - 0x00D8)
class UARTextureCameraImage final  : public UARTexture
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ARTextureCameraImage">();
	}
	static class UARTextureCameraImage* GetDefaultObj()
	{
		return GetDefaultObjImpl<UARTextureCameraImage>();
	}
};

// Class AugmentedReality.ARTextureCameraDepth
// 0x0008 (0x00E0 - 0x00D8)
class UARTextureCameraDepth final  : public UARTexture
{
public:
	enum class EARDepthQuality                    DepthQuality;                                      // 0x00D8(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EARDepthAccuracy                   DepthAccuracy;                                     // 0x00D9(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsTemporallySmoothed;                             // 0x00DA(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ARTextureCameraDepth">();
	}
	static class UARTextureCameraDepth* GetDefaultObj()
	{
		return GetDefaultObjImpl<UARTextureCameraDepth>();
	}
};

// Class AugmentedReality.AREnvironmentCaptureProbeTexture
// 0x0020 (0x0130 - 0x0110)
class UAREnvironmentCaptureProbeTexture final  : public UTextureCube
{
public:
	enum class EARTextureType                     TextureType;                                       // 0x0110(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_12DF[0x3];                                     // 0x0111(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Timestamp;                                         // 0x0114(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGuid                                  ExternalTextureGuid;                               // 0x0118(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                              Size;                                              // 0x0128(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"AREnvironmentCaptureProbeTexture">();
	}
	static class UAREnvironmentCaptureProbeTexture* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAREnvironmentCaptureProbeTexture>();
	}
};

// Class AugmentedReality.ARTraceResultDummy
// 0x0000 (0x0028 - 0x0028)
class UARTraceResultDummy final  : public UObject
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ARTraceResultDummy">();
	}
	static class UARTraceResultDummy* GetDefaultObj()
	{
		return GetDefaultObjImpl<UARTraceResultDummy>();
	}
};

// Class AugmentedReality.ARTrackedGeometry
// 0x00C8 (0x00F0 - 0x0028)
class UARTrackedGeometry : public UObject
{
public:
	struct FGuid                                  UniqueId;                                          // 0x0028(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_12E0[0x8];                                     // 0x0038(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             LocalToTrackingTransform;                          // 0x0040(0x0030)(IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FTransform                             LocalToAlignedTrackingTransform;                   // 0x0070(0x0030)(IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	enum class EARTrackingState                   TrackingState;                                     // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_12E1[0xF];                                     // 0x00A1(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	class UMRMeshComponent*                       UnderlyingMesh;                                    // 0x00B0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EARObjectClassification            ObjectClassification;                              // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_12E2[0x17];                                    // 0x00B9(0x0017)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         LastUpdateFrameNumber;                             // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_12E3[0xC];                                     // 0x00D4(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   DebugName;                                         // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	class UMRMeshComponent* GetUnderlyingMesh();

	class FName GetDebugName() const;
	int32 GetLastUpdateFrameNumber() const;
	float GetLastUpdateTimestamp() const;
	struct FTransform GetLocalToTrackingTransform() const;
	struct FTransform GetLocalToWorldTransform() const;
	enum class EARObjectClassification GetObjectClassification() const;
	enum class EARTrackingState GetTrackingState() const;
	bool IsTracked() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ARTrackedGeometry">();
	}
	static class UARTrackedGeometry* GetDefaultObj()
	{
		return GetDefaultObjImpl<UARTrackedGeometry>();
	}
};

// Class AugmentedReality.ARPlaneGeometry
// 0x0030 (0x0120 - 0x00F0)
class UARPlaneGeometry final  : public UARTrackedGeometry
{
public:
	enum class EARPlaneOrientation                Orientation;                                       // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_12E4[0x3];                                     // 0x00E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Center;                                            // 0x00EC(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FVector                                Extent;                                            // 0x00F8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_12E5[0x10];                                    // 0x0108(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	class UARPlaneGeometry*                       SubsumedBy;                                        // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	TArray<struct FVector> GetBoundaryPolygonInLocalSpace() const;
	struct FVector GetCenter() const;
	struct FVector GetExtent() const;
	enum class EARPlaneOrientation GetOrientation() const;
	class UARPlaneGeometry* GetSubsumedBy() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ARPlaneGeometry">();
	}
	static class UARPlaneGeometry* GetDefaultObj()
	{
		return GetDefaultObjImpl<UARPlaneGeometry>();
	}
};

// Class AugmentedReality.ARTrackedPoint
// 0x0000 (0x00F0 - 0x00F0)
class UARTrackedPoint final  : public UARTrackedGeometry
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ARTrackedPoint">();
	}
	static class UARTrackedPoint* GetDefaultObj()
	{
		return GetDefaultObjImpl<UARTrackedPoint>();
	}
};

// Class AugmentedReality.ARTrackedImage
// 0x0010 (0x0100 - 0x00F0)
class UARTrackedImage : public UARTrackedGeometry
{
public:
	class UARCandidateImage*                      DetectedImage;                                     // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector2D                              EstimatedSize;                                     // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	struct FVector2D GetEstimateSize();

	class UARCandidateImage* GetDetectedImage() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ARTrackedImage">();
	}
	static class UARTrackedImage* GetDefaultObj()
	{
		return GetDefaultObjImpl<UARTrackedImage>();
	}
};

// Class AugmentedReality.ARTrackedQRCode
// 0x0010 (0x0110 - 0x0100)
class UARTrackedQRCode final  : public UARTrackedImage
{
public:
	class FString                                 QRCode;                                            // 0x00F8(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Version;                                           // 0x0108(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ARTrackedQRCode">();
	}
	static class UARTrackedQRCode* GetDefaultObj()
	{
		return GetDefaultObjImpl<UARTrackedQRCode>();
	}
};

// Class AugmentedReality.ARFaceGeometry
// 0x00F0 (0x01E0 - 0x00F0)
class UARFaceGeometry final  : public UARTrackedGeometry
{
public:
	struct FVector                                LookAtTarget;                                      // 0x00E8(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsTracked;                                        // 0x00F4(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_12E6[0x3];                                     // 0x00F5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<enum class EARFaceBlendShape, float>     BlendShapes;                                       // 0x00F8(0x0050)(NativeAccessSpecifierPrivate)
	uint8                                         Pad_12E7[0x98];                                    // 0x0148(0x0098)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	const TMap<enum class EARFaceBlendShape, float> GetBlendShapes() const;
	float GetBlendShapeValue(enum class EARFaceBlendShape BlendShape) const;
	const struct FTransform GetLocalSpaceEyeTransform(enum class EAREye Eye) const;
	struct FTransform GetWorldSpaceEyeTransform(enum class EAREye Eye) const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ARFaceGeometry">();
	}
	static class UARFaceGeometry* GetDefaultObj()
	{
		return GetDefaultObjImpl<UARFaceGeometry>();
	}
};

// Class AugmentedReality.AREnvironmentCaptureProbe
// 0x0010 (0x0100 - 0x00F0)
class UAREnvironmentCaptureProbe final  : public UARTrackedGeometry
{
public:
	uint8                                         Pad_12EB[0x8];                                     // 0x00F0(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class UAREnvironmentCaptureProbeTexture*      EnvironmentCaptureTexture;                         // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	class UAREnvironmentCaptureProbeTexture* GetEnvironmentCaptureTexture();

	struct FVector GetExtent() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"AREnvironmentCaptureProbe">();
	}
	static class UAREnvironmentCaptureProbe* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAREnvironmentCaptureProbe>();
	}
};

// Class AugmentedReality.ARTrackedObject
// 0x0000 (0x00F0 - 0x00F0)
class UARTrackedObject final  : public UARTrackedGeometry
{
public:
	class UARCandidateObject*                     DetectedObject;                                    // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	class UARCandidateObject* GetDetectedObject() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ARTrackedObject">();
	}
	static class UARTrackedObject* GetDefaultObj()
	{
		return GetDefaultObjImpl<UARTrackedObject>();
	}
};

// Class AugmentedReality.ARTrackedPose
// 0x0050 (0x0140 - 0x00F0)
class UARTrackedPose final  : public UARTrackedGeometry
{
public:
	uint8                                         Pad_12EC[0x50];                                    // 0x00F0(0x0050)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	const struct FARPose3D GetTrackedPoseData() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ARTrackedPose">();
	}
	static class UARTrackedPose* GetDefaultObj()
	{
		return GetDefaultObjImpl<UARTrackedPose>();
	}
};

// Class AugmentedReality.ARTrackableNotifyComponent
// 0x0150 (0x0200 - 0x00B0)
class UARTrackableNotifyComponent final  : public UActorComponent
{
public:
	FMulticastInlineDelegateProperty_             OnAddTrackedGeometry;                              // 0x00B0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             OnUpdateTrackedGeometry;                           // 0x00C0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             OnRemoveTrackedGeometry;                           // 0x00D0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             OnAddTrackedPlane;                                 // 0x00E0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             OnUpdateTrackedPlane;                              // 0x00F0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             OnRemoveTrackedPlane;                              // 0x0100(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             OnAddTrackedPoint;                                 // 0x0110(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             OnUpdateTrackedPoint;                              // 0x0120(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             OnRemoveTrackedPoint;                              // 0x0130(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             OnAddTrackedImage;                                 // 0x0140(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             OnUpdateTrackedImage;                              // 0x0150(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             OnRemoveTrackedImage;                              // 0x0160(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             OnAddTrackedFace;                                  // 0x0170(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             OnUpdateTrackedFace;                               // 0x0180(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             OnRemoveTrackedFace;                               // 0x0190(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             OnAddTrackedEnvProbe;                              // 0x01A0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             OnUpdateTrackedEnvProbe;                           // 0x01B0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             OnRemoveTrackedEnvProbe;                           // 0x01C0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             OnAddTrackedObject;                                // 0x01D0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             OnUpdateTrackedObject;                             // 0x01E0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             OnRemoveTrackedObject;                             // 0x01F0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ARTrackableNotifyComponent">();
	}
	static class UARTrackableNotifyComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UARTrackableNotifyComponent>();
	}
};

// Class AugmentedReality.ARTypesDummyClass
// 0x0000 (0x0028 - 0x0028)
class UARTypesDummyClass final  : public UObject
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ARTypesDummyClass">();
	}
	static class UARTypesDummyClass* GetDefaultObj()
	{
		return GetDefaultObjImpl<UARTypesDummyClass>();
	}
};

// Class AugmentedReality.ARCandidateImage
// 0x0028 (0x0058 - 0x0030)
class UARCandidateImage final  : public UDataAsset
{
public:
	class UTexture2D*                             CandidateTexture;                                  // 0x0030(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FString                                 FriendlyName;                                      // 0x0038(0x0010)(Edit, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         Width;                                             // 0x0048(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         Height;                                            // 0x004C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EARCandidateImageOrientation       Orientation;                                       // 0x0050(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	class UTexture2D* GetCandidateTexture() const;
	class FString GetFriendlyName() const;
	enum class EARCandidateImageOrientation GetOrientation() const;
	float GetPhysicalHeight() const;
	float GetPhysicalWidth() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ARCandidateImage">();
	}
	static class UARCandidateImage* GetDefaultObj()
	{
		return GetDefaultObjImpl<UARCandidateImage>();
	}
};

// Class AugmentedReality.ARCandidateObject
// 0x0040 (0x0070 - 0x0030)
class UARCandidateObject final  : public UDataAsset
{
public:
	TArray<uint8>                                 CandidateObjectData;                               // 0x0030(0x0010)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FString                                 FriendlyName;                                      // 0x0040(0x0010)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FBox                                   BoundingBox;                                       // 0x0050(0x0020)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPrivate)

public:
	void SetBoundingBox(struct FBox& InBoundingBox);
	void SetCandidateObjectData(TArray<uint8>& InCandidateObject);
	void SetFriendlyName(const class FString& NewName);

	const struct FBox GetBoundingBox() const;
	const TArray<uint8> GetCandidateObjectData() const;
	class FString GetFriendlyName() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ARCandidateObject">();
	}
	static class UARCandidateObject* GetDefaultObj()
	{
		return GetDefaultObjImpl<UARCandidateObject>();
	}
};

}

