#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_HDPlayerControllerBase

#include "Basic.hpp"

#include "BP_HDPlayerControllerBase_classes.hpp"
#include "BP_HDPlayerControllerBase_parameters.hpp"


namespace SDK
{

// Function BP_HDPlayerControllerBase.BP_HDPlayerControllerBase_C.OnRepPlayerState__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void ABP_HDPlayerControllerBase_C::OnRepPlayerState__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HDPlayerControllerBase_C", "OnRepPlayerState__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_HDPlayerControllerBase.BP_HDPlayerControllerBase_C.ExecuteUbergraph_BP_HDPlayerControllerBase
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// FDelegateProperty_                      K2Node_CreateDelegate_OutputDelegate                   (ZeroConstructor, NoDestructor)
// struct FKey                             K2Node_InputActionEvent_Key_1                          (HasGetValueTypeHash)
// class AHDSquadState*                    K2Node_CustomEvent_SquadToJoin                         (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FKey                             K2Node_InputActionEvent_Key_2                          (HasGetValueTypeHash)
// bool                                    CallFunc_JoinSquad_bJoinSuccess                        (ZeroConstructor, IsPlainOldData, NoDestructor)
// int32                                   Temp_int_Loop_Counter_Variable                         (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   CallFunc_Add_IntInt_ReturnValue                        (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    CallFunc_LeaveCurrentSquad_bLeaveSuccess               (ZeroConstructor, IsPlainOldData, NoDestructor)
// int32                                   Temp_int_Array_Index_Variable                          (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AHDSquadState*                    K2Node_CustomEvent_Squad_1                             (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    K2Node_CustomEvent_bLocked                             (ZeroConstructor, IsPlainOldData, NoDestructor)
// int32                                   Temp_int_Loop_Counter_Variable_1                       (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   CallFunc_Add_IntInt_ReturnValue_1                      (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AHDSquadState*                    K2Node_CustomEvent_Squad                               (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AHDPlayerState*                   K2Node_CustomEvent_MemberToRemove                      (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    CallFunc_KickSquadMember_bRemoveSuccess                (ZeroConstructor, IsPlainOldData, NoDestructor)
// class UClass*                           Temp_class_Variable                                    (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UClass*                           K2Node_ClassDynamicCast_AsUser_Widget                  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    K2Node_ClassDynamicCast_bSuccess                       (ZeroConstructor, IsPlainOldData, NoDestructor)
// class UClass*                           K2Node_CustomEvent_Loaded                              (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FKey                             K2Node_InputKeyEvent_Key                               (HasGetValueTypeHash)
// int32                                   Temp_int_Array_Index_Variable_1                        (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FKey                             K2Node_InputActionEvent_Key_3                          (HasGetValueTypeHash)
// TArray<class ABP_HDPlayerCharacterBase_C*>CallFunc_GetAllActorsOfClass_OutActors                 (ReferenceParm, HasGetValueTypeHash)
// int32                                   CallFunc_Array_Length_ReturnValue                      (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    CallFunc_Less_IntInt_ReturnValue                       (ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FKey                             K2Node_InputKeyEvent_Key_1                             (HasGetValueTypeHash)
// class UUserWidget*                      CallFunc_Create_ReturnValue                            (ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FKey                             K2Node_InputKeyEvent_Key_2                             (HasGetValueTypeHash)
// class APawn*                            CallFunc_K2_GetPawn_ReturnValue                        (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FKey                             K2Node_InputKeyEvent_Key_3                             (HasGetValueTypeHash)
// class ABP_HDPlayerCharacterBase_C*      K2Node_DynamicCast_AsBP_HDPlayer_Character_Base        (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    K2Node_DynamicCast_bSuccess                            (ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    CallFunc_Not_PreBool_ReturnValue                       (ZeroConstructor, IsPlainOldData, NoDestructor)
// TArray<class AActor*>                   Temp_object_Variable                                   (ConstParm, ReferenceParm, HasGetValueTypeHash)
// TArray<class ABP_HDCapturePointBase_C*> CallFunc_GetAllActorsOfClass_OutActors_1               (ReferenceParm, HasGetValueTypeHash)
// class ABP_HDCapturePointBase_C*         CallFunc_Array_Get_Item                                (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   CallFunc_Array_Length_ReturnValue_1                    (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    CallFunc_IsValid_ReturnValue                           (ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    CallFunc_IsValid_ReturnValue_1                         (ZeroConstructor, IsPlainOldData, NoDestructor)
// class AHDTeamState*                     CallFunc_GetHDTeamState_TeamState                      (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AHDPlatoonState*                  K2Node_CustomEvent_ForPlatoon                          (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    CallFunc_IsValid_ReturnValue_2                         (ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    CallFunc_InternalCreateUnnamedSquad_bSuccess           (ZeroConstructor, IsPlainOldData, NoDestructor)
// class AHDSquadState*                    CallFunc_InternalCreateUnnamedSquad_NewSquad           (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    CallFunc_HasReachedMaxSquadLimit_ReturnValue           (ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    CallFunc_EqualEqual_ObjectObject_ReturnValue           (ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    CallFunc_IsValid_ReturnValue_3                         (ZeroConstructor, IsPlainOldData, NoDestructor)
// class UDFMinimap*                       CallFunc_GetMinimapWidget_MinimapWidget                (ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// uint8                                   K2Node_Event_LastTeamNum                               (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// uint8                                   K2Node_Event_NewTeamNum                                (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<class ABP_HDCapturePointBase_C*> CallFunc_GetAllActorsOfClass_OutActors_2               (ReferenceParm, HasGetValueTypeHash)
// class ABP_HDCapturePointBase_C*         CallFunc_Array_Get_Item_1                              (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   CallFunc_Array_Length_ReturnValue_2                    (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    CallFunc_Less_IntInt_ReturnValue_1                     (ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    CallFunc_IsValid_ReturnValue_4                         (ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    CallFunc_IsLocalController_ReturnValue                 (ZeroConstructor, IsPlainOldData, NoDestructor)
// TArray<enum class EObjectTypeQuery>     K2Node_MakeArray_Array                                 (ConstParm, ReferenceParm, HasGetValueTypeHash)
// class AArcBaseVehicle*                  K2Node_CustomEvent_Vehicle_1                           (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class APawn*                            CallFunc_K2_GetPawn_ReturnValue_1                      (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AArcBaseVehicle*                  K2Node_CustomEvent_Vehicle                             (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          CallFunc_K2_GetActorLocation_ReturnValue               (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class ADFBasePlayerCharacter*           K2Node_DynamicCast_AsDFBase_Player_Character           (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    K2Node_DynamicCast_bSuccess_1                          (ZeroConstructor, IsPlainOldData, NoDestructor)
// class UCameraComponent*                 CallFunc_GetComponentByClass_ReturnValue               (ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          CallFunc_GetForwardVector_ReturnValue                  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UArcVehiclePlayerSeatComponent*   CallFunc_GetComponentByClass_ReturnValue_1             (ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          CallFunc_Multiply_VectorFloat_ReturnValue              (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    CallFunc_IsValid_ReturnValue_5                         (ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FVector                          CallFunc_Add_VectorVector_ReturnValue                  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FHitResult                       CallFunc_LineTraceSingleForObjects_OutHit              (IsPlainOldData, NoDestructor, ContainsInstancedReference)
// bool                                    CallFunc_LineTraceSingleForObjects_ReturnValue         (ZeroConstructor, IsPlainOldData, NoDestructor)
// class AArcBaseVehicle*                  CallFunc_GetVehicleFromSeatConfig_ReturnValue          (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    CallFunc_IsSeatRefValid_ReturnValue                    (ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    CallFunc_BreakHitResult_bBlockingHit                   (ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    CallFunc_BreakHitResult_bInitialOverlap                (ZeroConstructor, IsPlainOldData, NoDestructor)
// float                                   CallFunc_BreakHitResult_Time                           (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   CallFunc_BreakHitResult_Distance                       (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          CallFunc_BreakHitResult_Location                       (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          CallFunc_BreakHitResult_ImpactPoint                    (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          CallFunc_BreakHitResult_Normal                         (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          CallFunc_BreakHitResult_ImpactNormal                   (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPhysicalMaterial*                CallFunc_BreakHitResult_PhysMat                        (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           CallFunc_BreakHitResult_HitActor                       (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              CallFunc_BreakHitResult_HitComponent                   (ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             CallFunc_BreakHitResult_HitBoneName                    (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   CallFunc_BreakHitResult_HitItem                        (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   CallFunc_BreakHitResult_FaceIndex                      (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          CallFunc_BreakHitResult_TraceStart                     (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          CallFunc_BreakHitResult_TraceEnd                       (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AArcBaseVehicle*                  K2Node_DynamicCast_AsArc_Base_Vehicle                  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    K2Node_DynamicCast_bSuccess_2                          (ZeroConstructor, IsPlainOldData, NoDestructor)
// class AArcBaseVehicle*                  K2Node_DynamicCast_AsArc_Base_Vehicle_1                (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    K2Node_DynamicCast_bSuccess_3                          (ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FKey                             K2Node_InputActionEvent_Key                            (HasGetValueTypeHash)
// class APawn*                            CallFunc_K2_GetPawn_ReturnValue_2                      (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FKey                             K2Node_InputActionEvent_Key_4                          (HasGetValueTypeHash)
// bool                                    CallFunc_IsValid_ReturnValue_6                         (ZeroConstructor, IsPlainOldData, NoDestructor)
// class AArcVehiclePawn*                  K2Node_DynamicCast_AsArc_Vehicle_Pawn                  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    K2Node_DynamicCast_bSuccess_4                          (ZeroConstructor, IsPlainOldData, NoDestructor)
// class AArcBaseVehicle*                  CallFunc_GetOwningVehicle_ReturnValue                  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UArcVehiclePlayerSeatComponent*   CallFunc_GetComponentByClass_ReturnValue_2             (ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   K2Node_CustomEvent_Seat                                (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    CallFunc_IsValid_ReturnValue_7                         (ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    CallFunc_IsSeatRefValid_ReturnValue_1                  (ZeroConstructor, IsPlainOldData, NoDestructor)
// class AArcBaseVehicle*                  CallFunc_GetVehicleFromSeatConfig_ReturnValue_1        (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FKey                             Temp_struct_Variable                                   (HasGetValueTypeHash)
// struct FKey                             K2Node_InputActionEvent_Key_5                          (HasGetValueTypeHash)
// bool                                    CallFunc_HasAuthority_ReturnValue                      (ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    CallFunc_IsDedicatedServer_ReturnValue                 (ZeroConstructor, IsPlainOldData, NoDestructor)
// class AHUD*                             CallFunc_GetHUD_ReturnValue                            (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Temp_int_Loop_Counter_Variable_2                       (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class ABP_HDHUDBase_C*                  K2Node_DynamicCast_AsBP_HDHUDBase                      (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    K2Node_DynamicCast_bSuccess_5                          (ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    CallFunc_Less_IntInt_ReturnValue_2                     (ZeroConstructor, IsPlainOldData, NoDestructor)
// int32                                   CallFunc_Add_IntInt_ReturnValue_2                      (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FKey                             K2Node_InputActionEvent_Key_6                          (HasGetValueTypeHash)
// bool                                    CallFunc_IsValidSoftClassReference_ReturnValue         (ZeroConstructor, IsPlainOldData, NoDestructor)
// int32                                   Temp_int_Array_Index_Variable_2                        (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class ABP_HDPlayerCharacterBase_C*      CallFunc_Array_Get_Item_2                              (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    CallFunc_IsValid_ReturnValue_8                         (ZeroConstructor, IsPlainOldData, NoDestructor)
// class APawn*                            K2Node_Event_NewPawn                                   (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// FDelegateProperty_                      K2Node_CreateDelegate_OutputDelegate_1                 (ZeroConstructor, NoDestructor)
// class ADFBaseCharacter*                 K2Node_DynamicCast_AsDFBase_Character                  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    K2Node_DynamicCast_bSuccess_6                          (ZeroConstructor, IsPlainOldData, NoDestructor)
// class APawn*                            K2Node_CustomEvent_VictimPawn                          (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AController*                      K2Node_CustomEvent_VictimController                    (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   K2Node_CustomEvent_KillingDamage                       (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FDamageEvent                     K2Node_CustomEvent_DamageEvent                         (ConstParm)
// class APawn*                            K2Node_CustomEvent_InstigatingPawn                     (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           K2Node_CustomEvent_DamageCauser                        (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class ADFBaseCharacter*                 K2Node_DynamicCast_AsDFBase_Character_1                (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    K2Node_DynamicCast_bSuccess_7                          (ZeroConstructor, IsPlainOldData, NoDestructor)
// FDelegateProperty_                      K2Node_CreateDelegate_OutputDelegate_2                 (ZeroConstructor, NoDestructor)
// class APawn*                            CallFunc_K2_GetPawn_ReturnValue_3                      (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class ABP_HDPlayerCharacterBase_C*      K2Node_DynamicCast_AsBP_HDPlayer_Character_Base_1      (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    K2Node_DynamicCast_bSuccess_8                          (ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    CallFunc_IsLocalController_ReturnValue_1               (ZeroConstructor, IsPlainOldData, NoDestructor)
// class AActor*                           K2Node_Event_EndGameFocus                              (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    K2Node_Event_bIsWinner                                 (ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    CallFunc_IsLocalController_ReturnValue_2               (ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FLinearColor                     CallFunc_MakeColor_ReturnValue                         (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FLinearColor                     CallFunc_MakeColor_ReturnValue_1                       (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AHUD*                             CallFunc_GetHUD_ReturnValue_1                          (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class ABP_HDHUDBase_C*                  K2Node_DynamicCast_AsBP_HDHUDBase_1                    (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    K2Node_DynamicCast_bSuccess_9                          (ZeroConstructor, IsPlainOldData, NoDestructor)
// class AHUD*                             CallFunc_GetHUD_ReturnValue_2                          (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    CallFunc_IsTextChatHistoryVisible_bVisible             (ZeroConstructor, IsPlainOldData, NoDestructor)
// class ABP_HDHUDBase_C*                  K2Node_DynamicCast_AsBP_HDHUDBase_2                    (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    K2Node_DynamicCast_bSuccess_10                         (ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    CallFunc_Not_PreBool_ReturnValue_1                     (ZeroConstructor, IsPlainOldData, NoDestructor)
// class AHUD*                             CallFunc_GetHUD_ReturnValue_3                          (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class APawn*                            K2Node_Event_UnpossessedPawn                           (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    CallFunc_CastVote_ReturnValue                          (ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    CallFunc_IsValid_ReturnValue_9                         (ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    CallFunc_CastVote_ReturnValue_1                        (ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_HDPlayerControllerBase_C::ExecuteUbergraph_BP_HDPlayerControllerBase(int32 EntryPoint, FDelegateProperty_ K2Node_CreateDelegate_OutputDelegate, const struct FKey& K2Node_InputActionEvent_Key_1, class AHDSquadState* K2Node_CustomEvent_SquadToJoin, const struct FKey& K2Node_InputActionEvent_Key_2, bool CallFunc_JoinSquad_bJoinSuccess, int32 Temp_int_Loop_Counter_Variable, int32 CallFunc_Add_IntInt_ReturnValue, bool CallFunc_LeaveCurrentSquad_bLeaveSuccess, int32 Temp_int_Array_Index_Variable, class AHDSquadState* K2Node_CustomEvent_Squad_1, bool K2Node_CustomEvent_bLocked, int32 Temp_int_Loop_Counter_Variable_1, int32 CallFunc_Add_IntInt_ReturnValue_1, class AHDSquadState* K2Node_CustomEvent_Squad, class AHDPlayerState* K2Node_CustomEvent_MemberToRemove, bool CallFunc_KickSquadMember_bRemoveSuccess, class UClass* Temp_class_Variable, class UClass* K2Node_ClassDynamicCast_AsUser_Widget, bool K2Node_ClassDynamicCast_bSuccess, class UClass* K2Node_CustomEvent_Loaded, const struct FKey& K2Node_InputKeyEvent_Key, int32 Temp_int_Array_Index_Variable_1, const struct FKey& K2Node_InputActionEvent_Key_3, TArray<class ABP_HDPlayerCharacterBase_C*>& CallFunc_GetAllActorsOfClass_OutActors, int32 CallFunc_Array_Length_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, const struct FKey& K2Node_InputKeyEvent_Key_1, class UUserWidget* CallFunc_Create_ReturnValue, const struct FKey& K2Node_InputKeyEvent_Key_2, class APawn* CallFunc_K2_GetPawn_ReturnValue, const struct FKey& K2Node_InputKeyEvent_Key_3, class ABP_HDPlayerCharacterBase_C* K2Node_DynamicCast_AsBP_HDPlayer_Character_Base, bool K2Node_DynamicCast_bSuccess, bool CallFunc_Not_PreBool_ReturnValue, TArray<class AActor*>& Temp_object_Variable, TArray<class ABP_HDCapturePointBase_C*>& CallFunc_GetAllActorsOfClass_OutActors_1, class ABP_HDCapturePointBase_C* CallFunc_Array_Get_Item, int32 CallFunc_Array_Length_ReturnValue_1, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsValid_ReturnValue_1, class AHDTeamState* CallFunc_GetHDTeamState_TeamState, class AHDPlatoonState* K2Node_CustomEvent_ForPlatoon, bool CallFunc_IsValid_ReturnValue_2, bool CallFunc_InternalCreateUnnamedSquad_bSuccess, class AHDSquadState* CallFunc_InternalCreateUnnamedSquad_NewSquad, bool CallFunc_HasReachedMaxSquadLimit_ReturnValue, bool CallFunc_EqualEqual_ObjectObject_ReturnValue, bool CallFunc_IsValid_ReturnValue_3, class UDFMinimap* CallFunc_GetMinimapWidget_MinimapWidget, uint8 K2Node_Event_LastTeamNum, uint8 K2Node_Event_NewTeamNum, TArray<class ABP_HDCapturePointBase_C*>& CallFunc_GetAllActorsOfClass_OutActors_2, class ABP_HDCapturePointBase_C* CallFunc_Array_Get_Item_1, int32 CallFunc_Array_Length_ReturnValue_2, bool CallFunc_Less_IntInt_ReturnValue_1, bool CallFunc_IsValid_ReturnValue_4, bool CallFunc_IsLocalController_ReturnValue, TArray<enum class EObjectTypeQuery>& K2Node_MakeArray_Array, class AArcBaseVehicle* K2Node_CustomEvent_Vehicle_1, class APawn* CallFunc_K2_GetPawn_ReturnValue_1, class AArcBaseVehicle* K2Node_CustomEvent_Vehicle, const struct FVector& CallFunc_K2_GetActorLocation_ReturnValue, class ADFBasePlayerCharacter* K2Node_DynamicCast_AsDFBase_Player_Character, bool K2Node_DynamicCast_bSuccess_1, class UCameraComponent* CallFunc_GetComponentByClass_ReturnValue, const struct FVector& CallFunc_GetForwardVector_ReturnValue, class UArcVehiclePlayerSeatComponent* CallFunc_GetComponentByClass_ReturnValue_1, const struct FVector& CallFunc_Multiply_VectorFloat_ReturnValue, bool CallFunc_IsValid_ReturnValue_5, const struct FVector& CallFunc_Add_VectorVector_ReturnValue, const struct FHitResult& CallFunc_LineTraceSingleForObjects_OutHit, bool CallFunc_LineTraceSingleForObjects_ReturnValue, class AArcBaseVehicle* CallFunc_GetVehicleFromSeatConfig_ReturnValue, bool CallFunc_IsSeatRefValid_ReturnValue, bool CallFunc_BreakHitResult_bBlockingHit, bool CallFunc_BreakHitResult_bInitialOverlap, float CallFunc_BreakHitResult_Time, float CallFunc_BreakHitResult_Distance, const struct FVector& CallFunc_BreakHitResult_Location, const struct FVector& CallFunc_BreakHitResult_ImpactPoint, const struct FVector& CallFunc_BreakHitResult_Normal, const struct FVector& CallFunc_BreakHitResult_ImpactNormal, class UPhysicalMaterial* CallFunc_BreakHitResult_PhysMat, class AActor* CallFunc_BreakHitResult_HitActor, class UPrimitiveComponent* CallFunc_BreakHitResult_HitComponent, class FName CallFunc_BreakHitResult_HitBoneName, int32 CallFunc_BreakHitResult_HitItem, int32 CallFunc_BreakHitResult_FaceIndex, const struct FVector& CallFunc_BreakHitResult_TraceStart, const struct FVector& CallFunc_BreakHitResult_TraceEnd, class AArcBaseVehicle* K2Node_DynamicCast_AsArc_Base_Vehicle, bool K2Node_DynamicCast_bSuccess_2, class AArcBaseVehicle* K2Node_DynamicCast_AsArc_Base_Vehicle_1, bool K2Node_DynamicCast_bSuccess_3, const struct FKey& K2Node_InputActionEvent_Key, class APawn* CallFunc_K2_GetPawn_ReturnValue_2, const struct FKey& K2Node_InputActionEvent_Key_4, bool CallFunc_IsValid_ReturnValue_6, class AArcVehiclePawn* K2Node_DynamicCast_AsArc_Vehicle_Pawn, bool K2Node_DynamicCast_bSuccess_4, class AArcBaseVehicle* CallFunc_GetOwningVehicle_ReturnValue, class UArcVehiclePlayerSeatComponent* CallFunc_GetComponentByClass_ReturnValue_2, int32 K2Node_CustomEvent_Seat, bool CallFunc_IsValid_ReturnValue_7, bool CallFunc_IsSeatRefValid_ReturnValue_1, class AArcBaseVehicle* CallFunc_GetVehicleFromSeatConfig_ReturnValue_1, const struct FKey& Temp_struct_Variable, const struct FKey& K2Node_InputActionEvent_Key_5, bool CallFunc_HasAuthority_ReturnValue, bool CallFunc_IsDedicatedServer_ReturnValue, class AHUD* CallFunc_GetHUD_ReturnValue, int32 Temp_int_Loop_Counter_Variable_2, class ABP_HDHUDBase_C* K2Node_DynamicCast_AsBP_HDHUDBase, bool K2Node_DynamicCast_bSuccess_5, bool CallFunc_Less_IntInt_ReturnValue_2, int32 CallFunc_Add_IntInt_ReturnValue_2, const struct FKey& K2Node_InputActionEvent_Key_6, bool CallFunc_IsValidSoftClassReference_ReturnValue, int32 Temp_int_Array_Index_Variable_2, class ABP_HDPlayerCharacterBase_C* CallFunc_Array_Get_Item_2, bool CallFunc_IsValid_ReturnValue_8, class APawn* K2Node_Event_NewPawn, FDelegateProperty_ K2Node_CreateDelegate_OutputDelegate_1, class ADFBaseCharacter* K2Node_DynamicCast_AsDFBase_Character, bool K2Node_DynamicCast_bSuccess_6, class APawn* K2Node_CustomEvent_VictimPawn, class AController* K2Node_CustomEvent_VictimController, float K2Node_CustomEvent_KillingDamage, struct FDamageEvent& K2Node_CustomEvent_DamageEvent, class APawn* K2Node_CustomEvent_InstigatingPawn, class AActor* K2Node_CustomEvent_DamageCauser, class ADFBaseCharacter* K2Node_DynamicCast_AsDFBase_Character_1, bool K2Node_DynamicCast_bSuccess_7, FDelegateProperty_ K2Node_CreateDelegate_OutputDelegate_2, class APawn* CallFunc_K2_GetPawn_ReturnValue_3, class ABP_HDPlayerCharacterBase_C* K2Node_DynamicCast_AsBP_HDPlayer_Character_Base_1, bool K2Node_DynamicCast_bSuccess_8, bool CallFunc_IsLocalController_ReturnValue_1, class AActor* K2Node_Event_EndGameFocus, bool K2Node_Event_bIsWinner, bool CallFunc_IsLocalController_ReturnValue_2, const struct FLinearColor& CallFunc_MakeColor_ReturnValue, const struct FLinearColor& CallFunc_MakeColor_ReturnValue_1, class AHUD* CallFunc_GetHUD_ReturnValue_1, class ABP_HDHUDBase_C* K2Node_DynamicCast_AsBP_HDHUDBase_1, bool K2Node_DynamicCast_bSuccess_9, class AHUD* CallFunc_GetHUD_ReturnValue_2, bool CallFunc_IsTextChatHistoryVisible_bVisible, class ABP_HDHUDBase_C* K2Node_DynamicCast_AsBP_HDHUDBase_2, bool K2Node_DynamicCast_bSuccess_10, bool CallFunc_Not_PreBool_ReturnValue_1, class AHUD* CallFunc_GetHUD_ReturnValue_3, class APawn* K2Node_Event_UnpossessedPawn, bool CallFunc_CastVote_ReturnValue, bool CallFunc_IsValid_ReturnValue_9, bool CallFunc_CastVote_ReturnValue_1)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HDPlayerControllerBase_C", "ExecuteUbergraph_BP_HDPlayerControllerBase");

	Params::BP_HDPlayerControllerBase_C_ExecuteUbergraph_BP_HDPlayerControllerBase Parms{};

	Parms.EntryPoint = EntryPoint;
	Parms.K2Node_CreateDelegate_OutputDelegate = K2Node_CreateDelegate_OutputDelegate;
	Parms.K2Node_InputActionEvent_Key_1 = std::move(K2Node_InputActionEvent_Key_1);
	Parms.K2Node_CustomEvent_SquadToJoin = K2Node_CustomEvent_SquadToJoin;
	Parms.K2Node_InputActionEvent_Key_2 = std::move(K2Node_InputActionEvent_Key_2);
	Parms.CallFunc_JoinSquad_bJoinSuccess = CallFunc_JoinSquad_bJoinSuccess;
	Parms.Temp_int_Loop_Counter_Variable = Temp_int_Loop_Counter_Variable;
	Parms.CallFunc_Add_IntInt_ReturnValue = CallFunc_Add_IntInt_ReturnValue;
	Parms.CallFunc_LeaveCurrentSquad_bLeaveSuccess = CallFunc_LeaveCurrentSquad_bLeaveSuccess;
	Parms.Temp_int_Array_Index_Variable = Temp_int_Array_Index_Variable;
	Parms.K2Node_CustomEvent_Squad_1 = K2Node_CustomEvent_Squad_1;
	Parms.K2Node_CustomEvent_bLocked = K2Node_CustomEvent_bLocked;
	Parms.Temp_int_Loop_Counter_Variable_1 = Temp_int_Loop_Counter_Variable_1;
	Parms.CallFunc_Add_IntInt_ReturnValue_1 = CallFunc_Add_IntInt_ReturnValue_1;
	Parms.K2Node_CustomEvent_Squad = K2Node_CustomEvent_Squad;
	Parms.K2Node_CustomEvent_MemberToRemove = K2Node_CustomEvent_MemberToRemove;
	Parms.CallFunc_KickSquadMember_bRemoveSuccess = CallFunc_KickSquadMember_bRemoveSuccess;
	Parms.Temp_class_Variable = Temp_class_Variable;
	Parms.K2Node_ClassDynamicCast_AsUser_Widget = K2Node_ClassDynamicCast_AsUser_Widget;
	Parms.K2Node_ClassDynamicCast_bSuccess = K2Node_ClassDynamicCast_bSuccess;
	Parms.K2Node_CustomEvent_Loaded = K2Node_CustomEvent_Loaded;
	Parms.K2Node_InputKeyEvent_Key = std::move(K2Node_InputKeyEvent_Key);
	Parms.Temp_int_Array_Index_Variable_1 = Temp_int_Array_Index_Variable_1;
	Parms.K2Node_InputActionEvent_Key_3 = std::move(K2Node_InputActionEvent_Key_3);
	Parms.CallFunc_GetAllActorsOfClass_OutActors = std::move(CallFunc_GetAllActorsOfClass_OutActors);
	Parms.CallFunc_Array_Length_ReturnValue = CallFunc_Array_Length_ReturnValue;
	Parms.CallFunc_Less_IntInt_ReturnValue = CallFunc_Less_IntInt_ReturnValue;
	Parms.K2Node_InputKeyEvent_Key_1 = std::move(K2Node_InputKeyEvent_Key_1);
	Parms.CallFunc_Create_ReturnValue = CallFunc_Create_ReturnValue;
	Parms.K2Node_InputKeyEvent_Key_2 = std::move(K2Node_InputKeyEvent_Key_2);
	Parms.CallFunc_K2_GetPawn_ReturnValue = CallFunc_K2_GetPawn_ReturnValue;
	Parms.K2Node_InputKeyEvent_Key_3 = std::move(K2Node_InputKeyEvent_Key_3);
	Parms.K2Node_DynamicCast_AsBP_HDPlayer_Character_Base = K2Node_DynamicCast_AsBP_HDPlayer_Character_Base;
	Parms.K2Node_DynamicCast_bSuccess = K2Node_DynamicCast_bSuccess;
	Parms.CallFunc_Not_PreBool_ReturnValue = CallFunc_Not_PreBool_ReturnValue;
	Parms.Temp_object_Variable = std::move(Temp_object_Variable);
	Parms.CallFunc_GetAllActorsOfClass_OutActors_1 = std::move(CallFunc_GetAllActorsOfClass_OutActors_1);
	Parms.CallFunc_Array_Get_Item = CallFunc_Array_Get_Item;
	Parms.CallFunc_Array_Length_ReturnValue_1 = CallFunc_Array_Length_ReturnValue_1;
	Parms.CallFunc_IsValid_ReturnValue = CallFunc_IsValid_ReturnValue;
	Parms.CallFunc_IsValid_ReturnValue_1 = CallFunc_IsValid_ReturnValue_1;
	Parms.CallFunc_GetHDTeamState_TeamState = CallFunc_GetHDTeamState_TeamState;
	Parms.K2Node_CustomEvent_ForPlatoon = K2Node_CustomEvent_ForPlatoon;
	Parms.CallFunc_IsValid_ReturnValue_2 = CallFunc_IsValid_ReturnValue_2;
	Parms.CallFunc_InternalCreateUnnamedSquad_bSuccess = CallFunc_InternalCreateUnnamedSquad_bSuccess;
	Parms.CallFunc_InternalCreateUnnamedSquad_NewSquad = CallFunc_InternalCreateUnnamedSquad_NewSquad;
	Parms.CallFunc_HasReachedMaxSquadLimit_ReturnValue = CallFunc_HasReachedMaxSquadLimit_ReturnValue;
	Parms.CallFunc_EqualEqual_ObjectObject_ReturnValue = CallFunc_EqualEqual_ObjectObject_ReturnValue;
	Parms.CallFunc_IsValid_ReturnValue_3 = CallFunc_IsValid_ReturnValue_3;
	Parms.CallFunc_GetMinimapWidget_MinimapWidget = CallFunc_GetMinimapWidget_MinimapWidget;
	Parms.K2Node_Event_LastTeamNum = K2Node_Event_LastTeamNum;
	Parms.K2Node_Event_NewTeamNum = K2Node_Event_NewTeamNum;
	Parms.CallFunc_GetAllActorsOfClass_OutActors_2 = std::move(CallFunc_GetAllActorsOfClass_OutActors_2);
	Parms.CallFunc_Array_Get_Item_1 = CallFunc_Array_Get_Item_1;
	Parms.CallFunc_Array_Length_ReturnValue_2 = CallFunc_Array_Length_ReturnValue_2;
	Parms.CallFunc_Less_IntInt_ReturnValue_1 = CallFunc_Less_IntInt_ReturnValue_1;
	Parms.CallFunc_IsValid_ReturnValue_4 = CallFunc_IsValid_ReturnValue_4;
	Parms.CallFunc_IsLocalController_ReturnValue = CallFunc_IsLocalController_ReturnValue;
	Parms.K2Node_MakeArray_Array = std::move(K2Node_MakeArray_Array);
	Parms.K2Node_CustomEvent_Vehicle_1 = K2Node_CustomEvent_Vehicle_1;
	Parms.CallFunc_K2_GetPawn_ReturnValue_1 = CallFunc_K2_GetPawn_ReturnValue_1;
	Parms.K2Node_CustomEvent_Vehicle = K2Node_CustomEvent_Vehicle;
	Parms.CallFunc_K2_GetActorLocation_ReturnValue = std::move(CallFunc_K2_GetActorLocation_ReturnValue);
	Parms.K2Node_DynamicCast_AsDFBase_Player_Character = K2Node_DynamicCast_AsDFBase_Player_Character;
	Parms.K2Node_DynamicCast_bSuccess_1 = K2Node_DynamicCast_bSuccess_1;
	Parms.CallFunc_GetComponentByClass_ReturnValue = CallFunc_GetComponentByClass_ReturnValue;
	Parms.CallFunc_GetForwardVector_ReturnValue = std::move(CallFunc_GetForwardVector_ReturnValue);
	Parms.CallFunc_GetComponentByClass_ReturnValue_1 = CallFunc_GetComponentByClass_ReturnValue_1;
	Parms.CallFunc_Multiply_VectorFloat_ReturnValue = std::move(CallFunc_Multiply_VectorFloat_ReturnValue);
	Parms.CallFunc_IsValid_ReturnValue_5 = CallFunc_IsValid_ReturnValue_5;
	Parms.CallFunc_Add_VectorVector_ReturnValue = std::move(CallFunc_Add_VectorVector_ReturnValue);
	Parms.CallFunc_LineTraceSingleForObjects_OutHit = std::move(CallFunc_LineTraceSingleForObjects_OutHit);
	Parms.CallFunc_LineTraceSingleForObjects_ReturnValue = CallFunc_LineTraceSingleForObjects_ReturnValue;
	Parms.CallFunc_GetVehicleFromSeatConfig_ReturnValue = CallFunc_GetVehicleFromSeatConfig_ReturnValue;
	Parms.CallFunc_IsSeatRefValid_ReturnValue = CallFunc_IsSeatRefValid_ReturnValue;
	Parms.CallFunc_BreakHitResult_bBlockingHit = CallFunc_BreakHitResult_bBlockingHit;
	Parms.CallFunc_BreakHitResult_bInitialOverlap = CallFunc_BreakHitResult_bInitialOverlap;
	Parms.CallFunc_BreakHitResult_Time = CallFunc_BreakHitResult_Time;
	Parms.CallFunc_BreakHitResult_Distance = CallFunc_BreakHitResult_Distance;
	Parms.CallFunc_BreakHitResult_Location = std::move(CallFunc_BreakHitResult_Location);
	Parms.CallFunc_BreakHitResult_ImpactPoint = std::move(CallFunc_BreakHitResult_ImpactPoint);
	Parms.CallFunc_BreakHitResult_Normal = std::move(CallFunc_BreakHitResult_Normal);
	Parms.CallFunc_BreakHitResult_ImpactNormal = std::move(CallFunc_BreakHitResult_ImpactNormal);
	Parms.CallFunc_BreakHitResult_PhysMat = CallFunc_BreakHitResult_PhysMat;
	Parms.CallFunc_BreakHitResult_HitActor = CallFunc_BreakHitResult_HitActor;
	Parms.CallFunc_BreakHitResult_HitComponent = CallFunc_BreakHitResult_HitComponent;
	Parms.CallFunc_BreakHitResult_HitBoneName = CallFunc_BreakHitResult_HitBoneName;
	Parms.CallFunc_BreakHitResult_HitItem = CallFunc_BreakHitResult_HitItem;
	Parms.CallFunc_BreakHitResult_FaceIndex = CallFunc_BreakHitResult_FaceIndex;
	Parms.CallFunc_BreakHitResult_TraceStart = std::move(CallFunc_BreakHitResult_TraceStart);
	Parms.CallFunc_BreakHitResult_TraceEnd = std::move(CallFunc_BreakHitResult_TraceEnd);
	Parms.K2Node_DynamicCast_AsArc_Base_Vehicle = K2Node_DynamicCast_AsArc_Base_Vehicle;
	Parms.K2Node_DynamicCast_bSuccess_2 = K2Node_DynamicCast_bSuccess_2;
	Parms.K2Node_DynamicCast_AsArc_Base_Vehicle_1 = K2Node_DynamicCast_AsArc_Base_Vehicle_1;
	Parms.K2Node_DynamicCast_bSuccess_3 = K2Node_DynamicCast_bSuccess_3;
	Parms.K2Node_InputActionEvent_Key = std::move(K2Node_InputActionEvent_Key);
	Parms.CallFunc_K2_GetPawn_ReturnValue_2 = CallFunc_K2_GetPawn_ReturnValue_2;
	Parms.K2Node_InputActionEvent_Key_4 = std::move(K2Node_InputActionEvent_Key_4);
	Parms.CallFunc_IsValid_ReturnValue_6 = CallFunc_IsValid_ReturnValue_6;
	Parms.K2Node_DynamicCast_AsArc_Vehicle_Pawn = K2Node_DynamicCast_AsArc_Vehicle_Pawn;
	Parms.K2Node_DynamicCast_bSuccess_4 = K2Node_DynamicCast_bSuccess_4;
	Parms.CallFunc_GetOwningVehicle_ReturnValue = CallFunc_GetOwningVehicle_ReturnValue;
	Parms.CallFunc_GetComponentByClass_ReturnValue_2 = CallFunc_GetComponentByClass_ReturnValue_2;
	Parms.K2Node_CustomEvent_Seat = K2Node_CustomEvent_Seat;
	Parms.CallFunc_IsValid_ReturnValue_7 = CallFunc_IsValid_ReturnValue_7;
	Parms.CallFunc_IsSeatRefValid_ReturnValue_1 = CallFunc_IsSeatRefValid_ReturnValue_1;
	Parms.CallFunc_GetVehicleFromSeatConfig_ReturnValue_1 = CallFunc_GetVehicleFromSeatConfig_ReturnValue_1;
	Parms.Temp_struct_Variable = std::move(Temp_struct_Variable);
	Parms.K2Node_InputActionEvent_Key_5 = std::move(K2Node_InputActionEvent_Key_5);
	Parms.CallFunc_HasAuthority_ReturnValue = CallFunc_HasAuthority_ReturnValue;
	Parms.CallFunc_IsDedicatedServer_ReturnValue = CallFunc_IsDedicatedServer_ReturnValue;
	Parms.CallFunc_GetHUD_ReturnValue = CallFunc_GetHUD_ReturnValue;
	Parms.Temp_int_Loop_Counter_Variable_2 = Temp_int_Loop_Counter_Variable_2;
	Parms.K2Node_DynamicCast_AsBP_HDHUDBase = K2Node_DynamicCast_AsBP_HDHUDBase;
	Parms.K2Node_DynamicCast_bSuccess_5 = K2Node_DynamicCast_bSuccess_5;
	Parms.CallFunc_Less_IntInt_ReturnValue_2 = CallFunc_Less_IntInt_ReturnValue_2;
	Parms.CallFunc_Add_IntInt_ReturnValue_2 = CallFunc_Add_IntInt_ReturnValue_2;
	Parms.K2Node_InputActionEvent_Key_6 = std::move(K2Node_InputActionEvent_Key_6);
	Parms.CallFunc_IsValidSoftClassReference_ReturnValue = CallFunc_IsValidSoftClassReference_ReturnValue;
	Parms.Temp_int_Array_Index_Variable_2 = Temp_int_Array_Index_Variable_2;
	Parms.CallFunc_Array_Get_Item_2 = CallFunc_Array_Get_Item_2;
	Parms.CallFunc_IsValid_ReturnValue_8 = CallFunc_IsValid_ReturnValue_8;
	Parms.K2Node_Event_NewPawn = K2Node_Event_NewPawn;
	Parms.K2Node_CreateDelegate_OutputDelegate_1 = K2Node_CreateDelegate_OutputDelegate_1;
	Parms.K2Node_DynamicCast_AsDFBase_Character = K2Node_DynamicCast_AsDFBase_Character;
	Parms.K2Node_DynamicCast_bSuccess_6 = K2Node_DynamicCast_bSuccess_6;
	Parms.K2Node_CustomEvent_VictimPawn = K2Node_CustomEvent_VictimPawn;
	Parms.K2Node_CustomEvent_VictimController = K2Node_CustomEvent_VictimController;
	Parms.K2Node_CustomEvent_KillingDamage = K2Node_CustomEvent_KillingDamage;
	Parms.K2Node_CustomEvent_DamageEvent = std::move(K2Node_CustomEvent_DamageEvent);
	Parms.K2Node_CustomEvent_InstigatingPawn = K2Node_CustomEvent_InstigatingPawn;
	Parms.K2Node_CustomEvent_DamageCauser = K2Node_CustomEvent_DamageCauser;
	Parms.K2Node_DynamicCast_AsDFBase_Character_1 = K2Node_DynamicCast_AsDFBase_Character_1;
	Parms.K2Node_DynamicCast_bSuccess_7 = K2Node_DynamicCast_bSuccess_7;
	Parms.K2Node_CreateDelegate_OutputDelegate_2 = K2Node_CreateDelegate_OutputDelegate_2;
	Parms.CallFunc_K2_GetPawn_ReturnValue_3 = CallFunc_K2_GetPawn_ReturnValue_3;
	Parms.K2Node_DynamicCast_AsBP_HDPlayer_Character_Base_1 = K2Node_DynamicCast_AsBP_HDPlayer_Character_Base_1;
	Parms.K2Node_DynamicCast_bSuccess_8 = K2Node_DynamicCast_bSuccess_8;
	Parms.CallFunc_IsLocalController_ReturnValue_1 = CallFunc_IsLocalController_ReturnValue_1;
	Parms.K2Node_Event_EndGameFocus = K2Node_Event_EndGameFocus;
	Parms.K2Node_Event_bIsWinner = K2Node_Event_bIsWinner;
	Parms.CallFunc_IsLocalController_ReturnValue_2 = CallFunc_IsLocalController_ReturnValue_2;
	Parms.CallFunc_MakeColor_ReturnValue = std::move(CallFunc_MakeColor_ReturnValue);
	Parms.CallFunc_MakeColor_ReturnValue_1 = std::move(CallFunc_MakeColor_ReturnValue_1);
	Parms.CallFunc_GetHUD_ReturnValue_1 = CallFunc_GetHUD_ReturnValue_1;
	Parms.K2Node_DynamicCast_AsBP_HDHUDBase_1 = K2Node_DynamicCast_AsBP_HDHUDBase_1;
	Parms.K2Node_DynamicCast_bSuccess_9 = K2Node_DynamicCast_bSuccess_9;
	Parms.CallFunc_GetHUD_ReturnValue_2 = CallFunc_GetHUD_ReturnValue_2;
	Parms.CallFunc_IsTextChatHistoryVisible_bVisible = CallFunc_IsTextChatHistoryVisible_bVisible;
	Parms.K2Node_DynamicCast_AsBP_HDHUDBase_2 = K2Node_DynamicCast_AsBP_HDHUDBase_2;
	Parms.K2Node_DynamicCast_bSuccess_10 = K2Node_DynamicCast_bSuccess_10;
	Parms.CallFunc_Not_PreBool_ReturnValue_1 = CallFunc_Not_PreBool_ReturnValue_1;
	Parms.CallFunc_GetHUD_ReturnValue_3 = CallFunc_GetHUD_ReturnValue_3;
	Parms.K2Node_Event_UnpossessedPawn = K2Node_Event_UnpossessedPawn;
	Parms.CallFunc_CastVote_ReturnValue = CallFunc_CastVote_ReturnValue;
	Parms.CallFunc_IsValid_ReturnValue_9 = CallFunc_IsValid_ReturnValue_9;
	Parms.CallFunc_CastVote_ReturnValue_1 = CallFunc_CastVote_ReturnValue_1;

	UObject::ProcessEvent(Func, &Parms);

	CallFunc_GetAllActorsOfClass_OutActors = std::move(Parms.CallFunc_GetAllActorsOfClass_OutActors);
	CallFunc_GetAllActorsOfClass_OutActors_1 = std::move(Parms.CallFunc_GetAllActorsOfClass_OutActors_1);
	CallFunc_GetAllActorsOfClass_OutActors_2 = std::move(Parms.CallFunc_GetAllActorsOfClass_OutActors_2);
}


// Function BP_HDPlayerControllerBase.BP_HDPlayerControllerBase_C.ReceiveUnpossessPawn
// (Event, Protected, BlueprintEvent)
// Parameters:
// class APawn*                            UnpossessedPawn                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_HDPlayerControllerBase_C::ReceiveUnpossessPawn(class APawn* UnpossessedPawn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HDPlayerControllerBase_C", "ReceiveUnpossessPawn");

	Params::BP_HDPlayerControllerBase_C_ReceiveUnpossessPawn Parms{};

	Parms.UnpossessedPawn = UnpossessedPawn;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HDPlayerControllerBase.BP_HDPlayerControllerBase_C.ReceiveGameHasEnded
// (Event, Protected, BlueprintEvent)
// Parameters:
// class AActor*                           EndGameFocus                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bIsWinner                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_HDPlayerControllerBase_C::ReceiveGameHasEnded(class AActor* EndGameFocus, bool bIsWinner)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HDPlayerControllerBase_C", "ReceiveGameHasEnded");

	Params::BP_HDPlayerControllerBase_C_ReceiveGameHasEnded Parms{};

	Parms.EndGameFocus = EndGameFocus;
	Parms.bIsWinner = bIsWinner;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HDPlayerControllerBase.BP_HDPlayerControllerBase_C.Auth_SpawnVehicle
// (Event, Public, BlueprintEvent)

void ABP_HDPlayerControllerBase_C::Auth_SpawnVehicle()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HDPlayerControllerBase_C", "Auth_SpawnVehicle");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_HDPlayerControllerBase.BP_HDPlayerControllerBase_C.CharacterDeath
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class APawn*                            VictimPawn                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AController*                      VictimController                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   KillingDamage                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FDamageEvent                     DamageEvent                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// class APawn*                            InstigatingPawn                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           DamageCauser                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_HDPlayerControllerBase_C::CharacterDeath(class APawn* VictimPawn, class AController* VictimController, float KillingDamage, struct FDamageEvent& DamageEvent, class APawn* InstigatingPawn, class AActor* DamageCauser)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HDPlayerControllerBase_C", "CharacterDeath");

	Params::BP_HDPlayerControllerBase_C_CharacterDeath Parms{};

	Parms.VictimPawn = VictimPawn;
	Parms.VictimController = VictimController;
	Parms.KillingDamage = KillingDamage;
	Parms.DamageEvent = std::move(DamageEvent);
	Parms.InstigatingPawn = InstigatingPawn;
	Parms.DamageCauser = DamageCauser;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HDPlayerControllerBase.BP_HDPlayerControllerBase_C.ReceivePossessPawn
// (Event, Protected, BlueprintEvent)
// Parameters:
// class APawn*                            NewPawn                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_HDPlayerControllerBase_C::ReceivePossessPawn(class APawn* NewPawn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HDPlayerControllerBase_C", "ReceivePossessPawn");

	Params::BP_HDPlayerControllerBase_C_ReceivePossessPawn Parms{};

	Parms.NewPawn = NewPawn;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HDPlayerControllerBase.BP_HDPlayerControllerBase_C.Server_RequestSeatChange
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Seat                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_HDPlayerControllerBase_C::Server_RequestSeatChange(int32 Seat)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HDPlayerControllerBase_C", "Server_RequestSeatChange");

	Params::BP_HDPlayerControllerBase_C_Server_RequestSeatChange Parms{};

	Parms.Seat = Seat;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HDPlayerControllerBase.BP_HDPlayerControllerBase_C.RequestExitVehicle
// (Net, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AArcBaseVehicle*                  Vehicle                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_HDPlayerControllerBase_C::RequestExitVehicle(class AArcBaseVehicle* Vehicle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HDPlayerControllerBase_C", "RequestExitVehicle");

	Params::BP_HDPlayerControllerBase_C_RequestExitVehicle Parms{};

	Parms.Vehicle = Vehicle;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HDPlayerControllerBase.BP_HDPlayerControllerBase_C.TryGetInVehicle
// (Net, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AArcBaseVehicle*                  Vehicle                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_HDPlayerControllerBase_C::TryGetInVehicle(class AArcBaseVehicle* Vehicle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HDPlayerControllerBase_C", "TryGetInVehicle");

	Params::BP_HDPlayerControllerBase_C_TryGetInVehicle Parms{};

	Parms.Vehicle = Vehicle;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HDPlayerControllerBase.BP_HDPlayerControllerBase_C.ReceivePlayerTeamNumUpdated
// (Event, Protected, BlueprintEvent)
// Parameters:
// uint8                                   LastTeamNum                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// uint8                                   NewTeamNum                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_HDPlayerControllerBase_C::ReceivePlayerTeamNumUpdated(uint8 LastTeamNum, uint8 NewTeamNum)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HDPlayerControllerBase_C", "ReceivePlayerTeamNumUpdated");

	Params::BP_HDPlayerControllerBase_C_ReceivePlayerTeamNumUpdated Parms{};

	Parms.LastTeamNum = LastTeamNum;
	Parms.NewTeamNum = NewTeamNum;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HDPlayerControllerBase.BP_HDPlayerControllerBase_C.OnPlayerSpawnTimerElapsed
// (Event, Protected, BlueprintEvent)

void ABP_HDPlayerControllerBase_C::OnPlayerSpawnTimerElapsed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HDPlayerControllerBase_C", "OnPlayerSpawnTimerElapsed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_HDPlayerControllerBase.BP_HDPlayerControllerBase_C.ReceiveOnRepPlayerState
// (Event, Protected, BlueprintEvent)

void ABP_HDPlayerControllerBase_C::ReceiveOnRepPlayerState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HDPlayerControllerBase_C", "ReceiveOnRepPlayerState");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_HDPlayerControllerBase.BP_HDPlayerControllerBase_C.OnDeployMenuPreloadFinished
// (BlueprintCallable, BlueprintEvent)

void ABP_HDPlayerControllerBase_C::OnDeployMenuPreloadFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HDPlayerControllerBase_C", "OnDeployMenuPreloadFinished");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_HDPlayerControllerBase.BP_HDPlayerControllerBase_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_HDPlayerControllerBase_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HDPlayerControllerBase_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_HDPlayerControllerBase.BP_HDPlayerControllerBase_C.UpdatePlayerPOIs
// (BlueprintCallable, BlueprintEvent)

void ABP_HDPlayerControllerBase_C::UpdatePlayerPOIs()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HDPlayerControllerBase_C", "UpdatePlayerPOIs");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_HDPlayerControllerBase.BP_HDPlayerControllerBase_C.ServerKickSquadMember
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AHDSquadState*                    Squad                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AHDPlayerState*                   MemberToRemove                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_HDPlayerControllerBase_C::ServerKickSquadMember(class AHDSquadState* Squad, class AHDPlayerState* MemberToRemove)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HDPlayerControllerBase_C", "ServerKickSquadMember");

	Params::BP_HDPlayerControllerBase_C_ServerKickSquadMember Parms{};

	Parms.Squad = Squad;
	Parms.MemberToRemove = MemberToRemove;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HDPlayerControllerBase.BP_HDPlayerControllerBase_C.ServerSetSquadLockedState
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AHDSquadState*                    Squad                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bLocked                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_HDPlayerControllerBase_C::ServerSetSquadLockedState(class AHDSquadState* Squad, bool bLocked)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HDPlayerControllerBase_C", "ServerSetSquadLockedState");

	Params::BP_HDPlayerControllerBase_C_ServerSetSquadLockedState Parms{};

	Parms.Squad = Squad;
	Parms.bLocked = bLocked;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HDPlayerControllerBase.BP_HDPlayerControllerBase_C.ServerJoinSquad
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AHDSquadState*                    SquadToJoin                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_HDPlayerControllerBase_C::ServerJoinSquad(class AHDSquadState* SquadToJoin)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HDPlayerControllerBase_C", "ServerJoinSquad");

	Params::BP_HDPlayerControllerBase_C_ServerJoinSquad Parms{};

	Parms.SquadToJoin = SquadToJoin;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HDPlayerControllerBase.BP_HDPlayerControllerBase_C.ServerLeaveCurrentSquad
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)

void ABP_HDPlayerControllerBase_C::ServerLeaveCurrentSquad()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HDPlayerControllerBase_C", "ServerLeaveCurrentSquad");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_HDPlayerControllerBase.BP_HDPlayerControllerBase_C.ServerCreateAndJoinUserSquadUnnamed
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AHDPlatoonState*                  ForPlatoon                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_HDPlayerControllerBase_C::ServerCreateAndJoinUserSquadUnnamed(class AHDPlatoonState* ForPlatoon)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HDPlayerControllerBase_C", "ServerCreateAndJoinUserSquadUnnamed");

	Params::BP_HDPlayerControllerBase_C_ServerCreateAndJoinUserSquadUnnamed Parms{};

	Parms.ForPlatoon = ForPlatoon;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HDPlayerControllerBase.BP_HDPlayerControllerBase_C.InpActEvt_VoteNo_K2Node_InputActionEvent_0
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ABP_HDPlayerControllerBase_C::InpActEvt_VoteNo_K2Node_InputActionEvent_0(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HDPlayerControllerBase_C", "InpActEvt_VoteNo_K2Node_InputActionEvent_0");

	Params::BP_HDPlayerControllerBase_C_InpActEvt_VoteNo_K2Node_InputActionEvent_0 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HDPlayerControllerBase.BP_HDPlayerControllerBase_C.InpActEvt_VoteYes_K2Node_InputActionEvent_1
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ABP_HDPlayerControllerBase_C::InpActEvt_VoteYes_K2Node_InputActionEvent_1(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HDPlayerControllerBase_C", "InpActEvt_VoteYes_K2Node_InputActionEvent_1");

	Params::BP_HDPlayerControllerBase_C_InpActEvt_VoteYes_K2Node_InputActionEvent_1 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HDPlayerControllerBase.BP_HDPlayerControllerBase_C.InpActEvt_ChatHistoryToggle_K2Node_InputActionEvent_2
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ABP_HDPlayerControllerBase_C::InpActEvt_ChatHistoryToggle_K2Node_InputActionEvent_2(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HDPlayerControllerBase_C", "InpActEvt_ChatHistoryToggle_K2Node_InputActionEvent_2");

	Params::BP_HDPlayerControllerBase_C_InpActEvt_ChatHistoryToggle_K2Node_InputActionEvent_2 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HDPlayerControllerBase.BP_HDPlayerControllerBase_C.OnLoaded_97A2A56D4425648AEE60ECA073085E53
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UClass*                           Loaded                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_HDPlayerControllerBase_C::OnLoaded_97A2A56D4425648AEE60ECA073085E53(class UClass* Loaded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HDPlayerControllerBase_C", "OnLoaded_97A2A56D4425648AEE60ECA073085E53");

	Params::BP_HDPlayerControllerBase_C_OnLoaded_97A2A56D4425648AEE60ECA073085E53 Parms{};

	Parms.Loaded = Loaded;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HDPlayerControllerBase.BP_HDPlayerControllerBase_C.InpActEvt_F4_K2Node_InputKeyEvent_0
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ABP_HDPlayerControllerBase_C::InpActEvt_F4_K2Node_InputKeyEvent_0(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HDPlayerControllerBase_C", "InpActEvt_F4_K2Node_InputKeyEvent_0");

	Params::BP_HDPlayerControllerBase_C_InpActEvt_F4_K2Node_InputKeyEvent_0 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HDPlayerControllerBase.BP_HDPlayerControllerBase_C.InpActEvt_Use_K2Node_InputActionEvent_3
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ABP_HDPlayerControllerBase_C::InpActEvt_Use_K2Node_InputActionEvent_3(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HDPlayerControllerBase_C", "InpActEvt_Use_K2Node_InputActionEvent_3");

	Params::BP_HDPlayerControllerBase_C_InpActEvt_Use_K2Node_InputActionEvent_3 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HDPlayerControllerBase.BP_HDPlayerControllerBase_C.InpActEvt_F3_K2Node_InputKeyEvent_1
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ABP_HDPlayerControllerBase_C::InpActEvt_F3_K2Node_InputKeyEvent_1(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HDPlayerControllerBase_C", "InpActEvt_F3_K2Node_InputKeyEvent_1");

	Params::BP_HDPlayerControllerBase_C_InpActEvt_F3_K2Node_InputKeyEvent_1 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HDPlayerControllerBase.BP_HDPlayerControllerBase_C.InpActEvt_F2_K2Node_InputKeyEvent_2
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ABP_HDPlayerControllerBase_C::InpActEvt_F2_K2Node_InputKeyEvent_2(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HDPlayerControllerBase_C", "InpActEvt_F2_K2Node_InputKeyEvent_2");

	Params::BP_HDPlayerControllerBase_C_InpActEvt_F2_K2Node_InputKeyEvent_2 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HDPlayerControllerBase.BP_HDPlayerControllerBase_C.InpActEvt_F1_K2Node_InputKeyEvent_3
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ABP_HDPlayerControllerBase_C::InpActEvt_F1_K2Node_InputKeyEvent_3(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HDPlayerControllerBase_C", "InpActEvt_F1_K2Node_InputKeyEvent_3");

	Params::BP_HDPlayerControllerBase_C_InpActEvt_F1_K2Node_InputKeyEvent_3 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HDPlayerControllerBase.BP_HDPlayerControllerBase_C.InpActEvt_DeployMenu_K2Node_InputActionEvent_4
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ABP_HDPlayerControllerBase_C::InpActEvt_DeployMenu_K2Node_InputActionEvent_4(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HDPlayerControllerBase_C", "InpActEvt_DeployMenu_K2Node_InputActionEvent_4");

	Params::BP_HDPlayerControllerBase_C_InpActEvt_DeployMenu_K2Node_InputActionEvent_4 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HDPlayerControllerBase.BP_HDPlayerControllerBase_C.InpActEvt_Fire_K2Node_InputActionEvent_5
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ABP_HDPlayerControllerBase_C::InpActEvt_Fire_K2Node_InputActionEvent_5(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HDPlayerControllerBase_C", "InpActEvt_Fire_K2Node_InputActionEvent_5");

	Params::BP_HDPlayerControllerBase_C_InpActEvt_Fire_K2Node_InputActionEvent_5 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HDPlayerControllerBase.BP_HDPlayerControllerBase_C.InpActEvt_Fire_K2Node_InputActionEvent_6
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ABP_HDPlayerControllerBase_C::InpActEvt_Fire_K2Node_InputActionEvent_6(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HDPlayerControllerBase_C", "InpActEvt_Fire_K2Node_InputActionEvent_6");

	Params::BP_HDPlayerControllerBase_C_InpActEvt_Fire_K2Node_InputActionEvent_6 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HDPlayerControllerBase.BP_HDPlayerControllerBase_C.LoadAndActivateDeployMenu
// (Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UGameInstance*                    CallFunc_GetGameInstance_ReturnValue                   (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UHDGameInstance*                  K2Node_DynamicCast_AsHDGame_Instance                   (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    K2Node_DynamicCast_bSuccess                            (ZeroConstructor, IsPlainOldData, NoDestructor)
// class UWBP_DeployMenu_C*                CallFunc_CreateAndActivate_ReturnValue                 (ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_HDPlayerControllerBase_C::LoadAndActivateDeployMenu(class UGameInstance* CallFunc_GetGameInstance_ReturnValue, class UHDGameInstance* K2Node_DynamicCast_AsHDGame_Instance, bool K2Node_DynamicCast_bSuccess, class UWBP_DeployMenu_C* CallFunc_CreateAndActivate_ReturnValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HDPlayerControllerBase_C", "LoadAndActivateDeployMenu");

	Params::BP_HDPlayerControllerBase_C_LoadAndActivateDeployMenu Parms{};

	Parms.CallFunc_GetGameInstance_ReturnValue = CallFunc_GetGameInstance_ReturnValue;
	Parms.K2Node_DynamicCast_AsHDGame_Instance = K2Node_DynamicCast_AsHDGame_Instance;
	Parms.K2Node_DynamicCast_bSuccess = K2Node_DynamicCast_bSuccess;
	Parms.CallFunc_CreateAndActivate_ReturnValue = CallFunc_CreateAndActivate_ReturnValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HDPlayerControllerBase.BP_HDPlayerControllerBase_C.LoadDeployMenu
// (Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// FDelegateProperty_                      K2Node_CreateDelegate_OutputDelegate                   (ZeroConstructor, NoDestructor)
// bool                                    CallFunc_IsValid_ReturnValue                           (ZeroConstructor, IsPlainOldData, NoDestructor)
// class UWBP_DeployMenu_C*                CallFunc_Create_ReturnValue                            (ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_HDPlayerControllerBase_C::LoadDeployMenu(FDelegateProperty_ K2Node_CreateDelegate_OutputDelegate, bool CallFunc_IsValid_ReturnValue, class UWBP_DeployMenu_C* CallFunc_Create_ReturnValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HDPlayerControllerBase_C", "LoadDeployMenu");

	Params::BP_HDPlayerControllerBase_C_LoadDeployMenu Parms{};

	Parms.K2Node_CreateDelegate_OutputDelegate = K2Node_CreateDelegate_OutputDelegate;
	Parms.CallFunc_IsValid_ReturnValue = CallFunc_IsValid_ReturnValue;
	Parms.CallFunc_Create_ReturnValue = CallFunc_Create_ReturnValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HDPlayerControllerBase.BP_HDPlayerControllerBase_C.UnloadDeployMenu
// (Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    CallFunc_Not_PreBool_ReturnValue                       (ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    CallFunc_BooleanOR_ReturnValue                         (ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_HDPlayerControllerBase_C::UnloadDeployMenu(bool CallFunc_Not_PreBool_ReturnValue, bool CallFunc_BooleanOR_ReturnValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HDPlayerControllerBase_C", "UnloadDeployMenu");

	Params::BP_HDPlayerControllerBase_C_UnloadDeployMenu Parms{};

	Parms.CallFunc_Not_PreBool_ReturnValue = CallFunc_Not_PreBool_ReturnValue;
	Parms.CallFunc_BooleanOR_ReturnValue = CallFunc_BooleanOR_ReturnValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HDPlayerControllerBase.BP_HDPlayerControllerBase_C.DeployMenuToggle
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bShowMenu                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bForce                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    CallFunc_IsVictoryMenuShown_bShown                     (ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    CallFunc_Not_PreBool_ReturnValue                       (ZeroConstructor, IsPlainOldData, NoDestructor)
// class UGameInstance*                    CallFunc_GetGameInstance_ReturnValue                   (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    CallFunc_BooleanOR_ReturnValue                         (ZeroConstructor, IsPlainOldData, NoDestructor)
// class UHDGameInstance*                  K2Node_DynamicCast_AsHDGame_Instance                   (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    K2Node_DynamicCast_bSuccess                            (ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    CallFunc_Not_PreBool_ReturnValue_1                     (ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    CallFunc_BooleanOR_ReturnValue_1                       (ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    CallFunc_IsValid_ReturnValue                           (ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    CallFunc_IsInViewport_ReturnValue                      (ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    CallFunc_Not_PreBool_ReturnValue_2                     (ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    CallFunc_BooleanAND_ReturnValue                        (ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    CallFunc_BooleanAND_ReturnValue_1                      (ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    CallFunc_Not_PreBool_ReturnValue_3                     (ZeroConstructor, IsPlainOldData, NoDestructor)
// class UDFMenuManager*                   CallFunc_GetMenuManager_ReturnValue                    (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    CallFunc_BooleanAND_ReturnValue_2                      (ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_HDPlayerControllerBase_C::DeployMenuToggle(bool bShowMenu, bool bForce, bool CallFunc_IsVictoryMenuShown_bShown, bool CallFunc_Not_PreBool_ReturnValue, class UGameInstance* CallFunc_GetGameInstance_ReturnValue, bool CallFunc_BooleanOR_ReturnValue, class UHDGameInstance* K2Node_DynamicCast_AsHDGame_Instance, bool K2Node_DynamicCast_bSuccess, bool CallFunc_Not_PreBool_ReturnValue_1, bool CallFunc_BooleanOR_ReturnValue_1, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsInViewport_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue_2, bool CallFunc_BooleanAND_ReturnValue, bool CallFunc_BooleanAND_ReturnValue_1, bool CallFunc_Not_PreBool_ReturnValue_3, class UDFMenuManager* CallFunc_GetMenuManager_ReturnValue, bool CallFunc_BooleanAND_ReturnValue_2)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HDPlayerControllerBase_C", "DeployMenuToggle");

	Params::BP_HDPlayerControllerBase_C_DeployMenuToggle Parms{};

	Parms.bShowMenu = bShowMenu;
	Parms.bForce = bForce;
	Parms.CallFunc_IsVictoryMenuShown_bShown = CallFunc_IsVictoryMenuShown_bShown;
	Parms.CallFunc_Not_PreBool_ReturnValue = CallFunc_Not_PreBool_ReturnValue;
	Parms.CallFunc_GetGameInstance_ReturnValue = CallFunc_GetGameInstance_ReturnValue;
	Parms.CallFunc_BooleanOR_ReturnValue = CallFunc_BooleanOR_ReturnValue;
	Parms.K2Node_DynamicCast_AsHDGame_Instance = K2Node_DynamicCast_AsHDGame_Instance;
	Parms.K2Node_DynamicCast_bSuccess = K2Node_DynamicCast_bSuccess;
	Parms.CallFunc_Not_PreBool_ReturnValue_1 = CallFunc_Not_PreBool_ReturnValue_1;
	Parms.CallFunc_BooleanOR_ReturnValue_1 = CallFunc_BooleanOR_ReturnValue_1;
	Parms.CallFunc_IsValid_ReturnValue = CallFunc_IsValid_ReturnValue;
	Parms.CallFunc_IsInViewport_ReturnValue = CallFunc_IsInViewport_ReturnValue;
	Parms.CallFunc_Not_PreBool_ReturnValue_2 = CallFunc_Not_PreBool_ReturnValue_2;
	Parms.CallFunc_BooleanAND_ReturnValue = CallFunc_BooleanAND_ReturnValue;
	Parms.CallFunc_BooleanAND_ReturnValue_1 = CallFunc_BooleanAND_ReturnValue_1;
	Parms.CallFunc_Not_PreBool_ReturnValue_3 = CallFunc_Not_PreBool_ReturnValue_3;
	Parms.CallFunc_GetMenuManager_ReturnValue = CallFunc_GetMenuManager_ReturnValue;
	Parms.CallFunc_BooleanAND_ReturnValue_2 = CallFunc_BooleanAND_ReturnValue_2;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HDPlayerControllerBase.BP_HDPlayerControllerBase_C.LoadDeathScreen
// (Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UWBP_DeathScreen_C*               CallFunc_Create_ReturnValue                            (ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    CallFunc_IsValid_ReturnValue                           (ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_HDPlayerControllerBase_C::LoadDeathScreen(class UWBP_DeathScreen_C* CallFunc_Create_ReturnValue, bool CallFunc_IsValid_ReturnValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HDPlayerControllerBase_C", "LoadDeathScreen");

	Params::BP_HDPlayerControllerBase_C_LoadDeathScreen Parms{};

	Parms.CallFunc_Create_ReturnValue = CallFunc_Create_ReturnValue;
	Parms.CallFunc_IsValid_ReturnValue = CallFunc_IsValid_ReturnValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HDPlayerControllerBase.BP_HDPlayerControllerBase_C.UnloadDeathScreen
// (Protected, BlueprintCallable, BlueprintEvent)

void ABP_HDPlayerControllerBase_C::UnloadDeathScreen()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HDPlayerControllerBase_C", "UnloadDeathScreen");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_HDPlayerControllerBase.BP_HDPlayerControllerBase_C.DeathScreenToggle
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bShow                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    CallFunc_AddToPlayerScreen_ReturnValue                 (ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    CallFunc_IsValid_ReturnValue                           (ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    CallFunc_IsInViewport_ReturnValue                      (ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    CallFunc_Not_PreBool_ReturnValue                       (ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_HDPlayerControllerBase_C::DeathScreenToggle(bool bShow, bool CallFunc_AddToPlayerScreen_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsInViewport_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HDPlayerControllerBase_C", "DeathScreenToggle");

	Params::BP_HDPlayerControllerBase_C_DeathScreenToggle Parms{};

	Parms.bShow = bShow;
	Parms.CallFunc_AddToPlayerScreen_ReturnValue = CallFunc_AddToPlayerScreen_ReturnValue;
	Parms.CallFunc_IsValid_ReturnValue = CallFunc_IsValid_ReturnValue;
	Parms.CallFunc_IsInViewport_ReturnValue = CallFunc_IsInViewport_ReturnValue;
	Parms.CallFunc_Not_PreBool_ReturnValue = CallFunc_Not_PreBool_ReturnValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HDPlayerControllerBase.BP_HDPlayerControllerBase_C.IsVictoryMenuShown
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    bShown                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    CallFunc_IsValid_ReturnValue                           (ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    CallFunc_IsInViewport_ReturnValue                      (ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_HDPlayerControllerBase_C::IsVictoryMenuShown(bool* bShown, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsInViewport_ReturnValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HDPlayerControllerBase_C", "IsVictoryMenuShown");

	Params::BP_HDPlayerControllerBase_C_IsVictoryMenuShown Parms{};

	Parms.CallFunc_IsValid_ReturnValue = CallFunc_IsValid_ReturnValue;
	Parms.CallFunc_IsInViewport_ReturnValue = CallFunc_IsInViewport_ReturnValue;

	UObject::ProcessEvent(Func, &Parms);

	if (bShown != nullptr)
		*bShown = std::move(Parms.bShown);
}


// Function BP_HDPlayerControllerBase.BP_HDPlayerControllerBase_C.GetMinimapWidget
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UDFMinimap*                       MinimapWidget                                          (Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    CallFunc_IsValid_ReturnValue                           (ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    CallFunc_IsValid_ReturnValue_1                         (ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_HDPlayerControllerBase_C::GetMinimapWidget(class UDFMinimap** MinimapWidget, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsValid_ReturnValue_1)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HDPlayerControllerBase_C", "GetMinimapWidget");

	Params::BP_HDPlayerControllerBase_C_GetMinimapWidget Parms{};

	Parms.CallFunc_IsValid_ReturnValue = CallFunc_IsValid_ReturnValue;
	Parms.CallFunc_IsValid_ReturnValue_1 = CallFunc_IsValid_ReturnValue_1;

	UObject::ProcessEvent(Func, &Parms);

	if (MinimapWidget != nullptr)
		*MinimapWidget = std::move(Parms.MinimapWidget);
}


// Function BP_HDPlayerControllerBase.BP_HDPlayerControllerBase_C.ShowHUD
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AHUD*                             CallFunc_GetHUD_ReturnValue                            (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    CallFunc_IsValid_ReturnValue                           (ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_HDPlayerControllerBase_C::ShowHUD(class AHUD* CallFunc_GetHUD_ReturnValue, bool CallFunc_IsValid_ReturnValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HDPlayerControllerBase_C", "ShowHUD");

	Params::BP_HDPlayerControllerBase_C_ShowHUD Parms{};

	Parms.CallFunc_GetHUD_ReturnValue = CallFunc_GetHUD_ReturnValue;
	Parms.CallFunc_IsValid_ReturnValue = CallFunc_IsValid_ReturnValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HDPlayerControllerBase.BP_HDPlayerControllerBase_C.HideHUD
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AHUD*                             CallFunc_GetHUD_ReturnValue                            (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    CallFunc_IsValid_ReturnValue                           (ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_HDPlayerControllerBase_C::HideHUD(class AHUD* CallFunc_GetHUD_ReturnValue, bool CallFunc_IsValid_ReturnValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HDPlayerControllerBase_C", "HideHUD");

	Params::BP_HDPlayerControllerBase_C_HideHUD Parms{};

	Parms.CallFunc_GetHUD_ReturnValue = CallFunc_GetHUD_ReturnValue;
	Parms.CallFunc_IsValid_ReturnValue = CallFunc_IsValid_ReturnValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HDPlayerControllerBase.BP_HDPlayerControllerBase_C.SpawnVehicleAtPlayer
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UClass*                           VehicleClass                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          CallFunc_GetActorEyesViewPoint_OutLocation             (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FRotator                         CallFunc_GetActorEyesViewPoint_OutRotation             (ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FVector                          CallFunc_GetForwardVector_ReturnValue                  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          CallFunc_Multiply_VectorFloat_ReturnValue              (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          CallFunc_Add_VectorVector_ReturnValue                  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FTransform                       CallFunc_MakeTransform_ReturnValue                     (IsPlainOldData, NoDestructor)
// class AActor*                           CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class ABP_HDVehicleBase_C*              CallFunc_FinishSpawningActor_ReturnValue               (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_HDPlayerControllerBase_C::SpawnVehicleAtPlayer(class UClass* VehicleClass, const struct FVector& CallFunc_GetActorEyesViewPoint_OutLocation, const struct FRotator& CallFunc_GetActorEyesViewPoint_OutRotation, const struct FVector& CallFunc_GetForwardVector_ReturnValue, const struct FVector& CallFunc_Multiply_VectorFloat_ReturnValue, const struct FVector& CallFunc_Add_VectorVector_ReturnValue, const struct FTransform& CallFunc_MakeTransform_ReturnValue, class AActor* CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue, class ABP_HDVehicleBase_C* CallFunc_FinishSpawningActor_ReturnValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HDPlayerControllerBase_C", "SpawnVehicleAtPlayer");

	Params::BP_HDPlayerControllerBase_C_SpawnVehicleAtPlayer Parms{};

	Parms.VehicleClass = VehicleClass;
	Parms.CallFunc_GetActorEyesViewPoint_OutLocation = std::move(CallFunc_GetActorEyesViewPoint_OutLocation);
	Parms.CallFunc_GetActorEyesViewPoint_OutRotation = std::move(CallFunc_GetActorEyesViewPoint_OutRotation);
	Parms.CallFunc_GetForwardVector_ReturnValue = std::move(CallFunc_GetForwardVector_ReturnValue);
	Parms.CallFunc_Multiply_VectorFloat_ReturnValue = std::move(CallFunc_Multiply_VectorFloat_ReturnValue);
	Parms.CallFunc_Add_VectorVector_ReturnValue = std::move(CallFunc_Add_VectorVector_ReturnValue);
	Parms.CallFunc_MakeTransform_ReturnValue = std::move(CallFunc_MakeTransform_ReturnValue);
	Parms.CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue = CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue;
	Parms.CallFunc_FinishSpawningActor_ReturnValue = CallFunc_FinishSpawningActor_ReturnValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HDPlayerControllerBase.BP_HDPlayerControllerBase_C.GetHDPlayerState
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class AHDPlayerState*                   Param_PlayerState                                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AHDPlayerState*                   K2Node_DynamicCast_AsHDPlayer_State                    (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    K2Node_DynamicCast_bSuccess                            (ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_HDPlayerControllerBase_C::GetHDPlayerState(class AHDPlayerState** Param_PlayerState, class AHDPlayerState* K2Node_DynamicCast_AsHDPlayer_State, bool K2Node_DynamicCast_bSuccess)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HDPlayerControllerBase_C", "GetHDPlayerState");

	Params::BP_HDPlayerControllerBase_C_GetHDPlayerState Parms{};

	Parms.K2Node_DynamicCast_AsHDPlayer_State = K2Node_DynamicCast_AsHDPlayer_State;
	Parms.K2Node_DynamicCast_bSuccess = K2Node_DynamicCast_bSuccess;

	UObject::ProcessEvent(Func, &Parms);

	if (Param_PlayerState != nullptr)
		*Param_PlayerState = std::move(Parms.Param_PlayerState);
}


// Function BP_HDPlayerControllerBase.BP_HDPlayerControllerBase_C.GetHDTeamState
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class AHDTeamState*                     Param_TeamState                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AHDTeamState*                     K2Node_DynamicCast_AsTeam_State__HD_                   (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    K2Node_DynamicCast_bSuccess                            (ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_HDPlayerControllerBase_C::GetHDTeamState(class AHDTeamState** Param_TeamState, class AHDTeamState* K2Node_DynamicCast_AsTeam_State__HD_, bool K2Node_DynamicCast_bSuccess)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HDPlayerControllerBase_C", "GetHDTeamState");

	Params::BP_HDPlayerControllerBase_C_GetHDTeamState Parms{};

	Parms.K2Node_DynamicCast_AsTeam_State__HD_ = K2Node_DynamicCast_AsTeam_State__HD_;
	Parms.K2Node_DynamicCast_bSuccess = K2Node_DynamicCast_bSuccess;

	UObject::ProcessEvent(Func, &Parms);

	if (Param_TeamState != nullptr)
		*Param_TeamState = std::move(Parms.Param_TeamState);
}


// Function BP_HDPlayerControllerBase.BP_HDPlayerControllerBase_C.InternalCreateUnnamedSquad
// (Protected, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AHDPlatoonState*                  ForPlatoon                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bJoinSquadAfterCreation                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bStartLocked                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bSuccess                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class AHDSquadState*                    NewSquad                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   PlayerPrevSquadIdx                                     (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   IdxToUseForName                                        (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Temp_bool_Variable                                     (ZeroConstructor, IsPlainOldData, NoDestructor)
// class FText                             Temp_text_Variable                                     ()
// class FString                           CallFunc_GetPlayerName_ReturnValue                     (ZeroConstructor, HasGetValueTypeHash)
// class FText                             CallFunc_Conv_StringToText_ReturnValue                 ()
// struct FFormatArgumentData              K2Node_MakeStruct_FormatArgumentData                   (HasGetValueTypeHash)
// struct FFormatArgumentData              K2Node_MakeStruct_FormatArgumentData_1                 (HasGetValueTypeHash)
// class AHDPlayerState*                   Temp_object_Variable                                   (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    CallFunc_NotEqual_IntInt_ReturnValue                   (ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Temp_bool_Variable_1                                   (ZeroConstructor, IsPlainOldData, NoDestructor)
// class AHDPlayerState*                   CallFunc_GetHDPlayerState_PlayerState                  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Temp_bool_Variable_2                                   (ZeroConstructor, IsPlainOldData, NoDestructor)
// class AHDPlayerState*                   K2Node_Select_Default                                  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Temp_bool_Variable_3                                   (ZeroConstructor, IsPlainOldData, NoDestructor)
// class FText                             CallFunc_MakeLiteralText_ReturnValue                   ()
// class AHDSquadState*                    CallFunc_AddSquad_ReturnValue                          (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    CallFunc_EqualEqual_IntInt_ReturnValue                 (ZeroConstructor, IsPlainOldData, NoDestructor)
// int32                                   K2Node_Select_Default_1                                (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   K2Node_Select_Default_2                                (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    CallFunc_TextIsEmptyOrWhitespace_ReturnValue           (ZeroConstructor, IsPlainOldData, NoDestructor)
// class FText                             CallFunc_GetPredefinedSquadNameByIndex_SquadName       ()
// class FText                             K2Node_Select_Default_3                                ()
// bool                                    CallFunc_IsValid_ReturnValue                           (ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FFormatArgumentData              K2Node_MakeStruct_FormatArgumentData_2                 (HasGetValueTypeHash)
// TArray<struct FFormatArgumentData>      K2Node_MakeArray_Array                                 (ReferenceParm, HasGetValueTypeHash)
// class FText                             CallFunc_Format_ReturnValue                            ()
// class FString                           CallFunc_Conv_TextToString_ReturnValue                 (ZeroConstructor, HasGetValueTypeHash)

void ABP_HDPlayerControllerBase_C::InternalCreateUnnamedSquad(class AHDPlatoonState* ForPlatoon, bool bJoinSquadAfterCreation, bool bStartLocked, bool* bSuccess, class AHDSquadState** NewSquad, int32 PlayerPrevSquadIdx, int32 IdxToUseForName, bool Temp_bool_Variable, class FText Temp_text_Variable, const class FString& CallFunc_GetPlayerName_ReturnValue, class FText CallFunc_Conv_StringToText_ReturnValue, const struct FFormatArgumentData& K2Node_MakeStruct_FormatArgumentData, const struct FFormatArgumentData& K2Node_MakeStruct_FormatArgumentData_1, class AHDPlayerState* Temp_object_Variable, bool CallFunc_NotEqual_IntInt_ReturnValue, bool Temp_bool_Variable_1, class AHDPlayerState* CallFunc_GetHDPlayerState_PlayerState, bool Temp_bool_Variable_2, class AHDPlayerState* K2Node_Select_Default, bool Temp_bool_Variable_3, class FText CallFunc_MakeLiteralText_ReturnValue, class AHDSquadState* CallFunc_AddSquad_ReturnValue, bool CallFunc_EqualEqual_IntInt_ReturnValue, int32 K2Node_Select_Default_1, int32 K2Node_Select_Default_2, bool CallFunc_TextIsEmptyOrWhitespace_ReturnValue, class FText CallFunc_GetPredefinedSquadNameByIndex_SquadName, class FText K2Node_Select_Default_3, bool CallFunc_IsValid_ReturnValue, const struct FFormatArgumentData& K2Node_MakeStruct_FormatArgumentData_2, TArray<struct FFormatArgumentData>& K2Node_MakeArray_Array, class FText CallFunc_Format_ReturnValue, const class FString& CallFunc_Conv_TextToString_ReturnValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HDPlayerControllerBase_C", "InternalCreateUnnamedSquad");

	Params::BP_HDPlayerControllerBase_C_InternalCreateUnnamedSquad Parms{};

	Parms.ForPlatoon = ForPlatoon;
	Parms.bJoinSquadAfterCreation = bJoinSquadAfterCreation;
	Parms.bStartLocked = bStartLocked;
	Parms.PlayerPrevSquadIdx = PlayerPrevSquadIdx;
	Parms.IdxToUseForName = IdxToUseForName;
	Parms.Temp_bool_Variable = Temp_bool_Variable;
	Parms.Temp_text_Variable = Temp_text_Variable;
	Parms.CallFunc_GetPlayerName_ReturnValue = std::move(CallFunc_GetPlayerName_ReturnValue);
	Parms.CallFunc_Conv_StringToText_ReturnValue = CallFunc_Conv_StringToText_ReturnValue;
	Parms.K2Node_MakeStruct_FormatArgumentData = std::move(K2Node_MakeStruct_FormatArgumentData);
	Parms.K2Node_MakeStruct_FormatArgumentData_1 = std::move(K2Node_MakeStruct_FormatArgumentData_1);
	Parms.Temp_object_Variable = Temp_object_Variable;
	Parms.CallFunc_NotEqual_IntInt_ReturnValue = CallFunc_NotEqual_IntInt_ReturnValue;
	Parms.Temp_bool_Variable_1 = Temp_bool_Variable_1;
	Parms.CallFunc_GetHDPlayerState_PlayerState = CallFunc_GetHDPlayerState_PlayerState;
	Parms.Temp_bool_Variable_2 = Temp_bool_Variable_2;
	Parms.K2Node_Select_Default = K2Node_Select_Default;
	Parms.Temp_bool_Variable_3 = Temp_bool_Variable_3;
	Parms.CallFunc_MakeLiteralText_ReturnValue = CallFunc_MakeLiteralText_ReturnValue;
	Parms.CallFunc_AddSquad_ReturnValue = CallFunc_AddSquad_ReturnValue;
	Parms.CallFunc_EqualEqual_IntInt_ReturnValue = CallFunc_EqualEqual_IntInt_ReturnValue;
	Parms.K2Node_Select_Default_1 = K2Node_Select_Default_1;
	Parms.K2Node_Select_Default_2 = K2Node_Select_Default_2;
	Parms.CallFunc_TextIsEmptyOrWhitespace_ReturnValue = CallFunc_TextIsEmptyOrWhitespace_ReturnValue;
	Parms.CallFunc_GetPredefinedSquadNameByIndex_SquadName = CallFunc_GetPredefinedSquadNameByIndex_SquadName;
	Parms.K2Node_Select_Default_3 = K2Node_Select_Default_3;
	Parms.CallFunc_IsValid_ReturnValue = CallFunc_IsValid_ReturnValue;
	Parms.K2Node_MakeStruct_FormatArgumentData_2 = std::move(K2Node_MakeStruct_FormatArgumentData_2);
	Parms.K2Node_MakeArray_Array = std::move(K2Node_MakeArray_Array);
	Parms.CallFunc_Format_ReturnValue = CallFunc_Format_ReturnValue;
	Parms.CallFunc_Conv_TextToString_ReturnValue = std::move(CallFunc_Conv_TextToString_ReturnValue);

	UObject::ProcessEvent(Func, &Parms);

	K2Node_MakeArray_Array = std::move(Parms.K2Node_MakeArray_Array);

	if (bSuccess != nullptr)
		*bSuccess = std::move(Parms.bSuccess);

	if (NewSquad != nullptr)
		*NewSquad = std::move(Parms.NewSquad);
}


// Function BP_HDPlayerControllerBase.BP_HDPlayerControllerBase_C.JoinSquad
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AHDSquadState*                    SquadToJoin                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bJoinSuccess                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Temp_bool_Variable                                     (ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    CallFunc_CanJoinSquad_bJoinableSquad                   (ZeroConstructor, IsPlainOldData, NoDestructor)
// enum class ELogVerbosityBP              Temp_byte_Variable                                     (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// enum class ELogVerbosityBP              Temp_byte_Variable_1                                   (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    CallFunc_HasAuthority_ReturnValue                      (ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    CallFunc_HasAuthority_ReturnValue_1                    (ZeroConstructor, IsPlainOldData, NoDestructor)
// enum class ELogVerbosityBP              K2Node_Select_Default                                  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    CallFunc_RegisterPlayerSquadMember_ReturnValue         (ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_HDPlayerControllerBase_C::JoinSquad(class AHDSquadState* SquadToJoin, bool* bJoinSuccess, bool Temp_bool_Variable, bool CallFunc_CanJoinSquad_bJoinableSquad, enum class ELogVerbosityBP Temp_byte_Variable, enum class ELogVerbosityBP Temp_byte_Variable_1, bool CallFunc_HasAuthority_ReturnValue, bool CallFunc_HasAuthority_ReturnValue_1, enum class ELogVerbosityBP K2Node_Select_Default, bool CallFunc_RegisterPlayerSquadMember_ReturnValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HDPlayerControllerBase_C", "JoinSquad");

	Params::BP_HDPlayerControllerBase_C_JoinSquad Parms{};

	Parms.SquadToJoin = SquadToJoin;
	Parms.Temp_bool_Variable = Temp_bool_Variable;
	Parms.CallFunc_CanJoinSquad_bJoinableSquad = CallFunc_CanJoinSquad_bJoinableSquad;
	Parms.Temp_byte_Variable = Temp_byte_Variable;
	Parms.Temp_byte_Variable_1 = Temp_byte_Variable_1;
	Parms.CallFunc_HasAuthority_ReturnValue = CallFunc_HasAuthority_ReturnValue;
	Parms.CallFunc_HasAuthority_ReturnValue_1 = CallFunc_HasAuthority_ReturnValue_1;
	Parms.K2Node_Select_Default = K2Node_Select_Default;
	Parms.CallFunc_RegisterPlayerSquadMember_ReturnValue = CallFunc_RegisterPlayerSquadMember_ReturnValue;

	UObject::ProcessEvent(Func, &Parms);

	if (bJoinSuccess != nullptr)
		*bJoinSuccess = std::move(Parms.bJoinSuccess);
}


// Function BP_HDPlayerControllerBase.BP_HDPlayerControllerBase_C.CanJoinSquad
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class AHDSquadState*                    SquadToJoin                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bJoinableSquad                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    CallFunc_IsValid_ReturnValue                           (ZeroConstructor, IsPlainOldData, NoDestructor)
// class AHDTeamState*                     CallFunc_GetHDTeamState_TeamState                      (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    CallFunc_IsValid_ReturnValue_1                         (ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    CallFunc_EqualEqual_ByteByte_ReturnValue               (ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    CallFunc_CanRegisterPlayerSquadMember_ReturnValue      (ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    CallFunc_IsPlayerRegisteredSquadMember_ReturnValue     (ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    CallFunc_Not_PreBool_ReturnValue                       (ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    CallFunc_BooleanAND_ReturnValue                        (ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_HDPlayerControllerBase_C::CanJoinSquad(class AHDSquadState* SquadToJoin, bool* bJoinableSquad, bool CallFunc_IsValid_ReturnValue, class AHDTeamState* CallFunc_GetHDTeamState_TeamState, bool CallFunc_IsValid_ReturnValue_1, bool CallFunc_EqualEqual_ByteByte_ReturnValue, bool CallFunc_CanRegisterPlayerSquadMember_ReturnValue, bool CallFunc_IsPlayerRegisteredSquadMember_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue, bool CallFunc_BooleanAND_ReturnValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HDPlayerControllerBase_C", "CanJoinSquad");

	Params::BP_HDPlayerControllerBase_C_CanJoinSquad Parms{};

	Parms.SquadToJoin = SquadToJoin;
	Parms.CallFunc_IsValid_ReturnValue = CallFunc_IsValid_ReturnValue;
	Parms.CallFunc_GetHDTeamState_TeamState = CallFunc_GetHDTeamState_TeamState;
	Parms.CallFunc_IsValid_ReturnValue_1 = CallFunc_IsValid_ReturnValue_1;
	Parms.CallFunc_EqualEqual_ByteByte_ReturnValue = CallFunc_EqualEqual_ByteByte_ReturnValue;
	Parms.CallFunc_CanRegisterPlayerSquadMember_ReturnValue = CallFunc_CanRegisterPlayerSquadMember_ReturnValue;
	Parms.CallFunc_IsPlayerRegisteredSquadMember_ReturnValue = CallFunc_IsPlayerRegisteredSquadMember_ReturnValue;
	Parms.CallFunc_Not_PreBool_ReturnValue = CallFunc_Not_PreBool_ReturnValue;
	Parms.CallFunc_BooleanAND_ReturnValue = CallFunc_BooleanAND_ReturnValue;

	UObject::ProcessEvent(Func, &Parms);

	if (bJoinableSquad != nullptr)
		*bJoinableSquad = std::move(Parms.bJoinableSquad);
}


// Function BP_HDPlayerControllerBase.BP_HDPlayerControllerBase_C.IsSquadLeader
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class AHDSquadState*                    Squad                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bSquadLeader                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    CallFunc_IsValid_ReturnValue                           (ZeroConstructor, IsPlainOldData, NoDestructor)
// class AHDPlayerState*                   CallFunc_GetHDPlayerState_PlayerState                  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    CallFunc_EqualEqual_ObjectObject_ReturnValue           (ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    CallFunc_IsValid_ReturnValue_1                         (ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_HDPlayerControllerBase_C::IsSquadLeader(class AHDSquadState* Squad, bool* bSquadLeader, bool CallFunc_IsValid_ReturnValue, class AHDPlayerState* CallFunc_GetHDPlayerState_PlayerState, bool CallFunc_EqualEqual_ObjectObject_ReturnValue, bool CallFunc_IsValid_ReturnValue_1)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HDPlayerControllerBase_C", "IsSquadLeader");

	Params::BP_HDPlayerControllerBase_C_IsSquadLeader Parms{};

	Parms.Squad = Squad;
	Parms.CallFunc_IsValid_ReturnValue = CallFunc_IsValid_ReturnValue;
	Parms.CallFunc_GetHDPlayerState_PlayerState = CallFunc_GetHDPlayerState_PlayerState;
	Parms.CallFunc_EqualEqual_ObjectObject_ReturnValue = CallFunc_EqualEqual_ObjectObject_ReturnValue;
	Parms.CallFunc_IsValid_ReturnValue_1 = CallFunc_IsValid_ReturnValue_1;

	UObject::ProcessEvent(Func, &Parms);

	if (bSquadLeader != nullptr)
		*bSquadLeader = std::move(Parms.bSquadLeader);
}


// Function BP_HDPlayerControllerBase.BP_HDPlayerControllerBase_C.LeaveCurrentSquad
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bLeaveSuccess                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Temp_bool_Variable                                     (ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    CallFunc_HasAuthority_ReturnValue                      (ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    CallFunc_HasAuthority_ReturnValue_1                    (ZeroConstructor, IsPlainOldData, NoDestructor)
// enum class ELogVerbosityBP              Temp_byte_Variable                                     (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// enum class ELogVerbosityBP              Temp_byte_Variable_1                                   (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AHDPlayerState*                   CallFunc_GetHDPlayerState_PlayerState                  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// enum class ELogVerbosityBP              K2Node_Select_Default                                  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    CallFunc_UnregisterPlayerSquadMember_ReturnValue       (ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    CallFunc_IsValid_ReturnValue                           (ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    CallFunc_IsValid_ReturnValue_1                         (ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_HDPlayerControllerBase_C::LeaveCurrentSquad(bool* bLeaveSuccess, bool Temp_bool_Variable, bool CallFunc_HasAuthority_ReturnValue, bool CallFunc_HasAuthority_ReturnValue_1, enum class ELogVerbosityBP Temp_byte_Variable, enum class ELogVerbosityBP Temp_byte_Variable_1, class AHDPlayerState* CallFunc_GetHDPlayerState_PlayerState, enum class ELogVerbosityBP K2Node_Select_Default, bool CallFunc_UnregisterPlayerSquadMember_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsValid_ReturnValue_1)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HDPlayerControllerBase_C", "LeaveCurrentSquad");

	Params::BP_HDPlayerControllerBase_C_LeaveCurrentSquad Parms{};

	Parms.Temp_bool_Variable = Temp_bool_Variable;
	Parms.CallFunc_HasAuthority_ReturnValue = CallFunc_HasAuthority_ReturnValue;
	Parms.CallFunc_HasAuthority_ReturnValue_1 = CallFunc_HasAuthority_ReturnValue_1;
	Parms.Temp_byte_Variable = Temp_byte_Variable;
	Parms.Temp_byte_Variable_1 = Temp_byte_Variable_1;
	Parms.CallFunc_GetHDPlayerState_PlayerState = CallFunc_GetHDPlayerState_PlayerState;
	Parms.K2Node_Select_Default = K2Node_Select_Default;
	Parms.CallFunc_UnregisterPlayerSquadMember_ReturnValue = CallFunc_UnregisterPlayerSquadMember_ReturnValue;
	Parms.CallFunc_IsValid_ReturnValue = CallFunc_IsValid_ReturnValue;
	Parms.CallFunc_IsValid_ReturnValue_1 = CallFunc_IsValid_ReturnValue_1;

	UObject::ProcessEvent(Func, &Parms);

	if (bLeaveSuccess != nullptr)
		*bLeaveSuccess = std::move(Parms.bLeaveSuccess);
}


// Function BP_HDPlayerControllerBase.BP_HDPlayerControllerBase_C.KickSquadMember
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AHDSquadState*                    Squad                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AHDPlayerState*                   MemberToRemove                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bRemoveSuccess                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// enum class ELogVerbosityBP              Temp_byte_Variable                                     (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    CallFunc_IsValid_ReturnValue                           (ZeroConstructor, IsPlainOldData, NoDestructor)
// enum class ELogVerbosityBP              Temp_byte_Variable_1                                   (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Temp_bool_Variable                                     (ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    CallFunc_HasAuthority_ReturnValue                      (ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    CallFunc_UnregisterSquadMember_ReturnValue             (ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    CallFunc_IsValid_ReturnValue_1                         (ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    CallFunc_IsSquadLeader_bSquadLeader                    (ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    CallFunc_HasAuthority_ReturnValue_1                    (ZeroConstructor, IsPlainOldData, NoDestructor)
// enum class ELogVerbosityBP              K2Node_Select_Default                                  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_HDPlayerControllerBase_C::KickSquadMember(class AHDSquadState* Squad, class AHDPlayerState* MemberToRemove, bool* bRemoveSuccess, enum class ELogVerbosityBP Temp_byte_Variable, bool CallFunc_IsValid_ReturnValue, enum class ELogVerbosityBP Temp_byte_Variable_1, bool Temp_bool_Variable, bool CallFunc_HasAuthority_ReturnValue, bool CallFunc_UnregisterSquadMember_ReturnValue, bool CallFunc_IsValid_ReturnValue_1, bool CallFunc_IsSquadLeader_bSquadLeader, bool CallFunc_HasAuthority_ReturnValue_1, enum class ELogVerbosityBP K2Node_Select_Default)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HDPlayerControllerBase_C", "KickSquadMember");

	Params::BP_HDPlayerControllerBase_C_KickSquadMember Parms{};

	Parms.Squad = Squad;
	Parms.MemberToRemove = MemberToRemove;
	Parms.Temp_byte_Variable = Temp_byte_Variable;
	Parms.CallFunc_IsValid_ReturnValue = CallFunc_IsValid_ReturnValue;
	Parms.Temp_byte_Variable_1 = Temp_byte_Variable_1;
	Parms.Temp_bool_Variable = Temp_bool_Variable;
	Parms.CallFunc_HasAuthority_ReturnValue = CallFunc_HasAuthority_ReturnValue;
	Parms.CallFunc_UnregisterSquadMember_ReturnValue = CallFunc_UnregisterSquadMember_ReturnValue;
	Parms.CallFunc_IsValid_ReturnValue_1 = CallFunc_IsValid_ReturnValue_1;
	Parms.CallFunc_IsSquadLeader_bSquadLeader = CallFunc_IsSquadLeader_bSquadLeader;
	Parms.CallFunc_HasAuthority_ReturnValue_1 = CallFunc_HasAuthority_ReturnValue_1;
	Parms.K2Node_Select_Default = K2Node_Select_Default;

	UObject::ProcessEvent(Func, &Parms);

	if (bRemoveSuccess != nullptr)
		*bRemoveSuccess = std::move(Parms.bRemoveSuccess);
}


// Function BP_HDPlayerControllerBase.BP_HDPlayerControllerBase_C.SetSquadLockedState
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AHDSquadState*                    Squad                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bLocked                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// enum class ELogVerbosityBP              Temp_byte_Variable                                     (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    CallFunc_IsValid_ReturnValue                           (ZeroConstructor, IsPlainOldData, NoDestructor)
// enum class ELogVerbosityBP              Temp_byte_Variable_1                                   (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Temp_bool_Variable                                     (ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    CallFunc_HasAuthority_ReturnValue                      (ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    CallFunc_IsSquadLeader_bSquadLeader                    (ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    CallFunc_HasAuthority_ReturnValue_1                    (ZeroConstructor, IsPlainOldData, NoDestructor)
// enum class ELogVerbosityBP              K2Node_Select_Default                                  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_HDPlayerControllerBase_C::SetSquadLockedState(class AHDSquadState* Squad, bool bLocked, enum class ELogVerbosityBP Temp_byte_Variable, bool CallFunc_IsValid_ReturnValue, enum class ELogVerbosityBP Temp_byte_Variable_1, bool Temp_bool_Variable, bool CallFunc_HasAuthority_ReturnValue, bool CallFunc_IsSquadLeader_bSquadLeader, bool CallFunc_HasAuthority_ReturnValue_1, enum class ELogVerbosityBP K2Node_Select_Default)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HDPlayerControllerBase_C", "SetSquadLockedState");

	Params::BP_HDPlayerControllerBase_C_SetSquadLockedState Parms{};

	Parms.Squad = Squad;
	Parms.bLocked = bLocked;
	Parms.Temp_byte_Variable = Temp_byte_Variable;
	Parms.CallFunc_IsValid_ReturnValue = CallFunc_IsValid_ReturnValue;
	Parms.Temp_byte_Variable_1 = Temp_byte_Variable_1;
	Parms.Temp_bool_Variable = Temp_bool_Variable;
	Parms.CallFunc_HasAuthority_ReturnValue = CallFunc_HasAuthority_ReturnValue;
	Parms.CallFunc_IsSquadLeader_bSquadLeader = CallFunc_IsSquadLeader_bSquadLeader;
	Parms.CallFunc_HasAuthority_ReturnValue_1 = CallFunc_HasAuthority_ReturnValue_1;
	Parms.K2Node_Select_Default = K2Node_Select_Default;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HDPlayerControllerBase.BP_HDPlayerControllerBase_C.SetCamViewRotationLimits
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FRotator                         ViewRotMin                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FRotator                         ViewRotMax                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bRelativeToPawnRotation                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FRotator                         PawnRotation                                           (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
// float                                   CallFunc_BreakRotator_Roll                             (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   CallFunc_BreakRotator_Pitch                            (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   CallFunc_BreakRotator_Yaw                              (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   CallFunc_BreakRotator_Roll_1                           (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   CallFunc_BreakRotator_Pitch_1                          (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   CallFunc_BreakRotator_Yaw_1                            (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_HDPlayerControllerBase_C::SetCamViewRotationLimits(const struct FRotator& ViewRotMin, const struct FRotator& ViewRotMax, bool bRelativeToPawnRotation, const struct FRotator& PawnRotation, float CallFunc_BreakRotator_Roll, float CallFunc_BreakRotator_Pitch, float CallFunc_BreakRotator_Yaw, float CallFunc_BreakRotator_Roll_1, float CallFunc_BreakRotator_Pitch_1, float CallFunc_BreakRotator_Yaw_1)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HDPlayerControllerBase_C", "SetCamViewRotationLimits");

	Params::BP_HDPlayerControllerBase_C_SetCamViewRotationLimits Parms{};

	Parms.ViewRotMin = std::move(ViewRotMin);
	Parms.ViewRotMax = std::move(ViewRotMax);
	Parms.bRelativeToPawnRotation = bRelativeToPawnRotation;
	Parms.PawnRotation = std::move(PawnRotation);
	Parms.CallFunc_BreakRotator_Roll = CallFunc_BreakRotator_Roll;
	Parms.CallFunc_BreakRotator_Pitch = CallFunc_BreakRotator_Pitch;
	Parms.CallFunc_BreakRotator_Yaw = CallFunc_BreakRotator_Yaw;
	Parms.CallFunc_BreakRotator_Roll_1 = CallFunc_BreakRotator_Roll_1;
	Parms.CallFunc_BreakRotator_Pitch_1 = CallFunc_BreakRotator_Pitch_1;
	Parms.CallFunc_BreakRotator_Yaw_1 = CallFunc_BreakRotator_Yaw_1;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HDPlayerControllerBase.BP_HDPlayerControllerBase_C.SetCamViewRotationRollLimits
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   ViewRollMin                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   ViewRollMax                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bRelativeToPawnRotation                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FRotator                         PawnRotation                                           (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Temp_bool_Variable                                     (ZeroConstructor, IsPlainOldData, NoDestructor)
// float                                   CallFunc_BreakRotator_Roll                             (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   CallFunc_BreakRotator_Pitch                            (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   CallFunc_BreakRotator_Yaw                              (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   CallFunc_NormalizeAxis_ReturnValue                     (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class APawn*                            CallFunc_K2_GetPawn_ReturnValue                        (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   CallFunc_Add_FloatFloat_ReturnValue                    (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    CallFunc_IsValid_ReturnValue                           (ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FRotator                         CallFunc_K2_GetActorRotation_ReturnValue               (ZeroConstructor, IsPlainOldData, NoDestructor)
// float                                   CallFunc_Add_FloatFloat_ReturnValue_1                  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Temp_bool_Variable_1                                   (ZeroConstructor, IsPlainOldData, NoDestructor)
// float                                   K2Node_Select_Default                                  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   K2Node_Select_Default_1                                (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_HDPlayerControllerBase_C::SetCamViewRotationRollLimits(float ViewRollMin, float ViewRollMax, bool bRelativeToPawnRotation, const struct FRotator& PawnRotation, bool Temp_bool_Variable, float CallFunc_BreakRotator_Roll, float CallFunc_BreakRotator_Pitch, float CallFunc_BreakRotator_Yaw, float CallFunc_NormalizeAxis_ReturnValue, class APawn* CallFunc_K2_GetPawn_ReturnValue, float CallFunc_Add_FloatFloat_ReturnValue, bool CallFunc_IsValid_ReturnValue, const struct FRotator& CallFunc_K2_GetActorRotation_ReturnValue, float CallFunc_Add_FloatFloat_ReturnValue_1, bool Temp_bool_Variable_1, float K2Node_Select_Default, float K2Node_Select_Default_1)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HDPlayerControllerBase_C", "SetCamViewRotationRollLimits");

	Params::BP_HDPlayerControllerBase_C_SetCamViewRotationRollLimits Parms{};

	Parms.ViewRollMin = ViewRollMin;
	Parms.ViewRollMax = ViewRollMax;
	Parms.bRelativeToPawnRotation = bRelativeToPawnRotation;
	Parms.PawnRotation = std::move(PawnRotation);
	Parms.Temp_bool_Variable = Temp_bool_Variable;
	Parms.CallFunc_BreakRotator_Roll = CallFunc_BreakRotator_Roll;
	Parms.CallFunc_BreakRotator_Pitch = CallFunc_BreakRotator_Pitch;
	Parms.CallFunc_BreakRotator_Yaw = CallFunc_BreakRotator_Yaw;
	Parms.CallFunc_NormalizeAxis_ReturnValue = CallFunc_NormalizeAxis_ReturnValue;
	Parms.CallFunc_K2_GetPawn_ReturnValue = CallFunc_K2_GetPawn_ReturnValue;
	Parms.CallFunc_Add_FloatFloat_ReturnValue = CallFunc_Add_FloatFloat_ReturnValue;
	Parms.CallFunc_IsValid_ReturnValue = CallFunc_IsValid_ReturnValue;
	Parms.CallFunc_K2_GetActorRotation_ReturnValue = std::move(CallFunc_K2_GetActorRotation_ReturnValue);
	Parms.CallFunc_Add_FloatFloat_ReturnValue_1 = CallFunc_Add_FloatFloat_ReturnValue_1;
	Parms.Temp_bool_Variable_1 = Temp_bool_Variable_1;
	Parms.K2Node_Select_Default = K2Node_Select_Default;
	Parms.K2Node_Select_Default_1 = K2Node_Select_Default_1;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HDPlayerControllerBase.BP_HDPlayerControllerBase_C.SetCamViewRotationPitchLimits
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   ViewPitchMin                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   ViewPitchMax                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bRelativeToPawnRotation                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FRotator                         PawnRotation                                           (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Temp_bool_Variable                                     (ZeroConstructor, IsPlainOldData, NoDestructor)
// float                                   CallFunc_BreakRotator_Roll                             (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   CallFunc_BreakRotator_Pitch                            (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   CallFunc_BreakRotator_Yaw                              (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   CallFunc_NormalizeAxis_ReturnValue                     (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class APawn*                            CallFunc_K2_GetPawn_ReturnValue                        (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   CallFunc_Add_FloatFloat_ReturnValue                    (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    CallFunc_IsValid_ReturnValue                           (ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FRotator                         CallFunc_K2_GetActorRotation_ReturnValue               (ZeroConstructor, IsPlainOldData, NoDestructor)
// float                                   CallFunc_Add_FloatFloat_ReturnValue_1                  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Temp_bool_Variable_1                                   (ZeroConstructor, IsPlainOldData, NoDestructor)
// float                                   K2Node_Select_Default                                  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   K2Node_Select_Default_1                                (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_HDPlayerControllerBase_C::SetCamViewRotationPitchLimits(float ViewPitchMin, float ViewPitchMax, bool bRelativeToPawnRotation, const struct FRotator& PawnRotation, bool Temp_bool_Variable, float CallFunc_BreakRotator_Roll, float CallFunc_BreakRotator_Pitch, float CallFunc_BreakRotator_Yaw, float CallFunc_NormalizeAxis_ReturnValue, class APawn* CallFunc_K2_GetPawn_ReturnValue, float CallFunc_Add_FloatFloat_ReturnValue, bool CallFunc_IsValid_ReturnValue, const struct FRotator& CallFunc_K2_GetActorRotation_ReturnValue, float CallFunc_Add_FloatFloat_ReturnValue_1, bool Temp_bool_Variable_1, float K2Node_Select_Default, float K2Node_Select_Default_1)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HDPlayerControllerBase_C", "SetCamViewRotationPitchLimits");

	Params::BP_HDPlayerControllerBase_C_SetCamViewRotationPitchLimits Parms{};

	Parms.ViewPitchMin = ViewPitchMin;
	Parms.ViewPitchMax = ViewPitchMax;
	Parms.bRelativeToPawnRotation = bRelativeToPawnRotation;
	Parms.PawnRotation = std::move(PawnRotation);
	Parms.Temp_bool_Variable = Temp_bool_Variable;
	Parms.CallFunc_BreakRotator_Roll = CallFunc_BreakRotator_Roll;
	Parms.CallFunc_BreakRotator_Pitch = CallFunc_BreakRotator_Pitch;
	Parms.CallFunc_BreakRotator_Yaw = CallFunc_BreakRotator_Yaw;
	Parms.CallFunc_NormalizeAxis_ReturnValue = CallFunc_NormalizeAxis_ReturnValue;
	Parms.CallFunc_K2_GetPawn_ReturnValue = CallFunc_K2_GetPawn_ReturnValue;
	Parms.CallFunc_Add_FloatFloat_ReturnValue = CallFunc_Add_FloatFloat_ReturnValue;
	Parms.CallFunc_IsValid_ReturnValue = CallFunc_IsValid_ReturnValue;
	Parms.CallFunc_K2_GetActorRotation_ReturnValue = std::move(CallFunc_K2_GetActorRotation_ReturnValue);
	Parms.CallFunc_Add_FloatFloat_ReturnValue_1 = CallFunc_Add_FloatFloat_ReturnValue_1;
	Parms.Temp_bool_Variable_1 = Temp_bool_Variable_1;
	Parms.K2Node_Select_Default = K2Node_Select_Default;
	Parms.K2Node_Select_Default_1 = K2Node_Select_Default_1;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HDPlayerControllerBase.BP_HDPlayerControllerBase_C.SetCamViewRotationYawLimits
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   ViewYawMin                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   ViewYawMax                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bRelativeToPawnRotation                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FRotator                         PawnRotation                                           (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Temp_bool_Variable                                     (ZeroConstructor, IsPlainOldData, NoDestructor)
// float                                   CallFunc_BreakRotator_Roll                             (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   CallFunc_BreakRotator_Pitch                            (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   CallFunc_BreakRotator_Yaw                              (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   CallFunc_NormalizeAxis_ReturnValue                     (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class APawn*                            CallFunc_K2_GetPawn_ReturnValue                        (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    CallFunc_IsValid_ReturnValue                           (ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FRotator                         CallFunc_K2_GetActorRotation_ReturnValue               (ZeroConstructor, IsPlainOldData, NoDestructor)
// float                                   CallFunc_Add_FloatFloat_ReturnValue                    (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   CallFunc_Add_FloatFloat_ReturnValue_1                  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Temp_bool_Variable_1                                   (ZeroConstructor, IsPlainOldData, NoDestructor)
// float                                   K2Node_Select_Default                                  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   K2Node_Select_Default_1                                (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_HDPlayerControllerBase_C::SetCamViewRotationYawLimits(float ViewYawMin, float ViewYawMax, bool bRelativeToPawnRotation, const struct FRotator& PawnRotation, bool Temp_bool_Variable, float CallFunc_BreakRotator_Roll, float CallFunc_BreakRotator_Pitch, float CallFunc_BreakRotator_Yaw, float CallFunc_NormalizeAxis_ReturnValue, class APawn* CallFunc_K2_GetPawn_ReturnValue, bool CallFunc_IsValid_ReturnValue, const struct FRotator& CallFunc_K2_GetActorRotation_ReturnValue, float CallFunc_Add_FloatFloat_ReturnValue, float CallFunc_Add_FloatFloat_ReturnValue_1, bool Temp_bool_Variable_1, float K2Node_Select_Default, float K2Node_Select_Default_1)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HDPlayerControllerBase_C", "SetCamViewRotationYawLimits");

	Params::BP_HDPlayerControllerBase_C_SetCamViewRotationYawLimits Parms{};

	Parms.ViewYawMin = ViewYawMin;
	Parms.ViewYawMax = ViewYawMax;
	Parms.bRelativeToPawnRotation = bRelativeToPawnRotation;
	Parms.PawnRotation = std::move(PawnRotation);
	Parms.Temp_bool_Variable = Temp_bool_Variable;
	Parms.CallFunc_BreakRotator_Roll = CallFunc_BreakRotator_Roll;
	Parms.CallFunc_BreakRotator_Pitch = CallFunc_BreakRotator_Pitch;
	Parms.CallFunc_BreakRotator_Yaw = CallFunc_BreakRotator_Yaw;
	Parms.CallFunc_NormalizeAxis_ReturnValue = CallFunc_NormalizeAxis_ReturnValue;
	Parms.CallFunc_K2_GetPawn_ReturnValue = CallFunc_K2_GetPawn_ReturnValue;
	Parms.CallFunc_IsValid_ReturnValue = CallFunc_IsValid_ReturnValue;
	Parms.CallFunc_K2_GetActorRotation_ReturnValue = std::move(CallFunc_K2_GetActorRotation_ReturnValue);
	Parms.CallFunc_Add_FloatFloat_ReturnValue = CallFunc_Add_FloatFloat_ReturnValue;
	Parms.CallFunc_Add_FloatFloat_ReturnValue_1 = CallFunc_Add_FloatFloat_ReturnValue_1;
	Parms.Temp_bool_Variable_1 = Temp_bool_Variable_1;
	Parms.K2Node_Select_Default = K2Node_Select_Default;
	Parms.K2Node_Select_Default_1 = K2Node_Select_Default_1;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HDPlayerControllerBase.BP_HDPlayerControllerBase_C.RestoreCamDefaultViewRotationLimits
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_HDPlayerControllerBase_C::RestoreCamDefaultViewRotationLimits()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HDPlayerControllerBase_C", "RestoreCamDefaultViewRotationLimits");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_HDPlayerControllerBase.BP_HDPlayerControllerBase_C.RestoreCamDefaultViewRotationRollLimits
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UClass*                           CallFunc_GetObjectClass_ReturnValue                    (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_HDPlayerControllerBase_C::RestoreCamDefaultViewRotationRollLimits(class UClass* CallFunc_GetObjectClass_ReturnValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HDPlayerControllerBase_C", "RestoreCamDefaultViewRotationRollLimits");

	Params::BP_HDPlayerControllerBase_C_RestoreCamDefaultViewRotationRollLimits Parms{};

	Parms.CallFunc_GetObjectClass_ReturnValue = CallFunc_GetObjectClass_ReturnValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HDPlayerControllerBase.BP_HDPlayerControllerBase_C.RestoreCamDefaultViewRotationPitchLimits
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UClass*                           CallFunc_GetObjectClass_ReturnValue                    (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_HDPlayerControllerBase_C::RestoreCamDefaultViewRotationPitchLimits(class UClass* CallFunc_GetObjectClass_ReturnValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HDPlayerControllerBase_C", "RestoreCamDefaultViewRotationPitchLimits");

	Params::BP_HDPlayerControllerBase_C_RestoreCamDefaultViewRotationPitchLimits Parms{};

	Parms.CallFunc_GetObjectClass_ReturnValue = CallFunc_GetObjectClass_ReturnValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HDPlayerControllerBase.BP_HDPlayerControllerBase_C.RestoreCamDefaultViewRotationYawLimits
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UClass*                           CallFunc_GetObjectClass_ReturnValue                    (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_HDPlayerControllerBase_C::RestoreCamDefaultViewRotationYawLimits(class UClass* CallFunc_GetObjectClass_ReturnValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HDPlayerControllerBase_C", "RestoreCamDefaultViewRotationYawLimits");

	Params::BP_HDPlayerControllerBase_C_RestoreCamDefaultViewRotationYawLimits Parms{};

	Parms.CallFunc_GetObjectClass_ReturnValue = CallFunc_GetObjectClass_ReturnValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HDPlayerControllerBase.BP_HDPlayerControllerBase_C.GetJoystickDirection
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// enum class EJoystickTypes               Stick                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector2D                        StickInput                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   CallFunc_GetInputAxisKeyValue_ReturnValue              (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    K2Node_SwitchEnum_CmpSuccess                           (ZeroConstructor, IsPlainOldData, NoDestructor)
// float                                   CallFunc_GetInputAxisKeyValue_ReturnValue_1            (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   CallFunc_GetInputAxisKeyValue_ReturnValue_2            (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector2D                        CallFunc_MakeVector2D_ReturnValue                      (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   CallFunc_Multiply_FloatFloat_ReturnValue               (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   CallFunc_GetInputAxisKeyValue_ReturnValue_3            (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector2D                        CallFunc_MakeVector2D_ReturnValue_1                    (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_HDPlayerControllerBase_C::GetJoystickDirection(enum class EJoystickTypes Stick, struct FVector2D* StickInput, float CallFunc_GetInputAxisKeyValue_ReturnValue, bool K2Node_SwitchEnum_CmpSuccess, float CallFunc_GetInputAxisKeyValue_ReturnValue_1, float CallFunc_GetInputAxisKeyValue_ReturnValue_2, const struct FVector2D& CallFunc_MakeVector2D_ReturnValue, float CallFunc_Multiply_FloatFloat_ReturnValue, float CallFunc_GetInputAxisKeyValue_ReturnValue_3, const struct FVector2D& CallFunc_MakeVector2D_ReturnValue_1)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HDPlayerControllerBase_C", "GetJoystickDirection");

	Params::BP_HDPlayerControllerBase_C_GetJoystickDirection Parms{};

	Parms.Stick = Stick;
	Parms.CallFunc_GetInputAxisKeyValue_ReturnValue = CallFunc_GetInputAxisKeyValue_ReturnValue;
	Parms.K2Node_SwitchEnum_CmpSuccess = K2Node_SwitchEnum_CmpSuccess;
	Parms.CallFunc_GetInputAxisKeyValue_ReturnValue_1 = CallFunc_GetInputAxisKeyValue_ReturnValue_1;
	Parms.CallFunc_GetInputAxisKeyValue_ReturnValue_2 = CallFunc_GetInputAxisKeyValue_ReturnValue_2;
	Parms.CallFunc_MakeVector2D_ReturnValue = std::move(CallFunc_MakeVector2D_ReturnValue);
	Parms.CallFunc_Multiply_FloatFloat_ReturnValue = CallFunc_Multiply_FloatFloat_ReturnValue;
	Parms.CallFunc_GetInputAxisKeyValue_ReturnValue_3 = CallFunc_GetInputAxisKeyValue_ReturnValue_3;
	Parms.CallFunc_MakeVector2D_ReturnValue_1 = std::move(CallFunc_MakeVector2D_ReturnValue_1);

	UObject::ProcessEvent(Func, &Parms);

	if (StickInput != nullptr)
		*StickInput = Parms.StickInput;
}


// Function BP_HDPlayerControllerBase.BP_HDPlayerControllerBase_C.GetTeamKits
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// TSet<class UHDKit*>                     TeamKits                                               (Parm, OutParm)
// TSet<class UHDKit*>                     K2Node_MakeSet_Set                                     ()
// class AHDTeamState*                     K2Node_DynamicCast_AsTeam_State__HD_                   (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    K2Node_DynamicCast_bSuccess                            (ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_HDPlayerControllerBase_C::GetTeamKits(TSet<class UHDKit*>* TeamKits, const TSet<class UHDKit*>& K2Node_MakeSet_Set, class AHDTeamState* K2Node_DynamicCast_AsTeam_State__HD_, bool K2Node_DynamicCast_bSuccess) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HDPlayerControllerBase_C", "GetTeamKits");

	Params::BP_HDPlayerControllerBase_C_GetTeamKits Parms{};

	Parms.K2Node_MakeSet_Set = std::move(K2Node_MakeSet_Set);
	Parms.K2Node_DynamicCast_AsTeam_State__HD_ = K2Node_DynamicCast_AsTeam_State__HD_;
	Parms.K2Node_DynamicCast_bSuccess = K2Node_DynamicCast_bSuccess;

	UObject::ProcessEvent(Func, &Parms);

	if (TeamKits != nullptr)
		*TeamKits = Parms.TeamKits;
}

}

