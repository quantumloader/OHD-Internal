#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: DonkehFrameworkUI

#include "Basic.hpp"

#include "DonkehFrameworkUI_classes.hpp"
#include "DonkehFrameworkUI_parameters.hpp"


namespace SDK
{

// Function DonkehFrameworkUI.DFBaseMenu.ReceiveOnMenuCovered
// (Event, Protected, BlueprintEvent)

void UDFBaseMenu::ReceiveOnMenuCovered()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DFBaseMenu", "ReceiveOnMenuCovered");

	UObject::ProcessEvent(Func, nullptr);
}


// Function DonkehFrameworkUI.DFBaseMenu.ReceiveOnMenuPop
// (Event, Protected, BlueprintEvent)

void UDFBaseMenu::ReceiveOnMenuPop()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DFBaseMenu", "ReceiveOnMenuPop");

	UObject::ProcessEvent(Func, nullptr);
}


// Function DonkehFrameworkUI.DFBaseMenu.ReceiveOnMenuPush
// (Event, Protected, BlueprintEvent)

void UDFBaseMenu::ReceiveOnMenuPush()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DFBaseMenu", "ReceiveOnMenuPush");

	UObject::ProcessEvent(Func, nullptr);
}


// Function DonkehFrameworkUI.DFBaseMenu.ReceiveOnMenuUncovered
// (Event, Protected, BlueprintEvent)

void UDFBaseMenu::ReceiveOnMenuUncovered()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DFBaseMenu", "ReceiveOnMenuUncovered");

	UObject::ProcessEvent(Func, nullptr);
}


// Function DonkehFrameworkUI.DFBaseMenu.RemoveFromMenuStack
// (Final, Native, Public, BlueprintCallable)

void UDFBaseMenu::RemoveFromMenuStack()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DFBaseMenu", "RemoveFromMenuStack");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function DonkehFrameworkUI.DFBaseMenu.IsTopOfMenuStack
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UDFBaseMenu::IsTopOfMenuStack() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DFBaseMenu", "IsTopOfMenuStack");

	Params::DFBaseMenu_IsTopOfMenuStack Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function DonkehFrameworkUI.DFContextualWidgetBase.PrerequisiteNotMet
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// class UDFContextualWidgetPrerequisiteBase*FailedPrereq                                           (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UDFContextualWidgetBase::PrerequisiteNotMet(class UDFContextualWidgetPrerequisiteBase* FailedPrereq)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DFContextualWidgetBase", "PrerequisiteNotMet");

	Params::DFContextualWidgetBase_PrerequisiteNotMet Parms{};

	Parms.FailedPrereq = FailedPrereq;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DonkehFrameworkUI.DFContextualWidgetBase.PrerequisitesMet
// (Native, Event, Protected, BlueprintEvent)

void UDFContextualWidgetBase::PrerequisitesMet()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DFContextualWidgetBase", "PrerequisitesMet");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function DonkehFrameworkUI.DFContextualWidgetBase.TestPrerequisites
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bInvokeEvents                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UDFContextualWidgetBase::TestPrerequisites(bool bInvokeEvents)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DFContextualWidgetBase", "TestPrerequisites");

	Params::DFContextualWidgetBase_TestPrerequisites Parms{};

	Parms.bInvokeEvents = bInvokeEvents;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function DonkehFrameworkUI.DFContextualWidgetPrerequisiteBase.GetWidgetOuter
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UDFContextualWidgetBase*          ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UDFContextualWidgetBase* UDFContextualWidgetPrerequisiteBase::GetWidgetOuter() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DFContextualWidgetPrerequisiteBase", "GetWidgetOuter");

	Params::DFContextualWidgetPrerequisiteBase_GetWidgetOuter Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function DonkehFrameworkUI.DFContextualWidgetPrerequisiteBase.SatisfiesPrerequisite
// (Native, Event, Protected, BlueprintEvent, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UDFContextualWidgetPrerequisiteBase::SatisfiesPrerequisite() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DFContextualWidgetPrerequisiteBase", "SatisfiesPrerequisite");

	Params::DFContextualWidgetPrerequisiteBase_SatisfiesPrerequisite Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function DonkehFrameworkUI.DFContextualWidgetPrerequisiteBase.TestPrerequisite
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UDFContextualWidgetPrerequisiteBase::TestPrerequisite() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DFContextualWidgetPrerequisiteBase", "TestPrerequisite");

	Params::DFContextualWidgetPrerequisiteBase_TestPrerequisite Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function DonkehFrameworkUI.DFMenuManager.ActivateMenu
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UDFBaseMenu*                      MenuToAdd                                              (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EMenuActivationMode          ActivationMode                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bShowMouseCursor                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bUIOnlyInput                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UDFMenuManager::ActivateMenu(class UDFBaseMenu* MenuToAdd, enum class EMenuActivationMode ActivationMode, bool bShowMouseCursor, bool bUIOnlyInput)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DFMenuManager", "ActivateMenu");

	Params::DFMenuManager_ActivateMenu Parms{};

	Parms.MenuToAdd = MenuToAdd;
	Parms.ActivationMode = ActivationMode;
	Parms.bShowMouseCursor = bShowMouseCursor;
	Parms.bUIOnlyInput = bUIOnlyInput;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DonkehFrameworkUI.DFMenuManager.ClearMenuStack
// (Final, Native, Public, BlueprintCallable)

void UDFMenuManager::ClearMenuStack()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DFMenuManager", "ClearMenuStack");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function DonkehFrameworkUI.DFMenuManager.PopMenu
// (Final, Native, Public, BlueprintCallable)

void UDFMenuManager::PopMenu()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DFMenuManager", "PopMenu");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function DonkehFrameworkUI.DFMenuManager.RemoveMenu
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UDFBaseMenu*                      MenuToRemove                                           (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UDFMenuManager::RemoveMenu(class UDFBaseMenu* MenuToRemove)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DFMenuManager", "RemoveMenu");

	Params::DFMenuManager_RemoveMenu Parms{};

	Parms.MenuToRemove = MenuToRemove;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DonkehFrameworkUI.DFMenuManager.Top
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UDFBaseMenu*                      ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UDFBaseMenu* UDFMenuManager::Top() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DFMenuManager", "Top");

	Params::DFMenuManager_Top Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function DonkehFrameworkUI.DFMenuManagerBlueprintFunctions.CreateAndActivate
// (Final, BlueprintCosmetic, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSubclassOf<class UDFBaseMenu>          MenuWidgetType                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class APlayerController*                OwningPlayer                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EMenuActivationMode          ActivationMode                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bShowMouseCursor                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bUIOnlyInput                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UDFBaseMenu*                      ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UDFBaseMenu* UDFMenuManagerBlueprintFunctions::CreateAndActivate(class UObject* WorldContextObject, TSubclassOf<class UDFBaseMenu> MenuWidgetType, class APlayerController* OwningPlayer, enum class EMenuActivationMode ActivationMode, bool bShowMouseCursor, bool bUIOnlyInput)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("DFMenuManagerBlueprintFunctions", "CreateAndActivate");

	Params::DFMenuManagerBlueprintFunctions_CreateAndActivate Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.MenuWidgetType = MenuWidgetType;
	Parms.OwningPlayer = OwningPlayer;
	Parms.ActivationMode = ActivationMode;
	Parms.bShowMouseCursor = bShowMouseCursor;
	Parms.bUIOnlyInput = bUIOnlyInput;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function DonkehFrameworkUI.DFMenuManagerBlueprintFunctions.GetMenuManager
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UDFMenuManager*                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UDFMenuManager* UDFMenuManagerBlueprintFunctions::GetMenuManager(class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("DFMenuManagerBlueprintFunctions", "GetMenuManager");

	Params::DFMenuManagerBlueprintFunctions_GetMenuManager Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function DonkehFrameworkUI.DFMinimap.AddNewPOI
// (Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                           POIActor                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UDFPOIWidget*                     ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UDFPOIWidget* UDFMinimap::AddNewPOI(class AActor* POIActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DFMinimap", "AddNewPOI");

	Params::DFMinimap_AddNewPOI Parms{};

	Parms.POIActor = POIActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function DonkehFrameworkUI.DFMinimap.ClearPOIs
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UDFMinimap::ClearPOIs()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DFMinimap", "ClearPOIs");

	Params::DFMinimap_ClearPOIs Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function DonkehFrameworkUI.DFMinimap.FindPOIByActor
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class AActor*                           POIActor                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UDFPOIWidget*                     OutFoundPOI                                            (Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UDFMinimap::FindPOIByActor(class AActor* POIActor, class UDFPOIWidget** OutFoundPOI)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DFMinimap", "FindPOIByActor");

	Params::DFMinimap_FindPOIByActor Parms{};

	Parms.POIActor = POIActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutFoundPOI != nullptr)
		*OutFoundPOI = std::move(Parms.OutFoundPOI);

	return Parms.ReturnValue;
}


// Function DonkehFrameworkUI.DFMinimap.OnPOISelectionStateChanged
// (Native, Public)
// Parameters:
// class UDFPOIWidget*                     POI                                                    (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bSelected                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UDFMinimap::OnPOISelectionStateChanged(class UDFPOIWidget* POI, bool bSelected)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DFMinimap", "OnPOISelectionStateChanged");

	Params::DFMinimap_OnPOISelectionStateChanged Parms{};

	Parms.POI = POI;
	Parms.bSelected = bSelected;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DonkehFrameworkUI.DFMinimap.ReceiveOnPOISelectionStateChanged
// (Event, Public, BlueprintEvent)
// Parameters:
// class UDFPOIWidget*                     POI                                                    (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bSelected                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UDFMinimap::ReceiveOnPOISelectionStateChanged(class UDFPOIWidget* POI, bool bSelected)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DFMinimap", "ReceiveOnPOISelectionStateChanged");

	Params::DFMinimap_ReceiveOnPOISelectionStateChanged Parms{};

	Parms.POI = POI;
	Parms.bSelected = bSelected;

	UObject::ProcessEvent(Func, &Parms);
}


// Function DonkehFrameworkUI.DFMinimap.RemovePOI
// (Native, Public, BlueprintCallable)
// Parameters:
// class UDFPOIWidget*                     POIToRemove                                            (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UDFMinimap::RemovePOI(class UDFPOIWidget* POIToRemove)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DFMinimap", "RemovePOI");

	Params::DFMinimap_RemovePOI Parms{};

	Parms.POIToRemove = POIToRemove;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function DonkehFrameworkUI.DFMinimap.RemovePOIAt
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   Index                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UDFMinimap::RemovePOIAt(int32 Index)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DFMinimap", "RemovePOIAt");

	Params::DFMinimap_RemovePOIAt Parms{};

	Parms.Index = Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function DonkehFrameworkUI.DFMinimap.RemovePOIByActor
// (Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                           POIActorToRemove                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UDFMinimap::RemovePOIByActor(class AActor* POIActorToRemove)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DFMinimap", "RemovePOIByActor");

	Params::DFMinimap_RemovePOIByActor Parms{};

	Parms.POIActorToRemove = POIActorToRemove;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function DonkehFrameworkUI.DFMinimap.RemovePOIByActorClass
// (Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TSubclassOf<class AActor>               POIActorClass                                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UDFMinimap::RemovePOIByActorClass(TSubclassOf<class AActor>& POIActorClass)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DFMinimap", "RemovePOIByActorClass");

	Params::DFMinimap_RemovePOIByActorClass Parms{};

	Parms.POIActorClass = POIActorClass;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function DonkehFrameworkUI.DFMinimap.SetMapDirty
// (Final, Native, Protected, BlueprintCallable)

void UDFMinimap::SetMapDirty()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DFMinimap", "SetMapDirty");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function DonkehFrameworkUI.DFMinimap.UpdateMapPos
// (Native, Protected, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector2D                        NewMapPos                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UDFMinimap::UpdateMapPos(struct FVector2D& NewMapPos)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DFMinimap", "UpdateMapPos");

	Params::DFMinimap_UpdateMapPos Parms{};

	Parms.NewMapPos = std::move(NewMapPos);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DonkehFrameworkUI.DFMinimap.UpdateZoomValue
// (Native, Protected, BlueprintCallable)
// Parameters:
// float                                   NewZoomValue                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UDFMinimap::UpdateZoomValue(float NewZoomValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DFMinimap", "UpdateZoomValue");

	Params::DFMinimap_UpdateZoomValue Parms{};

	Parms.NewZoomValue = NewZoomValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DonkehFrameworkUI.DFMinimap.ConvertMapLocationToLocalWidgetLocation
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector2D                        MapLocation                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector2D                        WidgetLocation                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UDFMinimap::ConvertMapLocationToLocalWidgetLocation(const struct FVector2D& MapLocation, struct FVector2D* WidgetLocation) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DFMinimap", "ConvertMapLocationToLocalWidgetLocation");

	Params::DFMinimap_ConvertMapLocationToLocalWidgetLocation Parms{};

	Parms.MapLocation = std::move(MapLocation);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (WidgetLocation != nullptr)
		*WidgetLocation = Parms.WidgetLocation;

	return Parms.ReturnValue;
}


// Function DonkehFrameworkUI.DFMinimap.DeprojectMapLocationToWorld
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector2D                        MapLocation                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          WorldLocation                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UDFMinimap::DeprojectMapLocationToWorld(const struct FVector2D& MapLocation, struct FVector* WorldLocation) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DFMinimap", "DeprojectMapLocationToWorld");

	Params::DFMinimap_DeprojectMapLocationToWorld Parms{};

	Parms.MapLocation = std::move(MapLocation);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (WorldLocation != nullptr)
		*WorldLocation = Parms.WorldLocation;

	return Parms.ReturnValue;
}


// Function DonkehFrameworkUI.DFMinimap.GetMapSizeAbsolute
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector2D                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector2D UDFMinimap::GetMapSizeAbsolute() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DFMinimap", "GetMapSizeAbsolute");

	Params::DFMinimap_GetMapSizeAbsolute Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function DonkehFrameworkUI.DFMinimap.GetMapSizeLocal
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector2D                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector2D UDFMinimap::GetMapSizeLocal() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DFMinimap", "GetMapSizeLocal");

	Params::DFMinimap_GetMapSizeLocal Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function DonkehFrameworkUI.DFMinimap.GetPOIAt
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   Index                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UDFPOIWidget*                     ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UDFPOIWidget* UDFMinimap::GetPOIAt(int32 Index) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DFMinimap", "GetPOIAt");

	Params::DFMinimap_GetPOIAt Parms{};

	Parms.Index = Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function DonkehFrameworkUI.DFMinimap.GetPOICount
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UDFMinimap::GetPOICount() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DFMinimap", "GetPOICount");

	Params::DFMinimap_GetPOICount Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function DonkehFrameworkUI.DFMinimap.GetPOIIndex
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UDFPOIWidget*                     POI                                                    (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UDFMinimap::GetPOIIndex(class UDFPOIWidget* POI) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DFMinimap", "GetPOIIndex");

	Params::DFMinimap_GetPOIIndex Parms{};

	Parms.POI = POI;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function DonkehFrameworkUI.DFMinimap.HasAnyPOIs
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UDFMinimap::HasAnyPOIs() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DFMinimap", "HasAnyPOIs");

	Params::DFMinimap_HasAnyPOIs Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function DonkehFrameworkUI.DFMinimap.HasPOI
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UDFPOIWidget*                     POI                                                    (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UDFMinimap::HasPOI(class UDFPOIWidget* POI) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DFMinimap", "HasPOI");

	Params::DFMinimap_HasPOI Parms{};

	Parms.POI = POI;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function DonkehFrameworkUI.DFMinimap.ProjectWorldLocationToMap
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector                          WorldLocation                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector2D                        MapLocation                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UDFMinimap::ProjectWorldLocationToMap(const struct FVector& WorldLocation, struct FVector2D* MapLocation) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DFMinimap", "ProjectWorldLocationToMap");

	Params::DFMinimap_ProjectWorldLocationToMap Parms{};

	Parms.WorldLocation = std::move(WorldLocation);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (MapLocation != nullptr)
		*MapLocation = Parms.MapLocation;

	return Parms.ReturnValue;
}


// Function DonkehFrameworkUI.DFPOIComponent.OnMinimapLateInit
// (Final, Native, Private)
// Parameters:
// class UDFMinimap*                       NewMinimap                                             (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UDFPOIComponent::OnMinimapLateInit(class UDFMinimap* NewMinimap)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DFPOIComponent", "OnMinimapLateInit");

	Params::DFPOIComponent_OnMinimapLateInit Parms{};

	Parms.NewMinimap = NewMinimap;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DonkehFrameworkUI.DFPOIComponent.RegisterPOI
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UDFMinimap*                       MinimapWidget                                          (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UDFPOIComponent::RegisterPOI(class UDFMinimap* MinimapWidget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DFPOIComponent", "RegisterPOI");

	Params::DFPOIComponent_RegisterPOI Parms{};

	Parms.MinimapWidget = MinimapWidget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DonkehFrameworkUI.DFPOIComponent.UnregisterPOI
// (Final, Native, Public, BlueprintCallable)

void UDFPOIComponent::UnregisterPOI()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DFPOIComponent", "UnregisterPOI");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function DonkehFrameworkUI.DFPOIComponent.GetMinimap
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UDFMinimap*                       ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UDFMinimap* UDFPOIComponent::GetMinimap() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DFPOIComponent", "GetMinimap");

	Params::DFPOIComponent_GetMinimap Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function DonkehFrameworkUI.DFPOIComponent.GetPOIWidget
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UDFPOIWidget*                     ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UDFPOIWidget* UDFPOIComponent::GetPOIWidget() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DFPOIComponent", "GetPOIWidget");

	Params::DFPOIComponent_GetPOIWidget Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function DonkehFrameworkUI.DFPOIComponent.IsPOIRegistered
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UDFPOIComponent::IsPOIRegistered() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DFPOIComponent", "IsPOIRegistered");

	Params::DFPOIComponent_IsPOIRegistered Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function DonkehFrameworkUI.DFPOIWidget.DeselectPOI
// (Final, Native, Public, BlueprintCallable)

void UDFPOIWidget::DeselectPOI()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DFPOIWidget", "DeselectPOI");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function DonkehFrameworkUI.DFPOIWidget.InitPOI
// (Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UDFMinimap*                       OwningMapWidget                                        (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           ActorToTrack                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FMinimapPOITableRow              ActorPOIData                                           (Parm, OutParm, NativeAccessSpecifierPublic)

void UDFPOIWidget::InitPOI(class UDFMinimap* OwningMapWidget, class AActor* ActorToTrack, struct FMinimapPOITableRow* ActorPOIData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DFPOIWidget", "InitPOI");

	Params::DFPOIWidget_InitPOI Parms{};

	Parms.OwningMapWidget = OwningMapWidget;
	Parms.ActorToTrack = ActorToTrack;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (ActorPOIData != nullptr)
		*ActorPOIData = Parms.ActorPOIData;
}


// Function DonkehFrameworkUI.DFPOIWidget.OnOwningMapDirty
// (Final, Native, Private)

void UDFPOIWidget::OnOwningMapDirty()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DFPOIWidget", "OnOwningMapDirty");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function DonkehFrameworkUI.DFPOIWidget.OnPOIActorEndPlay
// (Native, Protected)
// Parameters:
// class AActor*                           Actor                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EEndPlayReason               EndPlayReason                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UDFPOIWidget::OnPOIActorEndPlay(class AActor* Actor, enum class EEndPlayReason EndPlayReason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DFPOIWidget", "OnPOIActorEndPlay");

	Params::DFPOIWidget_OnPOIActorEndPlay Parms{};

	Parms.Actor = Actor;
	Parms.EndPlayReason = EndPlayReason;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DonkehFrameworkUI.DFPOIWidget.ReceiveOnPOIActorEndPlay
// (Event, Protected, BlueprintEvent)
// Parameters:
// class AActor*                           Actor                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EEndPlayReason               EndPlayReason                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UDFPOIWidget::ReceiveOnPOIActorEndPlay(class AActor* Actor, enum class EEndPlayReason EndPlayReason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DFPOIWidget", "ReceiveOnPOIActorEndPlay");

	Params::DFPOIWidget_ReceiveOnPOIActorEndPlay Parms{};

	Parms.Actor = Actor;
	Parms.EndPlayReason = EndPlayReason;

	UObject::ProcessEvent(Func, &Parms);
}


// Function DonkehFrameworkUI.DFPOIWidget.ReceivePOIDeselected
// (Event, Protected, BlueprintEvent)

void UDFPOIWidget::ReceivePOIDeselected()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DFPOIWidget", "ReceivePOIDeselected");

	UObject::ProcessEvent(Func, nullptr);
}


// Function DonkehFrameworkUI.DFPOIWidget.ReceivePOIInitialized
// (Event, Protected, BlueprintEvent)

void UDFPOIWidget::ReceivePOIInitialized()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DFPOIWidget", "ReceivePOIInitialized");

	UObject::ProcessEvent(Func, nullptr);
}


// Function DonkehFrameworkUI.DFPOIWidget.ReceivePOISelected
// (Event, Protected, BlueprintEvent)

void UDFPOIWidget::ReceivePOISelected()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DFPOIWidget", "ReceivePOISelected");

	UObject::ProcessEvent(Func, nullptr);
}


// Function DonkehFrameworkUI.DFPOIWidget.SelectPOI
// (Final, Native, Public, BlueprintCallable)

void UDFPOIWidget::SelectPOI()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DFPOIWidget", "SelectPOI");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function DonkehFrameworkUI.DFPOIWidget.SetPOISelectionState
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// bool                                    bNewSelected                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UDFPOIWidget::SetPOISelectionState(bool bNewSelected)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DFPOIWidget", "SetPOISelectionState");

	Params::DFPOIWidget_SetPOISelectionState Parms{};

	Parms.bNewSelected = bNewSelected;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DonkehFrameworkUI.DFPOIWidget.UpdatePosition
// (Final, Native, Protected, BlueprintCallable)

void UDFPOIWidget::UpdatePosition()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DFPOIWidget", "UpdatePosition");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function DonkehFrameworkUI.DFPOIWidget.UpdateRotation
// (Final, Native, Protected, BlueprintCallable)

void UDFPOIWidget::UpdateRotation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DFPOIWidget", "UpdateRotation");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function DonkehFrameworkUI.DFPOIWidget.CanSelect
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UDFPOIWidget::CanSelect() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DFPOIWidget", "CanSelect");

	Params::DFPOIWidget_CanSelect Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function DonkehFrameworkUI.DFPOIWidget.GetDefaultIconBrush
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FSlateBrush                      ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FSlateBrush UDFPOIWidget::GetDefaultIconBrush() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DFPOIWidget", "GetDefaultIconBrush");

	Params::DFPOIWidget_GetDefaultIconBrush Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function DonkehFrameworkUI.DFPOIWidget.HasFixedRotation
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UDFPOIWidget::HasFixedRotation() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DFPOIWidget", "HasFixedRotation");

	Params::DFPOIWidget_HasFixedRotation Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function DonkehFrameworkUI.DFPOIWidget.IsDynamic
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UDFPOIWidget::IsDynamic() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DFPOIWidget", "IsDynamic");

	Params::DFPOIWidget_IsDynamic Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function DonkehFrameworkUI.DFPOIWidget.IsInitialized
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UDFPOIWidget::IsInitialized() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DFPOIWidget", "IsInitialized");

	Params::DFPOIWidget_IsInitialized Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function DonkehFrameworkUI.DFPOIWidget.IsPOIActorValid
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UDFPOIWidget::IsPOIActorValid() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DFPOIWidget", "IsPOIActorValid");

	Params::DFPOIWidget_IsPOIActorValid Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function DonkehFrameworkUI.DFPOIWidget.IsSelectable
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UDFPOIWidget::IsSelectable() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DFPOIWidget", "IsSelectable");

	Params::DFPOIWidget_IsSelectable Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function DonkehFrameworkUI.DFPOIWidget.ReceiveCanSelect
// (Event, Protected, BlueprintEvent, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UDFPOIWidget::ReceiveCanSelect() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DFPOIWidget", "ReceiveCanSelect");

	Params::DFPOIWidget_ReceiveCanSelect Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function DonkehFrameworkUI.POIWidgetSlotInterface.SetIconBrush
// (Native, Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FSlateBrush                      NewIconBrush                                           (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void IPOIWidgetSlotInterface::SetIconBrush(struct FSlateBrush& NewIconBrush)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("POIWidgetSlotInterface", "SetIconBrush");

	Params::POIWidgetSlotInterface_SetIconBrush Parms{};

	Parms.NewIconBrush = std::move(NewIconBrush);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DonkehFrameworkUI.POIWidgetSlotInterface.GetIconBrush
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// struct FSlateBrush                      ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FSlateBrush IPOIWidgetSlotInterface::GetIconBrush() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("POIWidgetSlotInterface", "GetIconBrush");

	Params::POIWidgetSlotInterface_GetIconBrush Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function DonkehFrameworkUI.POIWidgetSlotInterface.GetIconSlot
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class UNamedSlot*                       ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UNamedSlot* IPOIWidgetSlotInterface::GetIconSlot() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("POIWidgetSlotInterface", "GetIconSlot");

	Params::POIWidgetSlotInterface_GetIconSlot Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}

}

