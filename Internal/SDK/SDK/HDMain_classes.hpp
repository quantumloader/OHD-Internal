#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: HDMain

#include "Basic.hpp"

#include "DonkehFrameworkUI_classes.hpp"
#include "DonkehFramework_structs.hpp"
#include "DonkehFramework_classes.hpp"
#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "HDMain_structs.hpp"
#include "UMG_classes.hpp"
#include "CoreUObject_structs.hpp"
#include "CoreUObject_classes.hpp"
#include "Tinkerbox_classes.hpp"
#include "HDCoreUGC_classes.hpp"
#include "GOAPNPC_classes.hpp"
#include "DonkehFrameworkAnim_classes.hpp"
#include "DonkehFrameworkComms_structs.hpp"
#include "ArcVehicles_classes.hpp"


namespace SDK
{

// Class HDMain.HDBaseProjectile
// 0x0000 (0x0380 - 0x0380)
class AHDBaseProjectile : public ADFBaseProjectile
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"HDBaseProjectile">();
	}
	static class AHDBaseProjectile* GetDefaultObj()
	{
		return GetDefaultObjImpl<AHDBaseProjectile>();
	}
};

// Class HDMain.HDProj_Deployable
// 0x0000 (0x0380 - 0x0380)
class AHDProj_Deployable : public AHDBaseProjectile
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"HDProj_Deployable">();
	}
	static class AHDProj_Deployable* GetDefaultObj()
	{
		return GetDefaultObjImpl<AHDProj_Deployable>();
	}
};

// Class HDMain.HDProj_SpawnPointDeployable
// 0x0010 (0x0390 - 0x0380)
class AHDProj_SpawnPointDeployable : public AHDProj_Deployable
{
public:
	enum class EHDTeam                            Team;                                              // 0x0380(0x0001)(Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"HDProj_SpawnPointDeployable">();
	}
	static class AHDProj_SpawnPointDeployable* GetDefaultObj()
	{
		return GetDefaultObjImpl<AHDProj_SpawnPointDeployable>();
	}
};

// Class HDMain.DeployMenu
// 0x0000 (0x0238 - 0x0238)
class UDeployMenu : public UDFBaseMenu
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DeployMenu">();
	}
	static class UDeployMenu* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDeployMenu>();
	}
};

// Class HDMain.DeployMenu_ClassSelectionListing
// 0x0000 (0x0230 - 0x0230)
class UDeployMenu_ClassSelectionListing : public UUserWidget
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DeployMenu_ClassSelectionListing">();
	}
	static class UDeployMenu_ClassSelectionListing* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDeployMenu_ClassSelectionListing>();
	}
};

// Class HDMain.HDGOAPActionBase
// 0x0000 (0x0098 - 0x0098)
class UHDGOAPActionBase : public UGOAPAction
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"HDGOAPActionBase">();
	}
	static class UHDGOAPActionBase* GetDefaultObj()
	{
		return GetDefaultObjImpl<UHDGOAPActionBase>();
	}
};

// Class HDMain.HDServerListFilterRule
// 0x0000 (0x0028 - 0x0028)
class UHDServerListFilterRule : public UObject
{
public:
	bool MatchesServer(class UHDServerListItemData* ListItem) const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"HDServerListFilterRule">();
	}
	static class UHDServerListFilterRule* GetDefaultObj()
	{
		return GetDefaultObjImpl<UHDServerListFilterRule>();
	}
};

// Class HDMain.HDServerAtCapacityFilterRule
// 0x0000 (0x0028 - 0x0028)
class UHDServerAtCapacityFilterRule final  : public UHDServerListFilterRule
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"HDServerAtCapacityFilterRule">();
	}
	static class UHDServerAtCapacityFilterRule* GetDefaultObj()
	{
		return GetDefaultObjImpl<UHDServerAtCapacityFilterRule>();
	}
};

// Class HDMain.DeployMenu_ClassSelectionPanel
// 0x0000 (0x0230 - 0x0230)
class UDeployMenu_ClassSelectionPanel : public UUserWidget
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DeployMenu_ClassSelectionPanel">();
	}
	static class UDeployMenu_ClassSelectionPanel* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDeployMenu_ClassSelectionPanel>();
	}
};

// Class HDMain.DeployMenu_PlatoonSquadListBase
// 0x0020 (0x0250 - 0x0230)
class UDeployMenu_PlatoonSquadListBase : public UUserWidget
{
public:
	class UPlatoonListEntry*                      PlatoonData;                                       // 0x0230(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          bSortSquads;                                       // 0x0238(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_EC0[0x7];                                      // 0x0239(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class USquadListEntry*>                CurrentSquads;                                     // 0x0240(0x0010)(ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	void DeconstructSquad(class USquadListEntry* RemovedSquadData, int32 RemovedSquadIdx);
	void GenerateSquad(class USquadListEntry* SquadData);
	void OnPlatoonSet();
	void RepopulatePlatoon();
	void SetupPlatoon(class UPlatoonListEntry* InPlatoonData);
	void SquadAddedToPlatoon(class AHDPlatoonState* SourcePlatoon, class AHDSquadState* NewSquad);
	void SquadPreRemoveFromPlatoon(class AHDPlatoonState* SourcePlatoon, class AHDSquadState* SquadToBeRemoved);

	class AHDPlatoonState* GetPlatoonStateFromData() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DeployMenu_PlatoonSquadListBase">();
	}
	static class UDeployMenu_PlatoonSquadListBase* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDeployMenu_PlatoonSquadListBase>();
	}
};

// Class HDMain.HDGOAPGoalBase
// 0x0000 (0x0068 - 0x0068)
class UHDGOAPGoalBase : public UGOAPGoal
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"HDGOAPGoalBase">();
	}
	static class UHDGOAPGoalBase* GetDefaultObj()
	{
		return GetDefaultObjImpl<UHDGOAPGoalBase>();
	}
};

// Class HDMain.HDSquadStateCreationPayload
// 0x0030 (0x0058 - 0x0028)
class UHDSquadStateCreationPayload final  : public UObject
{
public:
	struct FHDSquadCreationParams                 CreationParams;                                    // 0x0028(0x0030)(NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"HDSquadStateCreationPayload">();
	}
	static class UHDSquadStateCreationPayload* GetDefaultObj()
	{
		return GetDefaultObjImpl<UHDSquadStateCreationPayload>();
	}
};

// Class HDMain.DeployMenu_SpawnMapView
// 0x0000 (0x0230 - 0x0230)
class UDeployMenu_SpawnMapView : public UUserWidget
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DeployMenu_SpawnMapView">();
	}
	static class UDeployMenu_SpawnMapView* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDeployMenu_SpawnMapView>();
	}
};

// Class HDMain.DeployMenu_SpawnMinimap
// 0x0000 (0x0298 - 0x0298)
class UDeployMenu_SpawnMinimap : public UDFMinimap
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DeployMenu_SpawnMinimap">();
	}
	static class UDeployMenu_SpawnMinimap* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDeployMenu_SpawnMinimap>();
	}
};

// Class HDMain.HDGOAPAct_LoadWeapon
// 0x0000 (0x0098 - 0x0098)
class UHDGOAPAct_LoadWeapon final  : public UHDGOAPActionBase
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"HDGOAPAct_LoadWeapon">();
	}
	static class UHDGOAPAct_LoadWeapon* GetDefaultObj()
	{
		return GetDefaultObjImpl<UHDGOAPAct_LoadWeapon>();
	}
};

// Class HDMain.HDHasUGCServerFilterRule
// 0x0000 (0x0028 - 0x0028)
class UHDHasUGCServerFilterRule final  : public UHDServerListFilterRule
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"HDHasUGCServerFilterRule">();
	}
	static class UHDHasUGCServerFilterRule* GetDefaultObj()
	{
		return GetDefaultObjImpl<UHDHasUGCServerFilterRule>();
	}
};

// Class HDMain.DeployMenu_SquadListBase
// 0x0030 (0x0260 - 0x0230)
class UDeployMenu_SquadListBase : public UUserWidget
{
public:
	class USquadListEntry*                        SquadData;                                         // 0x0230(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          bSortSquadMembers;                                 // 0x0238(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_EC1[0x7];                                      // 0x0239(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class USquadMemberInfo*>               CurrentSquadMembers;                               // 0x0240(0x0010)(ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class USquadMemberInfo*>               MemberEntryWidgetsPendingRemoval;                  // 0x0250(0x0010)(ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	void DeconstructSquadMember(class USquadMemberInfo* RemovedMemberData);
	void GenerateSquadMember(class USquadMemberInfo* MemberData);
	void MemberAddedToSquad(class AHDSquadState* SourceSquad, class AHDPlayerState* NewMemberPS);
	void MemberPreRemoveFromSquad(class AHDSquadState* SourceSquad, class AHDPlayerState* MemberPSToBeRemoved);
	void MemberSquadInfoUpdated(class AHDSquadState* SourceSquad, class AHDPlayerState* MemberPS, struct FHDSquadAssignmentInfo& MemberSQInfo);
	void OnListRefresh();
	void OnSquadLeaderUpdated(class AHDPlayerState* NewLeaderPS, class AHDPlayerState* PrevLeaderPS);
	void OnSquadLockStateUpdated(bool bNewLockedState);
	void OnSquadNameUpdated(class FText& NewSquadName, class FText& PreviousSquadName);
	void OnSquadSet();
	void RepopulateSquad();
	void SetupSquad(class USquadListEntry* InSquadData);
	void SquadLeaderChanged(class AHDSquadState* SourceSquad, class AHDPlayerState* NewLeaderPS, class AHDPlayerState* PrevLeaderPS);
	void SquadLockStateUpdated(class AHDSquadState* SourceSquad, bool bNewLocked);
	void SquadNameChanged(class AHDSquadState* SourceSquad, class FText& NewName, class FText& PrevName);

	class AHDPlatoonState* GetParentPlatoonStateFromData() const;
	class AHDSquadState* GetSquadStateFromData() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DeployMenu_SquadListBase">();
	}
	static class UDeployMenu_SquadListBase* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDeployMenu_SquadListBase>();
	}
};

// Class HDMain.DeployMenu_SquadMemberListingBase
// 0x0008 (0x0238 - 0x0230)
class UDeployMenu_SquadMemberListingBase : public UUserWidget
{
public:
	class USquadMemberInfo*                       MemberData;                                        // 0x0230(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	void MemberPlayerNameChanged(class APlayerState* PlayerState, const class FString& NewPlayerName);
	void OnMemberPlayerNameUpdated(const class FString& NewPlayerName);
	void OnMemberSet();
	void SetupMember(class USquadMemberInfo* InMemberData);

	class AHDPlatoonState* GetParentPlatoonStateFromData() const;
	class AHDSquadState* GetParentSquadStateFromData() const;
	class AHDPlayerState* GetPlayerStateFromData() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DeployMenu_SquadMemberListingBase">();
	}
	static class UDeployMenu_SquadMemberListingBase* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDeployMenu_SquadMemberListingBase>();
	}
};

// Class HDMain.HDScoreboardListingRowBase
// 0x00E8 (0x0318 - 0x0230)
class UHDScoreboardListingRowBase final  : public UUserWidget
{
public:
	class UHDScoreboardBase*                      ParentMenu;                                        // 0x0230(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class ADFBasePlayerState*                     PlayerState;                                       // 0x0238(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_EC3[0x3];                                      // 0x0240(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	uint8                                         bRefreshListingOnTick : 1;                         // 0x0243(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected))
	uint8                                         Pad_EC4[0x4];                                      // 0x0244(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UButton*                                MutePlayerBtn;                                     // 0x0248(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                             PlayerName;                                        // 0x0250(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                             Score;                                             // 0x0258(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                             Kills;                                             // 0x0260(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                             Deaths;                                            // 0x0268(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                             Ping;                                              // 0x0270(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UTexture2D>              NotTalkingVoiceIcon;                               // 0x0278(0x0028)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UTexture2D>              TalkingVoiceIcon;                                  // 0x02A0(0x0028)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UTexture2D>              MutedVoiceIcon;                                    // 0x02C8(0x0028)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_EC5[0x20];                                     // 0x02F0(0x0020)(Fixing Size After Last Property [ Dumper-7 ])
	class UTextBlock*                             PlayerNumber;                                      // 0x0310(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	void Init(class UHDScoreboardBase* InParentMenu, class ADFBasePlayerState* InPlayerState, bool bInRefreshListingOnTick);
	void OnMutePlayer();
	void ReceivePlayerVoiceStateChanged(enum class EPlayerVoiceState NewVoiceState);
	void ReceiveRefreshListing();
	void RefreshListing();
	void SetVoiceStateIcon(class UTexture2D* NewIcon);

	int32 GetCurrentPing() const;
	TSoftObjectPtr<class UTexture2D> GetIconForVoiceState(enum class EPlayerVoiceState VoiceState) const;
	bool HasInitialized() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"HDScoreboardListingRowBase">();
	}
	static class UHDScoreboardListingRowBase* GetDefaultObj()
	{
		return GetDefaultObjImpl<UHDScoreboardListingRowBase>();
	}
};

// Class HDMain.DeployMenu_SquadSelectionWidgetBase
// 0x0020 (0x0250 - 0x0230)
class UDeployMenu_SquadSelectionWidgetBase : public UUserWidget
{
public:
	class AHDTeamState*                           PlatoonTeamState;                                  // 0x0230(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          bSortPlatoons;                                     // 0x0238(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_EC8[0x7];                                      // 0x0239(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UPlatoonListEntry*>              CurrentPlatoons;                                   // 0x0240(0x0010)(ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	void DeconstructPlatoon(class UPlatoonListEntry* RemovedPlatoonData, int32 RemovedPlatoonIdx);
	void GeneratePlatoon(class UPlatoonListEntry* PlatoonData);
	void OnSquadSelectionSet();
	void PlatoonAddedToTeam(class AHDTeamState* SourceTeam, class AHDPlatoonState* NewPlatoon);
	void PlatoonPreRemoveFromTeam(class AHDTeamState* SourceTeam, class AHDPlatoonState* PlatoonToBeRemoved);
	void RepopulateSquadSelection();
	void SetupSquadSelection(class AHDTeamState* InPlatoonTeamState);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DeployMenu_SquadSelectionWidgetBase">();
	}
	static class UDeployMenu_SquadSelectionWidgetBase* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDeployMenu_SquadSelectionWidgetBase>();
	}
};

// Class HDMain.HDAIHandlerBase
// 0x0028 (0x0050 - 0x0028)
class UHDAIHandlerBase : public UObject
{
public:
	uint8                                         Pad_EC9[0x8];                                      // 0x0028(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class AHDAIController*                        Controller;                                        // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UHDGOAPComponent*                       GOAPComponent;                                     // 0x0038(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_ECA[0x8];                                      // 0x0040(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class UHDAIHandlerBase*                       HandlerDuplicate;                                  // 0x0048(0x0008)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"HDAIHandlerBase">();
	}
	static class UHDAIHandlerBase* GetDefaultObj()
	{
		return GetDefaultObjImpl<UHDAIHandlerBase>();
	}
};

// Class HDMain.HDAICaptureHandler
// 0x0018 (0x0068 - 0x0050)
class UHDAICaptureHandler final  : public UHDAIHandlerBase
{
public:
	class AHDBaseCapturePoint*                    CurrentCP;                                         // 0x0050(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	enum class EHDAICaptureMode                   CurrentCaptureMode;                                // 0x0058(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_ECB[0x3];                                      // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         AICaptureModePreference;                           // 0x005C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                         TotalNumberOfCapturePoints;                        // 0x0060(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	bool EstablishNewControlPoint();
	struct FVector GetCurrentCPLocation();
	int32 GetTotalNumberOfCapturePoints();
	void SetCurrentCaptureMode(enum class EHDAICaptureMode NewCaptureMode);
	void SetCurrentCP(class AHDBaseCapturePoint* InCurrentCP);

	TArray<class AHDBaseCapturePoint*> FindAvailableControlPointsOfType(enum class EHDAICaptureMode InCaptureMode) const;
	TArray<class AHDBaseCapturePoint*> FindAvailableControlPointsOfTypeV1(enum class EHDAICaptureMode InCaptureMode) const;
	TArray<class AHDBaseCapturePoint*> FindAvailableControlPointsOfTypeV2(enum class EHDAICaptureMode InCaptureMode) const;
	TArray<class AHDBaseCapturePoint*> FindAvailableControlPointsOfTypeV3(enum class EHDAICaptureMode InCaptureMode) const;
	class AHDBaseCapturePoint* FindControlPointClosestToPawn(TArray<class AHDBaseCapturePoint*>& CPs) const;
	class AHDBaseCapturePoint* FindControlPointRandom(TArray<class AHDBaseCapturePoint*>& CPs) const;
	bool FindControlPointToCapture(class AHDBaseCapturePoint** OutFoundCP) const;
	class AActor* GetStartSpotClosestToControlPoint(class AActor* InCapturePoint) const;
	bool ShouldEstablishNewControlPoint() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"HDAICaptureHandler">();
	}
	static class UHDAICaptureHandler* GetDefaultObj()
	{
		return GetDefaultObjImpl<UHDAICaptureHandler>();
	}
};

// Class HDMain.HDSQCommChannelState
// 0x0030 (0x0058 - 0x0028)
class UHDSQCommChannelState final  : public UObject
{
public:
	uint8                                         Pad_ED1[0x8];                                      // 0x0028(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class AHDSquadState*                          SquadState;                                        // 0x0030(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FDFCommStateSetupParams                InitialSetupParams;                                // 0x0038(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnTemplate, Transient, EditConst, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	uint8                                         Pad_ED2[0x8];                                      // 0x0050(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class FName GetChannelNameForSquad(class AHDSquadState* Squad);

	void SetupSQChannelState(class AHDSquadState* ForSquadState);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"HDSQCommChannelState">();
	}
	static class UHDSQCommChannelState* GetDefaultObj()
	{
		return GetDefaultObjImpl<UHDSQCommChannelState>();
	}
};

// Class HDMain.HDAIAimingHandler
// 0x0100 (0x0150 - 0x0050)
class UHDAIAimingHandler final  : public UHDAIHandlerBase
{
public:
	class UHDAICombatHandler*                     CombatHandler;                                     // 0x0050(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UHDAINavigationHandler*                 NavigationHandler;                                 // 0x0058(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UHDAIBehaviorHandler*                   BehaviorHandler;                                   // 0x0060(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UHDAIVocalHandler*                      VocalHandler;                                      // 0x0068(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAIPerceptionComponent*                 PerceptionComponent;                               // 0x0070(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FVector                                AimingTargetPoint;                                 // 0x0078(0x0010)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                                CurrentTargetLocation;                             // 0x0084(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         CurrentTargetStimulusStrength;                     // 0x0090(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         CurrentTargetStimulusAge;                          // 0x0094(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         RefreshTargetTime;                                 // 0x0098(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         RefreshTargetRate;                                 // 0x009C(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         NewTargetStimulusStrengthThreshold;                // 0x00A0(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         AimingAtTargetAngleThreshold;                      // 0x00A4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         bAimingAtTarget : 1;                               // 0x00A8(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (BlueprintVisible, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected))
	uint8                                         Pad_ED3[0x3];                                      // 0x00A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         AimingSpeed;                                       // 0x00AC(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         AimingSpeedNear;                                   // 0x00B0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         AimingSpeedFar;                                    // 0x00B4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         AimingSpeedAngleNear;                              // 0x00B8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         AimingSpeedAngleFar;                               // 0x00BC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         AimingSpeedMultiplier;                             // 0x00C0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FRotator                               RotationRate;                                      // 0x00C4(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FRotator                               DefaultRotationRate;                               // 0x00D0(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	FMulticastInlineDelegateProperty_             OnContactStateChanged;                             // 0x00E0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_ED4[0xC];                                      // 0x00F0(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         WeaponAimingDistance;                              // 0x00FC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         WeaponMinConeOfFireAngleDegrees;                   // 0x0100(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         WeaponMaxConeOfFireAngleDegrees;                   // 0x0104(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         bEnableNoEnemyLookAround : 1;                      // 0x0108(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (BlueprintVisible, BlueprintReadOnly, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected))
	uint8                                         Pad_ED5[0x3];                                      // 0x0109(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                NoEnemyFocalPoint;                                 // 0x010C(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         NextFocalPointTime;                                // 0x0118(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         NextFocalPointIntervalMin;                         // 0x011C(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         NextFocalPointIntervalMax;                         // 0x0120(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         NextFocalPointAngleMin;                            // 0x0124(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         NextFocalPointAngleMax;                            // 0x0128(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         NextFocalPointDistanceMin;                         // 0x012C(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         NextFocalPointDistanceMax;                         // 0x0130(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                                ProjectileAimingTossVelocity;                      // 0x0134(0x0010)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         ProjectileAimingTime;                              // 0x0140(0x0004)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         ProjectileAimingRate;                              // 0x0144(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         ProjectileAimingRateVariation;                     // 0x0148(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	void AimAtCurrentTarget();
	void CalcAimingDirection();
	bool CheckForTarget(class AActor* TargetActor, const struct FAIStimulus& Stimulus);
	void EstablishNewTargetFromPerception(TSubclassOf<class UAISense>& SenseToUse);
	void MakeNoEnemyFocalPoint();
	void SetEnableNoEnemyLookAround(bool bInEnableNoEnemyLookAround);
	bool ShouldChangeNoEnemyFocalPoint();
	bool SuggestProjectileVelocity(struct FVector* TossVelocity, const struct FVector& StartLocation, const struct FVector& EndLocation, float TossSpeed);

	void GetActorStimulusData(class AActor* InActor, struct FVector* OutLocation, float* OutStrength, float* OutAge) const;
	bool GetEnableNoEnemyLookAround() const;
	bool GetIsNewTargetMoreRelevant(float OldTargetStrength, float NewTargetStrength) const;
	struct FVector GetNoEnemyFocalPoint() const;
	bool HasValidCustomAimingTarget() const;
	bool IsAimingAtTarget() const;
	bool IsCandidateTarget(class AActor* ActorToCheck) const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"HDAIAimingHandler">();
	}
	static class UHDAIAimingHandler* GetDefaultObj()
	{
		return GetDefaultObjImpl<UHDAIAimingHandler>();
	}
};

// Class HDMain.HDAIBehaviorStateBase
// 0x0030 (0x0058 - 0x0028)
class UHDAIBehaviorStateBase : public UObject
{
public:
	class AHDAIController*                        Controller;                                        // 0x0028(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UHDGOAPComponent*                       GOAPComponent;                                     // 0x0030(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         bCanEverTick : 1;                                  // 0x0038(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected))
	uint8                                         Pad_EDB[0x3];                                      // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         StateUpdateTime;                                   // 0x003C(0x0004)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         StateUpdateRate;                                   // 0x0040(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_EDC[0x4];                                      // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UHDAIBehaviorStateBase*                 CurrentSubState;                                   // 0x0048(0x0008)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UHDAIBehaviorStateBase*                 CurrentParentState;                                // 0x0050(0x0008)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	bool CanEnterState();
	bool CanExitState();
	bool CanUpdateState(float DeltaTime);
	void EnterState();
	bool ExitCurrentSubState();
	void ExitState();
	void Init(class AHDAIController* InController, class UHDGOAPComponent* InGOAPComponent, class UHDAIBehaviorStateBase* InParentState);
	void ResetUpdateTimer(float InTimerInterval);
	bool SwitchToSubState(class UHDAIBehaviorStateBase* InNewState);
	bool UpdateCurrentSubState(float DeltaTime);
	void UpdateState(float DeltaTime);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"HDAIBehaviorStateBase">();
	}
	static class UHDAIBehaviorStateBase* GetDefaultObj()
	{
		return GetDefaultObjImpl<UHDAIBehaviorStateBase>();
	}
};

// Class HDMain.HDAIBehState_BasicAASCombat
// 0x00B8 (0x0110 - 0x0058)
class UHDAIBehState_BasicAASCombat final  : public UHDAIBehaviorStateBase
{
public:
	class UHDAICombatHandler*                     CombatHandler;                                     // 0x0058(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UHDAIBehaviorHandler*                   BehaviorHandler;                                   // 0x0060(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UHDAIGroupBehaviorHandler*              GroupHandler;                                      // 0x0068(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FVector                                TargetLocation;                                    // 0x0070(0x0010)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                                AttackSpot;                                        // 0x007C(0x0010)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                                SafeSpot;                                          // 0x0088(0x0010)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         bSafeSpotIsOpen : 1;                               // 0x0094(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (BlueprintVisible, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected))
	uint8                                         bCurrentLocationIsSafe : 1;                        // 0x0094(0x0001)(BitIndex: 0x01, PropSize: 0x0001 (BlueprintVisible, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected))
	uint8                                         Pad_EE0[0x3];                                      // 0x0095(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         MinDistanceBetweenAttackAndSafeSpot;               // 0x0098(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ExitCombatStateTimerMin;                           // 0x009C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ExitCombatStateTimerMax;                           // 0x00A0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         TimeToExitCombatState;                             // 0x00A4(0x0004)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_EE1[0x8];                                      // 0x00A8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class UHDAIBehaviorStateBase*                 FindAttackSpotState;                               // 0x00B0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UHDAIBehaviorStateBase*                 FindSafeSpotState;                                 // 0x00B8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UHDAIBehaviorStateBase*                 AttackingState;                                    // 0x00C0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UHDAIBehaviorStateBase*                 SafespottingState;                                 // 0x00C8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UHDAIBehaviorStateBase*                 RepositionState;                                   // 0x00D0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UHDAIBehaviorStateBase>     FindSafeSpotClass;                                 // 0x00D8(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UHDAIBehaviorStateBase>     FindAttackSpotClass;                               // 0x00E0(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UHDAIBehaviorStateBase>     AttackingClass;                                    // 0x00E8(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UHDAIBehaviorStateBase>     SafespottingClass;                                 // 0x00F0(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UHDAIBehaviorStateBase>     RepositionClass;                                   // 0x00F8(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UHDAIBehaviorDecisionBase*>      CombatRepositioningDecisions;                      // 0x0100(0x0010)(Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, ContainsInstancedReference, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	void FindAttackSpot();
	void FindSafeSpot();
	void HandleCombatRepositioning();
	bool HandleExitCombatStateTimer();
	bool IsValidAttackSpot(struct FVector& InAttackSpot);
	bool IsValidSafeSpot(struct FVector& InSafeSpot);
	void ProcessCombatLocations();
	void StartAttacking();
	void StartCombatRepositioning(const struct FVector& InMoveTarget);
	void StartSafespotting();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"HDAIBehState_BasicAASCombat">();
	}
	static class UHDAIBehState_BasicAASCombat* GetDefaultObj()
	{
		return GetDefaultObjImpl<UHDAIBehState_BasicAASCombat>();
	}
};

// Class HDMain.HDAIBehaviorDecisionBase
// 0x0010 (0x0038 - 0x0028)
class UHDAIBehaviorDecisionBase : public UObject
{
public:
	class AHDAIController*                        Controller;                                        // 0x0028(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UHDGOAPComponent*                       GOAPComponent;                                     // 0x0030(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"HDAIBehaviorDecisionBase">();
	}
	static class UHDAIBehaviorDecisionBase* GetDefaultObj()
	{
		return GetDefaultObjImpl<UHDAIBehaviorDecisionBase>();
	}
};

// Class HDMain.HDURLStatics
// 0x0000 (0x0028 - 0x0028)
class UHDURLStatics final  : public UBlueprintFunctionLibrary
{
public:
	static class FString GetDisableKitRestrictionsOptionName();
	static class FString GetFactionOptionName(enum class EHDTeam Team);
	static class FString GetNumBotsOptionName(enum class EHDTeam Team);
	static class FString GetNumTicketsOptionName(enum class EHDTeam Team);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"HDURLStatics">();
	}
	static class UHDURLStatics* GetDefaultObj()
	{
		return GetDefaultObjImpl<UHDURLStatics>();
	}
};

// Class HDMain.HDAIBehaviorHandler
// 0x0088 (0x00D8 - 0x0050)
class UHDAIBehaviorHandler final  : public UHDAIHandlerBase
{
public:
	class UHDAINavigationHandler*                 NavigationHandler;                                 // 0x0050(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UHDAICombatHandler*                     CombatHandler;                                     // 0x0058(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UHDAIAimingHandler*                     AimingHandler;                                     // 0x0060(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UHDAIVocalHandler*                      VocalHandler;                                      // 0x0068(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UHDAICaptureHandler*                    CaptureHandler;                                    // 0x0070(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UHDAIGroupBehaviorHandler*              GroupHandler;                                      // 0x0078(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         SuppressionThreatLevel;                            // 0x0080(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         SuppressionLevelPerShot;                           // 0x0084(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         SuppressionThreatThreshold;                        // 0x0088(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         SuppressionFalloff;                                // 0x008C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         SuppressionTime;                                   // 0x0090(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         SuppressionFallingOffDelay;                        // 0x0094(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         BeingHitThreatLevel;                               // 0x0098(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         BeingHitThreatThreshold;                           // 0x009C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         BeingHitFalloff;                                   // 0x00A0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         BeingHitThreatLevelSpikeProbability;               // 0x00A4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         BeingHitThreatLevelSpikeAmount;                    // 0x00A8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         BeingHitFallingOffDelay;                           // 0x00AC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         BeingHitTime;                                      // 0x00B0(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_EE7[0x4];                                      // 0x00B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UHDAIBehaviorStateBase*                 CurrentBehaviorState;                              // 0x00B8(0x0008)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UHDAIBehaviorStateBase>     DefaultBehaviorStateClass;                         // 0x00C0(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_EE8[0x4];                                      // 0x00C8(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         MinDistanceToStartCombatState;                     // 0x00CC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         bIsInCombat : 1;                                   // 0x00D0(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (BlueprintVisible, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected))

public:
	void CalcThreatLevels();
	void EnterCurrentBehaviorState();
	void ExitCurrentBehaviorState();
	void HandleBehaviorStates(float DeltaTime);
	void OnOwnerDeath(class APawn* VictimPawn, class AController* VictimController, float KillingDamage, struct FDamageEvent& DamageEvent, class APawn* InstigatingPawn, class AActor* DamageCauser);
	void ReceiveHitDamage();
	void ReceiveSuppression();
	void StartCombatBehaviorState(const struct FVector& InCombatTarget, const struct FVector& InNavigationAnchor);
	void StartCombatRepositioning(const struct FVector& InMoveTarget);
	void StartMoveToObjectiveBehaviorState();
	void UpdateCurrentBehaviorState(float DeltaTime);

	bool GetIsBeingHit() const;
	bool GetIsUnderSuppression() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"HDAIBehaviorHandler">();
	}
	static class UHDAIBehaviorHandler* GetDefaultObj()
	{
		return GetDefaultObjImpl<UHDAIBehaviorHandler>();
	}
};

// Class HDMain.HDServerListView
// 0x0058 (0x03C0 - 0x0368)
class UHDServerListView final  : public UListView
{
public:
	uint8                                         Pad_EEA[0x4];                                      // 0x0368(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	bool                                          bItemSortAscending;                                // 0x036C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	enum class EHDServerListSortBy                ItemSortBy;                                        // 0x036D(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_EEB[0x2];                                      // 0x036E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<TSubclassOf<class UHDServerListFilterRule>, struct FHDFilterRuleParams> ItemFilterRules;                                   // 0x0370(0x0050)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPrivate)

public:
	void SetItemFilterRules(TMap<TSubclassOf<class UHDServerListFilterRule>, struct FHDFilterRuleParams>& FilterRules);
	void SetItemSortAscending(bool bSortAscending);
	void SetItemSortBy(enum class EHDServerListSortBy SortBy);
	void SortListItems(bool bSortAscending, enum class EHDServerListSortBy SortBy);

	bool DoesFilterExcludeListItem(class UObject* Item) const;
	struct FMargin GetDesiredEntryPaddingForItem(class UObject* Item) const;
	float GetEntrySpacing() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"HDServerListView">();
	}
	static class UHDServerListView* GetDefaultObj()
	{
		return GetDefaultObjImpl<UHDServerListView>();
	}
};

// Class HDMain.HDGOAPGoal_EliminateEnemy
// 0x0000 (0x0068 - 0x0068)
class UHDGOAPGoal_EliminateEnemy final  : public UHDGOAPGoalBase
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"HDGOAPGoal_EliminateEnemy">();
	}
	static class UHDGOAPGoal_EliminateEnemy* GetDefaultObj()
	{
		return GetDefaultObjImpl<UHDGOAPGoal_EliminateEnemy>();
	}
};

// Class HDMain.HDTeamCommChannelState
// 0x0030 (0x0058 - 0x0028)
class UHDTeamCommChannelState final  : public UObject
{
public:
	uint8                                         Pad_EED[0x8];                                      // 0x0028(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class AHDTeamState*                           TeamState;                                         // 0x0030(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FDFCommStateSetupParams                InitialSetupParams;                                // 0x0038(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnTemplate, Transient, EditConst, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	uint8                                         Pad_EEE[0x8];                                      // 0x0050(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class FName GetChannelNameForCommand(class AHDTeamState* CmdTeam);
	static class FName GetChannelNameForTeam(class AHDTeamState* Team);

	void SetupTeamChannelState(class AHDTeamState* ForTeamState);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"HDTeamCommChannelState">();
	}
	static class UHDTeamCommChannelState* GetDefaultObj()
	{
		return GetDefaultObjImpl<UHDTeamCommChannelState>();
	}
};

// Class HDMain.HDAIBehDecision_MoveCloser
// 0x0020 (0x0058 - 0x0038)
class UHDAIBehDecision_MoveCloser final  : public UHDAIBehaviorDecisionBase
{
public:
	uint8                                         Pad_EEF[0x20];                                     // 0x0038(0x0020)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"HDAIBehDecision_MoveCloser">();
	}
	static class UHDAIBehDecision_MoveCloser* GetDefaultObj()
	{
		return GetDefaultObjImpl<UHDAIBehDecision_MoveCloser>();
	}
};

// Class HDMain.HDAIBehState_Reposition
// 0x0048 (0x00A0 - 0x0058)
class UHDAIBehState_Reposition final  : public UHDAIBehaviorStateBase
{
public:
	struct FVector                                MoveDestination;                                   // 0x0058(0x0010)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UHDAIBehState_BasicAASCombat*           CombatState;                                       // 0x0068(0x0008)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         bIsSprinting : 1;                                  // 0x0070(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (BlueprintVisible, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected))
	uint8                                         Pad_EF0[0x3];                                      // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         SprintTimeMin;                                     // 0x0074(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         SprintTimeMax;                                     // 0x0078(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         SprintTimeEnd;                                     // 0x007C(0x0004)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         SprintStaminaThresholdMin;                         // 0x0080(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         SprintStaminaThresholdMax;                         // 0x0084(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         SprintStaminaThreshold;                            // 0x0088(0x0004)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         SprintStaminaMin;                                  // 0x008C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         SprintLookAroundTimeMin;                           // 0x0090(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         SprintLookAroundTimeMax;                           // 0x0094(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         SprintLookAroundTimeEnd;                           // 0x0098(0x0004)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	void HandleSprinting();
	void StartSprinting();
	void StopSprinting();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"HDAIBehState_Reposition">();
	}
	static class UHDAIBehState_Reposition* GetDefaultObj()
	{
		return GetDefaultObjImpl<UHDAIBehState_Reposition>();
	}
};

// Class HDMain.HDAIBehState_Attacking
// 0x0018 (0x0070 - 0x0058)
class UHDAIBehState_Attacking final  : public UHDAIBehaviorStateBase
{
public:
	uint8                                         bAttackingTimerStarted : 1;                        // 0x0058(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (BlueprintVisible, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected))
	uint8                                         Pad_EF1[0x3];                                      // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         AttackingEndTime;                                  // 0x005C(0x0004)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         AttackingTimeMin;                                  // 0x0060(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         AttackingTimeMax;                                  // 0x0064(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UHDAIBehState_BasicAASCombat*           CombatState;                                       // 0x0068(0x0008)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	void HandleAttacking();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"HDAIBehState_Attacking">();
	}
	static class UHDAIBehState_Attacking* GetDefaultObj()
	{
		return GetDefaultObjImpl<UHDAIBehState_Attacking>();
	}
};

// Class HDMain.HDServerListItemData
// 0x00A0 (0x00C8 - 0x0028)
class UHDServerListItemData final  : public UObject
{
public:
	struct FHDServerInfo                          ServerInfo;                                        // 0x0028(0x00A0)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"HDServerListItemData">();
	}
	static class UHDServerListItemData* GetDefaultObj()
	{
		return GetDefaultObjImpl<UHDServerListItemData>();
	}
};

// Class HDMain.HDAIBehState_BasicAAS
// 0x0058 (0x00B0 - 0x0058)
class UHDAIBehState_BasicAAS final  : public UHDAIBehaviorStateBase
{
public:
	class UHDAICombatHandler*                     CombatHandler;                                     // 0x0058(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UHDAIBehaviorHandler*                   BehaviorHandler;                                   // 0x0060(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UHDAIGroupBehaviorHandler*              GroupHandler;                                      // 0x0068(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UHDAICaptureHandler*                    CaptureHandler;                                    // 0x0070(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UHDAIBehaviorStateBase*                 CombatState;                                       // 0x0078(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UHDAIBehaviorStateBase*                 CaptureState;                                      // 0x0080(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UHDAIBehaviorStateBase*                 IdleState;                                         // 0x0088(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UHDAIBehaviorStateBase>     CombatStateClass;                                  // 0x0090(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UHDAIBehaviorStateBase>     CaptureStateClass;                                 // 0x0098(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UHDAIBehaviorStateBase>     IdleStateClass;                                    // 0x00A0(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MinDistanceToStartCombatState;                     // 0x00A8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	void SelectBehaviorState();
	void StartCaptureState();
	void StartCombatRepositioning(const struct FVector& InMoveTarget);
	void StartCombatState(const struct FVector& InCombatTarget, const struct FVector& InNavigationAnchor);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"HDAIBehState_BasicAAS">();
	}
	static class UHDAIBehState_BasicAAS* GetDefaultObj()
	{
		return GetDefaultObjImpl<UHDAIBehState_BasicAAS>();
	}
};

// Class HDMain.HDAIBehState_BasicAASCapture
// 0x0048 (0x00A0 - 0x0058)
class UHDAIBehState_BasicAASCapture final  : public UHDAIBehaviorStateBase
{
public:
	class UHDAINavigationHandler*                 NavigationHandler;                                 // 0x0058(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UHDAICaptureHandler*                    CaptureHandler;                                    // 0x0060(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UHDAIGroupBehaviorHandler*              GroupHandler;                                      // 0x0068(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         bIsSprinting : 1;                                  // 0x0070(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (BlueprintVisible, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected))
	uint8                                         Pad_EF2[0x3];                                      // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         SprintTimeMin;                                     // 0x0074(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         SprintTimeMax;                                     // 0x0078(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         SprintTimeEnd;                                     // 0x007C(0x0004)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         SprintStaminaThresholdMin;                         // 0x0080(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         SprintStaminaThresholdMax;                         // 0x0084(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         SprintStaminaThreshold;                            // 0x0088(0x0004)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         SprintStaminaMin;                                  // 0x008C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         SprintLookAroundTimeMin;                           // 0x0090(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         SprintLookAroundTimeMax;                           // 0x0094(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         SprintLookAroundTimeEnd;                           // 0x0098(0x0004)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	void AdvanceToObjective();
	void GroupLeaderDecisionMaking();
	void GroupMemberDecisionMaking();
	void HandleSprinting();
	void LoneWolfDecisionMaking();
	void PatrolAtObjective();
	void StartCapturingTheObjective();
	void StartSprinting();
	void StopSprinting();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"HDAIBehState_BasicAASCapture">();
	}
	static class UHDAIBehState_BasicAASCapture* GetDefaultObj()
	{
		return GetDefaultObjImpl<UHDAIBehState_BasicAASCapture>();
	}
};

// Class HDMain.HDAIBehState_BasicAASIdle
// 0x0000 (0x0058 - 0x0058)
class UHDAIBehState_BasicAASIdle final  : public UHDAIBehaviorStateBase
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"HDAIBehState_BasicAASIdle">();
	}
	static class UHDAIBehState_BasicAASIdle* GetDefaultObj()
	{
		return GetDefaultObjImpl<UHDAIBehState_BasicAASIdle>();
	}
};

// Class HDMain.HDAIBehState_FindAttackSpot
// 0x0060 (0x00B8 - 0x0058)
class UHDAIBehState_FindAttackSpot final  : public UHDAIBehaviorStateBase
{
public:
	class UHDAINavigationHandler*                 NavigationHandler;                                 // 0x0058(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FVector                                FindAttackSpotStartLocation;                       // 0x0060(0x0010)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                                FindAttackSpotEndLocation;                         // 0x006C(0x0010)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                                InitialDirection;                                  // 0x0078(0x0010)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         InitialDirectionRandomizationAngle;                // 0x0084(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         FindAttackSpotMaxDistanceMin;                      // 0x0088(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         FindAttackSpotMaxDistanceMax;                      // 0x008C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                         NumOfRandomAttemptsRemaining;                      // 0x0090(0x0004)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                         MaxNumOfRandomAttempts;                            // 0x0094(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         RandomAttemptNavRadius;                            // 0x0098(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         bIsAtLocation : 1;                                 // 0x009C(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (BlueprintVisible, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected))
	uint8                                         Pad_EF3[0x3];                                      // 0x009D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         WaitEndTime;                                       // 0x00A0(0x0004)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         WaitTimeMin;                                       // 0x00A4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         WaitTimeMax;                                       // 0x00A8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         bAutoUpdateSafeSpot : 1;                           // 0x00AC(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, BlueprintVisible, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected))
	uint8                                         Pad_EF4[0x3];                                      // 0x00AD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UHDAIBehState_BasicAASCombat*           CombatState;                                       // 0x00B0(0x0008)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"HDAIBehState_FindAttackSpot">();
	}
	static class UHDAIBehState_FindAttackSpot* GetDefaultObj()
	{
		return GetDefaultObjImpl<UHDAIBehState_FindAttackSpot>();
	}
};

// Class HDMain.HDAIBehState_FindSafeSpot
// 0x0078 (0x00D0 - 0x0058)
class UHDAIBehState_FindSafeSpot final  : public UHDAIBehaviorStateBase
{
public:
	class UHDAINavigationHandler*                 NavigationHandler;                                 // 0x0058(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UHDAICombatHandler*                     CombatHandler;                                     // 0x0060(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UHDAIAimingHandler*                     AimingHandler;                                     // 0x0068(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class AHDPlayerCharacter*                     OwnerChar;                                         // 0x0070(0x0008)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                                FindSafeSpotStartLocation;                         // 0x0078(0x0010)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                                FindSafeSpotEndLocation;                           // 0x0084(0x0010)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                                InitialDirection;                                  // 0x0090(0x0010)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         InitialDirectionRandomizationAngle;                // 0x009C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         FindSafeSpotMaxDistanceMin;                        // 0x00A0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         FindSafeSpotMaxDistanceMax;                        // 0x00A4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                         NumOfRandomAttemptsRemaining;                      // 0x00A8(0x0004)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                         MaxNumOfRandomAttempts;                            // 0x00AC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         RandomAttemptNavRadius;                            // 0x00B0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         bIsAtLocation : 1;                                 // 0x00B4(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (BlueprintVisible, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected))
	uint8                                         Pad_EF5[0x3];                                      // 0x00B5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         WaitEndTime;                                       // 0x00B8(0x0004)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         WaitTimeMin;                                       // 0x00BC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         WaitTimeMax;                                       // 0x00C0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         bAutoUpdateAttackSpot : 1;                         // 0x00C4(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, BlueprintVisible, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected))
	uint8                                         bSprintWhileFindingSafeSpot : 1;                   // 0x00C4(0x0001)(BitIndex: 0x01, PropSize: 0x0001 (Edit, BlueprintVisible, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected))
	uint8                                         Pad_EF6[0x3];                                      // 0x00C5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UHDAIBehState_BasicAASCombat*           CombatState;                                       // 0x00C8(0x0008)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"HDAIBehState_FindSafeSpot">();
	}
	static class UHDAIBehState_FindSafeSpot* GetDefaultObj()
	{
		return GetDefaultObjImpl<UHDAIBehState_FindSafeSpot>();
	}
};

// Class HDMain.HDAIBehState_SafeSpotting
// 0x0018 (0x0070 - 0x0058)
class UHDAIBehState_SafeSpotting final  : public UHDAIBehaviorStateBase
{
public:
	uint8                                         bSafespottingTimerStarted : 1;                     // 0x0058(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (BlueprintVisible, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected))
	uint8                                         Pad_EF7[0x3];                                      // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         SafespottingEndTime;                               // 0x005C(0x0004)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         SafespottingTimeMin;                               // 0x0060(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         SafespottingTimeMax;                               // 0x0064(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UHDAIBehState_BasicAASCombat*           CombatState;                                       // 0x0068(0x0008)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	void HandleSafeSpotting();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"HDAIBehState_SafeSpotting">();
	}
	static class UHDAIBehState_SafeSpotting* GetDefaultObj()
	{
		return GetDefaultObjImpl<UHDAIBehState_SafeSpotting>();
	}
};

// Class HDMain.HDAICombatHandler
// 0x01A0 (0x01F0 - 0x0050)
class UHDAICombatHandler final  : public UHDAIHandlerBase
{
public:
	class UHDAIBehaviorHandler*                   BehaviorHandler;                                   // 0x0050(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UHDAIVocalHandler*                      VocalHandler;                                      // 0x0058(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class AActor*                                 Enemy;                                             // 0x0060(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_EF8[0x4];                                      // 0x0068(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CombatTargetLocation;                              // 0x006C(0x0010)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                                CustomCombatTargetLocation;                        // 0x0078(0x0010)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EHDAICombatTargetType              CombatTargetLocationType;                          // 0x0084(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         bDoNotAttack : 1;                                  // 0x0085(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (BlueprintVisible, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate))
	uint8                                         bWeaponAutoReload : 1;                             // 0x0085(0x0001)(BitIndex: 0x01, PropSize: 0x0001 (BlueprintVisible, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate))
	uint8                                         bWeaponMovementFire : 1;                           // 0x0085(0x0001)(BitIndex: 0x02, PropSize: 0x0001 (BlueprintVisible, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate))
	uint8                                         bWeaponHasAmmo : 1;                                // 0x0085(0x0001)(BitIndex: 0x03, PropSize: 0x0001 (BlueprintVisible, BlueprintReadOnly, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate))
	uint8                                         Pad_EF9[0x2];                                      // 0x0086(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         WeaponNextFireTime;                                // 0x0088(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         AttackRateMin;                                     // 0x008C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         AttackRateMax;                                     // 0x0090(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         BurstAttackProbability;                            // 0x0094(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                         BurstAttackNumberMin;                              // 0x0098(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                         BurstAttackNumberMax;                              // 0x009C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                         CurrentBurstAttackNumber;                          // 0x00A0(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         WeaponStopFireTime;                                // 0x00A4(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         WeaponStopFireTimeMin;                             // 0x00A8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         WeaponStopFireTimeMax;                             // 0x00AC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         bWeaponInfiniteAmmo : 1;                           // 0x00B0(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bWeaponInfiniteClipAmmo : 1;                       // 0x00B0(0x0001)(BitIndex: 0x01, PropSize: 0x0001 (Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bIgnoreFriendlySuppression : 1;                    // 0x00B0(0x0001)(BitIndex: 0x02, PropSize: 0x0001 (Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bIgnoreFriendlyHits : 1;                           // 0x00B0(0x0001)(BitIndex: 0x03, PropSize: 0x0001 (Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         Pad_EFA[0x7];                                      // 0x00B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	FMulticastInlineDelegateProperty_             OnReload;                                          // 0x00B8(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             OnReceiveSuppression;                              // 0x00C8(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             OnReceiveHitDamage;                                // 0x00D8(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TArray<struct FHDAISuppressionSource>         SuppressionSources;                                // 0x00E8(0x0010)(BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         MaxNumSuppressionSources;                          // 0x00F8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         SuppressionSourceTimeThreshold;                    // 0x00FC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         SuppressionSourceUpdateRate;                       // 0x0100(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         SuppressionSourceUpdateTime;                       // 0x0104(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UHDKit*                                 CurrentKit;                                        // 0x0108(0x0008)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class ESpecificItemType                  CurrentSpecificItemType;                           // 0x0110(0x0001)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_EFB[0x7];                                      // 0x0111(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FHDAIItemData>                  EquipmentReferences;                               // 0x0118(0x0010)(BlueprintVisible, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         EquipmentHandlingTime;                             // 0x0128(0x0004)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         EquipmentHandlingRate;                             // 0x012C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         EquipmentHandlingRateVariation;                    // 0x0130(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         bSpecialtyItemInUse : 1;                           // 0x0134(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (BlueprintVisible, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected))
	uint8                                         bProjectileWeaponInUse : 1;                        // 0x0134(0x0001)(BitIndex: 0x01, PropSize: 0x0001 (BlueprintVisible, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected))
	uint8                                         Pad_EFC[0x3];                                      // 0x0135(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         AfterEquipCooldownTime;                            // 0x0138(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         SpecialtyItemUseTimeLimit;                         // 0x013C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         AfterSpecialtyItemUsedTimeLimit;                   // 0x0140(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_EFD[0x4];                                      // 0x0144(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<enum class ESpecificItemType, struct FHDAISpecificItemTypeAttackData> ItemAttackData;                                    // 0x0148(0x0050)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FHDAISpecificItemTypeAttackData        DefaultItemAttackData;                             // 0x0198(0x0030)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	float                                         GrenadeLauncherRangeMin;                           // 0x01C4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         GrenadeLauncherRangeMax;                           // 0x01C8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         GrenadeLauncherChance;                             // 0x01CC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         RocketLauncherRangeMin;                            // 0x01D0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         RocketLauncherRangeMax;                            // 0x01D4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         RocketLauncherChance;                              // 0x01D8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         FragGrenadeRangeMin;                               // 0x01DC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         FragGrenadeRangeMax;                               // 0x01E0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         FragGrenadeChance;                                 // 0x01E4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         SmokeGrenadeRangeMin;                              // 0x01E8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         SmokeGrenadeChance;                                // 0x01EC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	void AddSuppressionSource(const struct FHDAISuppressionSource& InSuppressionSource);
	void ClearCombatTargetLocation();
	void ClearCustomCombatTargetLocation();
	struct FVector GetMostRelevantSuppressionSource();
	struct FVector GetOldestSuppressionSource();
	void PauseAttack();
	void ReceiveHitDamage(class ADFBaseProjectile* OtherProjectile, class ADFBasePickup* Pickup);
	void ReceiveSuppression(class ADFBaseProjectile* OtherProjectile, class ADFBasePickup* Pickup);
	void Reload(class AHDBaseWeapon* InWeapon);
	void SetEnemy(class AActor* NewEnemy);
	void SetItemAttackParameters(struct FHDAISpecificItemTypeAttackData& InAttackData);
	void SetNextAttackTime();
	void SetupEquipmentReferences();
	void StartAttack();
	void StopAttack();
	void StopUsingSpecialtyItem();
	void UpdateAttackParameters();
	void UpdateEquipmentHandling();
	void UpdateSuppressionSources();

	bool CanAttackEnemy(bool bCheckFireTime, bool bIgnoreAmmoReloadCheck) const;
	bool HasAmmoLoaded() const;
	bool HasValidCombatTargetLocation() const;
	bool HasValidCustomCombatTargetLocation() const;
	bool HasValidEnemy(bool bAliveCheck) const;
	bool IsFiring() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"HDAICombatHandler">();
	}
	static class UHDAICombatHandler* GetDefaultObj()
	{
		return GetDefaultObjImpl<UHDAICombatHandler>();
	}
};

// Class HDMain.HDAIController
// 0x0030 (0x0360 - 0x0330)
class AHDAIController : public ADFBaseAIController
{
public:
	class UHDPlayerComponent*                     PlayerComponent;                                   // 0x0330(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UHDGOAPComponent*                       GOAPComponent;                                     // 0x0338(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         bCanJoinSquads : 1;                                // 0x0340(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bCanJoinPlayerSquads : 1;                          // 0x0340(0x0001)(BitIndex: 0x01, PropSize: 0x0001 (Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bCanCreateSquads : 1;                              // 0x0340(0x0001)(BitIndex: 0x02, PropSize: 0x0001 (Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         Pad_EFE[0x3];                                      // 0x0341(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         MaxNumberOfAILedSquads;                            // 0x0344(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         MaxNumberOfSquadMembers;                           // 0x0348(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         MaxNumberOfAISquadMembers;                         // 0x034C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         bUseFactionSpecifiedSquadLeaderKit : 1;            // 0x0350(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bUseFactionSpecifiedSquadMemberKit : 1;            // 0x0350(0x0001)(BitIndex: 0x01, PropSize: 0x0001 (Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         Pad_EFF[0x3];                                      // 0x0351(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                FocusActorPerceivedLocation;                       // 0x0354(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	bool JoinOrCreateSquad();

	class UHDKit* GetFactionSpecifiedSquadLeaderKit() const;
	class UHDKit* GetFactionSpecifiedSquadMemberKit() const;
	TSubclassOf<class APawn> GetStartPawnClass() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"HDAIController">();
	}
	static class AHDAIController* GetDefaultObj()
	{
		return GetDefaultObjImpl<AHDAIController>();
	}
};

// Class HDMain.HDAIGroupBehaviorHandler
// 0x00B0 (0x0100 - 0x0050)
class UHDAIGroupBehaviorHandler final  : public UHDAIHandlerBase
{
public:
	class UHDAINavigationHandler*                 NavigationHandler;                                 // 0x0050(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UHDAICaptureHandler*                    CaptureHandler;                                    // 0x0058(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class AHDPlayerState*                         PlayerState;                                       // 0x0060(0x0008)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         bIsGroupLeader : 1;                                // 0x0068(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (BlueprintVisible, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected))
	uint8                                         bIsGroupMember : 1;                                // 0x0068(0x0001)(BitIndex: 0x01, PropSize: 0x0001 (BlueprintVisible, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected))
	uint8                                         bGroupDataIsSet : 1;                               // 0x0068(0x0001)(BitIndex: 0x02, PropSize: 0x0001 (BlueprintVisible, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected))
	uint8                                         bGroupDataIsSynchronized : 1;                      // 0x0068(0x0001)(BitIndex: 0x03, PropSize: 0x0001 (BlueprintVisible, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected))
	uint8                                         bLeaderIsHuman : 1;                                // 0x0068(0x0001)(BitIndex: 0x04, PropSize: 0x0001 (BlueprintVisible, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected))
	uint8                                         bIsRespawned : 1;                                  // 0x0068(0x0001)(BitIndex: 0x05, PropSize: 0x0001 (BlueprintVisible, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected))
	uint8                                         Pad_F00[0x3];                                      // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         NumValidGroupMembers;                              // 0x006C(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                         NumGroupMembersOnPoint;                            // 0x0070(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         bWaitingForGroupMembers : 1;                       // 0x0074(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (BlueprintVisible, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected))
	uint8                                         Pad_F01[0x3];                                      // 0x0075(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         WaitingForMembersStartTime;                        // 0x0078(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         bIsGroupWaiting : 1;                               // 0x007C(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (BlueprintVisible, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected))
	uint8                                         Pad_F02[0x3];                                      // 0x007D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         GroupWaitTimeDuration;                             // 0x0080(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         GroupWaitTimeEnd;                                  // 0x0084(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         WaitingTimePerGroupMember;                         // 0x0088(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         WaitingRadiusMultiplier;                           // 0x008C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         MinNumGroupMembersOnPoint;                         // 0x0090(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         AdvanceWaitTimeDurationMin;                        // 0x0094(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         AdvanceWaitTimeDurationMax;                        // 0x0098(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         PatrolWaitTimeDurationMin;                         // 0x009C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         PatrolWaitTimeDurationMax;                         // 0x00A0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         FormationIndex;                                    // 0x00A4(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                FormationOffset;                                   // 0x00A8(0x0010)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         GroupFormationRadius;                              // 0x00B4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         GroupFormationSlotRadius;                          // 0x00B8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         GroupFormationSlotDistance;                        // 0x00BC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FVector>                        FormationSlots;                                    // 0x00C0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         FollowHumanLeaderTime;                             // 0x00D0(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         FollowHumanLeaderPatrolTime;                       // 0x00D4(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                                FollowHumanLeaderLastKnownLocation;                // 0x00D8(0x0010)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         bEnableFollowHumanLeader : 1;                      // 0x00E4(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         Pad_F03[0x3];                                      // 0x00E5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         FollowHumanLeaderInterval;                         // 0x00E8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         FollowHumanLeaderVelocityMultiplier;               // 0x00EC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         FollowHumanLeaderAcceptanceRadius;                 // 0x00F0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         FollowHumanLeaderRange;                            // 0x00F4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         FollowHumanLeaderPatrolTimeThreshold;              // 0x00F8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         NumGroupMembersInCombat;                           // 0x00FC(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	bool AllGroupMembersAreOnPoint();
	void BroadcastGroupData();
	void CountGroupMembers();
	void FollowHumanLeader();
	struct FHDAIGroupData GetGroupData();
	class AHDPlayerState* GetGroupLeader();
	TArray<class AHDAIController*> GetGroupMembers();
	void InformGroupOnContact(const struct FVector& InCombatTarget, const struct FVector& InNavigationAnchor);
	void InformGroupOnLostContact();
	void InformLeaderOnContact(const struct FVector& InCombatTarget, const struct FVector& InNavigationAnchor);
	bool IsGroupWaitTimeOver();
	void OnOwnerDeath(class APawn* VictimPawn, class AController* VictimController, float KillingDamage, struct FDamageEvent& DamageEvent, class APawn* InstigatingPawn, class AActor* DamageCauser);
	bool RequestGroupDataSync();
	void SetGroupParams();
	void SetupGroupData();
	void StartGroupWaitTime();
	void SyncGroupData(struct FHDAIGroupData& InGroupData);

	int32 GetNumGroupMembersInCombat() const;
	int32 GetNumValidGroupMembers() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"HDAIGroupBehaviorHandler">();
	}
	static class UHDAIGroupBehaviorHandler* GetDefaultObj()
	{
		return GetDefaultObjImpl<UHDAIGroupBehaviorHandler>();
	}
};

// Class HDMain.HDAINavigationHandler
// 0x00D0 (0x0120 - 0x0050)
class UHDAINavigationHandler final  : public UHDAIHandlerBase
{
public:
	class UNavigationSystemV1*                    NavSystem;                                         // 0x0050(0x0008)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bMoving;                                           // 0x0058(0x0001)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_F05[0x3];                                      // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                DesiredLocation;                                   // 0x005C(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         AcceptanceRadius;                                  // 0x0068(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         bIgnoreZeroVectorGoto : 1;                         // 0x006C(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, BlueprintVisible, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected))
	uint8                                         Pad_F06[0x3];                                      // 0x006D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FHDAIMasterNavPoint>            MasterNavPath;                                     // 0x0070(0x0010)(BlueprintVisible, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         MasterNavPathLength;                               // 0x0080(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                                TargetNavPoint;                                    // 0x0084(0x0010)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                         TargetNavPointIndex;                               // 0x0090(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                                NavigationAnchorPoint;                             // 0x0094(0x0010)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         RemainingNavPathLength;                            // 0x00A0(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         bPawnIsAtTheEndOfPath : 1;                         // 0x00A4(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (BlueprintVisible, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected))
	uint8                                         Pad_F07[0x3];                                      // 0x00A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         NavPathSegmentLengthMin;                           // 0x00A8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         NavPathSegmentLengthMax;                           // 0x00AC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         bCompensatePartialPathForGroupFormationRadius : 1; // 0x00B0(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         Pad_F08[0x3];                                      // 0x00B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         PartialPathGroupRadiusMultiplier;                  // 0x00B4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         NavigationAnchorRandomRange;                       // 0x00B8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_F09[0x4];                                      // 0x00BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	FMulticastInlineDelegateProperty_             OnMoveToLocationFailed;                            // 0x00C0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	float                                         MoveToFailedTime;                                  // 0x00D0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         MoveToFailedTimeDelay;                             // 0x00D4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         MoveToFailedRandomizationRadiusBase;               // 0x00D8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         MoveToFailedRandomizationRadiusIncrement;          // 0x00DC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         MaxMoveToFailedRandomizationRadius;                // 0x00E0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                         MoveToFailedAttemptNumber;                         // 0x00E4(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         MoveToFailedAttemptResetTimer;                     // 0x00E8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         bMoveToFailedIsBeingHandled : 1;                   // 0x00EC(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (BlueprintVisible, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected))
	uint8                                         Pad_F0A[0x3];                                      // 0x00ED(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AHDBaseCapturePoint*                    SavedCapturePoint;                                 // 0x00F0(0x0008)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         StuckCheckTime;                                    // 0x00F8(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         StuckCheckInterval;                                // 0x00FC(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         StuckCheckDistance;                                // 0x0100(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                                StuckCheckLastLocation;                            // 0x0104(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         bEnableRVOAvoidance : 1;                           // 0x0110(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, BlueprintVisible, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected))
	uint8                                         Pad_F0B[0x3];                                      // 0x0111(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         RVOAvoidanceConsiderationRadius;                   // 0x0114(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         RVOAvoidanceWeight;                                // 0x0118(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	static bool PointsAreEqualXY(struct FVector& Vector1, struct FVector& Vector2, float Tolerance);

	bool CheckPawnStuckStatus();
	void GotoLocation(struct FVector& InLocation);
	void GotoLocationRandomized(struct FVector& InLocation, float InRandomizationRadius);
	void HandleMoveToFailed();
	void MakeNavPathSegment();
	bool MakeNewMasterNavPath(const struct FVector& InStart, const struct FVector& InDestination);
	bool MakePathToDesiredLocation();
	void MoveToLocationFailed();
	void OnMoveToFailed();
	void SetDesiredLocation(struct FVector& InDesiredLocation);
	void SetupRVOAvoidance();

	bool FindNavLocationInsideControlPoint(class AHDBaseCapturePoint* CP, struct FVector* OutNavLoc) const;
	void FixVectorValuesNaN(struct FVector* InVector, bool bRandomize) const;
	bool IsMoving() const;
	bool IsNavDataValidForAllControlPoints() const;
	bool IsNavigationPossible() const;
	bool IsPawnAtDestination() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"HDAINavigationHandler">();
	}
	static class UHDAINavigationHandler* GetDefaultObj()
	{
		return GetDefaultObjImpl<UHDAINavigationHandler>();
	}
};

// Class HDMain.HDAIPerceptionComponent
// 0x0040 (0x00F0 - 0x00B0)
class UHDAIPerceptionComponent final  : public UActorComponent
{
public:
	class AHDPlayerCharacter*                     OwnerPlayer;                                       // 0x00B0(0x0008)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         bEnableAdvancedLineTracing : 1;                    // 0x00B8(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         Pad_F10[0x3];                                      // 0x00B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         ObserverSightRadius;                               // 0x00BC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ObserverLoseSightRadius;                           // 0x00C0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         DistanceToObserverRangeFar;                        // 0x00C4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         DistanceToObserverRangeNear;                       // 0x00C8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         bComplexSightLineTrace : 1;                        // 0x00CC(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, BlueprintVisible, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         Pad_F11[0x3];                                      // 0x00CD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         ShoulderLocationFactor;                            // 0x00D0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         RangeFactorWeight;                                 // 0x00D4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         StanceFactorWeight;                                // 0x00D8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MovementFactorWeight;                              // 0x00DC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         StanceFactorMaxValue;                              // 0x00E0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         StanceFactorMinValue;                              // 0x00E4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         OwnerMaxMovementSpeed;                             // 0x00E8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         OwnerDefaultHalfHeight;                            // 0x00EC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	float CalcSightStrength(float Distance) const;
	bool CanBeSeenFrom(struct FVector& ObserverLocation, struct FVector* OutSeenLocation, int32* NumberOfLoSChecksPerformed, float* OutSightStrength, class AActor* IgnoreActor) const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"HDAIPerceptionComponent">();
	}
	static class UHDAIPerceptionComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UHDAIPerceptionComponent>();
	}
};

// Class HDMain.HDAIVocalHandler
// 0x00C8 (0x0118 - 0x0050)
class UHDAIVocalHandler final  : public UHDAIHandlerBase
{
public:
	class UHDAICombatHandler*                     CombatHandler;                                     // 0x0050(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         bEnableVocalization : 1;                           // 0x0058(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         Pad_F13[0x7];                                      // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAICharacterVocalProfile               CurrentProfile;                                    // 0x0060(0x0068)(BlueprintVisible, Transient, NativeAccessSpecifierPublic)
	uint8                                         bEnableTimeLimitNotify : 1;                        // 0x00C8(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bFactionOnlyTimeLimit : 1;                         // 0x00C8(0x0001)(BitIndex: 0x01, PropSize: 0x0001 (Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         Pad_F14[0x3];                                      // 0x00C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         TimeLimitNotifyRange;                              // 0x00CC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         PitchMultiplier;                                   // 0x00D0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MinPitchMultiplier;                                // 0x00D4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MaxPitchMultiplier;                                // 0x00D8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         AnySoundTimeLimit;                                 // 0x00DC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ContactTimeLimit;                                  // 0x00E0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         LostContactTimeLimit;                              // 0x00E4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ReloadingTimeLimit;                                // 0x00E8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         BeenHitTimeLimit;                                  // 0x00EC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         UnderSuppressionTimeLimit;                         // 0x00F0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         DeathTimeLimit;                                    // 0x00F4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         NextAnySoundTime;                                  // 0x00F8(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         NextContactTime;                                   // 0x00FC(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         NextLostContactTime;                               // 0x0100(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         NextReloadingTime;                                 // 0x0104(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         NextBeenHitTime;                                   // 0x0108(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         NextUnderSuppressionTime;                          // 0x010C(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         NextDeathTime;                                     // 0x0110(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	void NotifySurroundingCharacters(enum class EHDAIVocalizationType InVocalType);
	void PlayVocalSound(enum class EHDAIVocalizationType InVocalType);
	void RandomizePitchMultiplier();
	void SetPitchMultiplier(float InPitchMultiplier);
	void SetTimeLimit(enum class EHDAIVocalizationType InVocalType);
	void Vocalize(enum class EHDAIVocalizationType InVocalType);
	void VocalizeBeenHit();
	void VocalizeContact(bool bHasContact);
	void VocalizeReload();
	void VocalizeSuppression();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"HDAIVocalHandler">();
	}
	static class UHDAIVocalHandler* GetDefaultObj()
	{
		return GetDefaultObjImpl<UHDAIVocalHandler>();
	}
};

// Class HDMain.HDAssetManager
// 0x0000 (0x0440 - 0x0440)
class UHDAssetManager final  : public UDFAssetManager
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"HDAssetManager">();
	}
	static class UHDAssetManager* GetDefaultObj()
	{
		return GetDefaultObjImpl<UHDAssetManager>();
	}
};

// Class HDMain.HDBaseCapturePoint
// 0x0130 (0x0350 - 0x0220)
class AHDBaseCapturePoint : public AActor
{
public:
	uint8                                         Pad_F15[0x8];                                      // 0x0220(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMeshComponent*                 Mesh;                                              // 0x0228(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USphereComponent*                       SphereCollision;                                   // 0x0230(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UDFPOIComponent*                        POI;                                               // 0x0238(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UNavigationInvokerComponent*            NavigationInvoker;                                 // 0x0240(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         bActive : 1;                                       // 0x0248(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, BlueprintVisible, BlueprintReadOnly, Net, DisableEditOnTemplate, Transient, EditConst, RepNotify, NoDestructor, AdvancedDisplay, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected))
	uint8                                         bLocked : 1;                                       // 0x0248(0x0001)(BitIndex: 0x01, PropSize: 0x0001 (Edit, BlueprintVisible, BlueprintReadOnly, Net, DisableEditOnTemplate, Transient, EditConst, RepNotify, NoDestructor, AdvancedDisplay, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected))
	uint8                                         bContested : 1;                                    // 0x0248(0x0001)(BitIndex: 0x02, PropSize: 0x0001 (Edit, BlueprintVisible, BlueprintReadOnly, Net, DisableEditOnTemplate, Transient, EditConst, RepNotify, NoDestructor, AdvancedDisplay, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected))
	uint8                                         bCaptured : 1;                                     // 0x0248(0x0001)(BitIndex: 0x03, PropSize: 0x0001 (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnTemplate, Transient, EditConst, NoDestructor, AdvancedDisplay, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected))
	uint8                                         bCapturedOnce : 1;                                 // 0x0248(0x0001)(BitIndex: 0x04, PropSize: 0x0001 (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnTemplate, Transient, EditConst, NoDestructor, AdvancedDisplay, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected))
	uint8                                         Pad_F16[0x3];                                      // 0x0249(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CaptureProgress;                                   // 0x024C(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, RepNotify, NoDestructor, AdvancedDisplay, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                         ActiveRoute;                                       // 0x0250(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, AdvancedDisplay, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_F17[0xC];                                      // 0x0254(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UChildActorComponent*>           SpawnPoints;                                       // 0x0260(0x0010)(BlueprintVisible, ExportObject, ZeroConstructor, ContainsInstancedReference, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	FMulticastInlineDelegateProperty_             OnCaptureProgressUpdated;                          // 0x0270(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	enum class EHDTeam                            StartingTeam;                                      // 0x0280(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_F18[0x7];                                      // 0x0281(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CaptureDisplayName;                                // 0x0288(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnTemplate, Protected, NativeAccessSpecifierProtected)
	float                                         CaptureTimerRate;                                  // 0x02A0(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                         CaptureSpeed;                                      // 0x02A4(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         CaptureRadius;                                     // 0x02A8(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                         MinPlayersToCapture;                               // 0x02AC(0x0004)(Edit, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         bEnforceMinPlayersToCaptureWithSmallerPlayerCount : 1; // 0x02B0(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, BlueprintVisible, BlueprintReadOnly, Net, Config, DisableEditOnInstance, GlobalConfig, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected))
	uint8                                         bScaleCaptureSpeed : 1;                            // 0x02B0(0x0001)(BitIndex: 0x01, PropSize: 0x0001 (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected))
	uint8                                         bRecapturable : 1;                                 // 0x02B0(0x0001)(BitIndex: 0x02, PropSize: 0x0001 (Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected))
	uint8                                         bWinOnCapture : 1;                                 // 0x02B0(0x0001)(BitIndex: 0x03, PropSize: 0x0001 (Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected))
	uint8                                         bProvideSpawnPoint : 1;                            // 0x02B0(0x0001)(BitIndex: 0x04, PropSize: 0x0001 (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnTemplate, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected))
	uint8                                         bProvideSpawnPointWhenUnderAttack : 1;             // 0x02B0(0x0001)(BitIndex: 0x05, PropSize: 0x0001 (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnTemplate, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected))
	uint8                                         Pad_F19[0x7];                                      // 0x02B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSet<int32>                                   PossibleRoutes;                                    // 0x02B8(0x0050)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnTemplate, Protected, NativeAccessSpecifierProtected)
	int32                                         Tier;                                              // 0x0308(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_F1A[0x4];                                      // 0x030C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FTransform>                     SpawnPointTransforms;                              // 0x0310(0x0010)(Edit, BlueprintVisible, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EHDTeam                            OwningTeam;                                        // 0x0320(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, RepNotify, NoDestructor, AdvancedDisplay, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EHDTeam                            PrevNonNeutralOwningTeam;                          // 0x0321(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, AdvancedDisplay, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_F1B[0x6];                                      // 0x0322(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	FMulticastInlineDelegateProperty_             OnOwningTeamUpdate;                                // 0x0328(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         bCapturableByTeamRed : 1;                          // 0x0338(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, BlueprintVisible, BlueprintReadOnly, Net, DisableEditOnTemplate, EditConst, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate))
	uint8                                         bCapturableByTeamBlue : 1;                         // 0x0338(0x0001)(BitIndex: 0x01, PropSize: 0x0001 (Edit, BlueprintVisible, BlueprintReadOnly, Net, DisableEditOnTemplate, EditConst, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate))
	uint8                                         Pad_F1C[0x7];                                      // 0x0339(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	FMulticastInlineDelegateProperty_             OnTeamCaptureStatusUpdate;                         // 0x0340(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)

public:
	class AActor* ChoosePlayerStart(class AHDPlayerController* Player);
	void Lock();
	void OnBeginOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult);
	void OnEndOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex);
	void OnOwningTeamUpdated(enum class EHDTeam LastOwningTeam);
	void OnRep_Active();
	void OnRep_CapturableByTeam();
	void OnRep_CaptureProgress();
	void OnRep_Contested();
	void OnRep_Locked();
	void OnRep_OwningTeam(enum class EHDTeam LastOwningTeam);
	void ReceiveOnActive(bool bNewActive);
	void ReceiveOnCaptureProgress(bool bNewContested);
	void ReceiveOnLocked(bool bNewLocked);
	void ReceiveOnOwningTeamUpdated(enum class EHDTeam LastOwningTeam);
	void ReceiveOnTeamCaptureStatusUpdated();
	void SetActive(bool bNewActive);
	void SetActiveRoute(int32 NewActiveRoute);
	void Unlock();

	bool CanCapture() const;
	bool CanRestartPlayer(class AController* Player) const;
	int32 GetMinPlayersRequiredForCaptureTeam(enum class EHDTeam CaptureTeam) const;
	enum class EHDControlPointObjectiveType GetObjectiveTypeForTeam(enum class EHDTeam ObjTeam) const;
	void GetOverlappingCharactersByTeam(TArray<class ADFBaseCharacter*>* OverlappingCharsRed, TArray<class ADFBaseCharacter*>* OverlappingCharsBlue) const;
	bool IsCapturableByTeam(enum class EHDTeam CaptureTeam) const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"HDBaseCapturePoint">();
	}
	static class AHDBaseCapturePoint* GetDefaultObj()
	{
		return GetDefaultObjImpl<AHDBaseCapturePoint>();
	}
};

// Class HDMain.HDBaseGameMode
// 0x0090 (0x04A8 - 0x0418)
class AHDBaseGameMode : public ADFBaseGameMode
{
public:
	TSubclassOf<class UHDScoreboardBase>          ScoreboardMenuClass;                               // 0x0418(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FHDGameRoundEndEventDetails            RoundEndEventDetails;                              // 0x0420(0x0010)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	uint8                                         bDisablePlayerSpawnKitRestrictions : 1;            // 0x0430(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bUseTickets : 1;                                   // 0x0430(0x0001)(BitIndex: 0x01, PropSize: 0x0001 (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected))
	uint8                                         Pad_F21[0x7];                                      // 0x0431(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UHDTeamDefinition*                      DefaultBluforTeamDefinition;                       // 0x0438(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoClear, IsPlainOldData, NoDestructor, Protected, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UHDTeamDefinition*                      DefaultOpforTeamDefinition;                        // 0x0440(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoClear, IsPlainOldData, NoDestructor, Protected, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UHDTeamDefinition*                      BluforTeamDefinition;                              // 0x0448(0x0008)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UHDTeamDefinition*                      OpforTeamDefinition;                               // 0x0450(0x0008)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         bRandomPlayerTeamBalance : 1;                      // 0x0458(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, Config, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected))
	uint8                                         Pad_F22[0x37];                                     // 0x0459(0x0037)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UHDPlatoonInfo*>                 PlatoonInfos;                                      // 0x0490(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSubclassOf<class AHDPlatoonState>            PlatoonStateClass;                                 // 0x04A0(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoClear, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	void AddBluforBots(int32 Num);
	void AddOpforBots(int32 Num);
	bool PlayerCanRestartAtPlayerStart(class AController* Player, class AActor* StartSpot, class UDFLoadout* StartLoadout);
	void RemoveBluforBots(int32 Num);
	void RemoveOpforBots(int32 Num);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"HDBaseGameMode">();
	}
	static class AHDBaseGameMode* GetDefaultObj()
	{
		return GetDefaultObjImpl<AHDBaseGameMode>();
	}
};

// Class HDMain.HDBasePickup_Kit
// 0x0020 (0x0278 - 0x0258)
class AHDBasePickup_Kit : public ADFBasePickup
{
public:
	class UDFInventoryComponent*                  Inventory;                                         // 0x0258(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class UPrimitiveComponent*>            KitVisuals;                                        // 0x0260(0x0010)(ExportObject, ZeroConstructor, Transient, DuplicateTransient, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UHDKit*                                 KitLoadout;                                        // 0x0270(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"HDBasePickup_Kit">();
	}
	static class AHDBasePickup_Kit* GetDefaultObj()
	{
		return GetDefaultObjImpl<AHDBasePickup_Kit>();
	}
};

// Class HDMain.HDBaseWeapon
// 0x0018 (0x0870 - 0x0858)
class AHDBaseWeapon : public ADFBaseGun_Projectile
{
public:
	class UTexture2D*                             DisplayIcon;                                       // 0x0858(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTexture2D*                             DisplayEquipmentSymbol;                            // 0x0860(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         bUseFreeAim : 1;                                   // 0x0868(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate))
	uint8                                         bSelectable : 1;                                   // 0x0868(0x0001)(BitIndex: 0x01, PropSize: 0x0001 (Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate))
	uint8                                         bHideFireModeIndicator : 1;                        // 0x0868(0x0001)(BitIndex: 0x02, PropSize: 0x0001 (Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         Pad_F24[0x3];                                      // 0x0869(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         AmmoReplenishmentDelay;                            // 0x086C(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	bool IsSelectableEquipment() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"HDBaseWeapon">();
	}
	static class AHDBaseWeapon* GetDefaultObj()
	{
		return GetDefaultObjImpl<AHDBaseWeapon>();
	}
};

// Class HDMain.HDButtonBase
// 0x0038 (0x0268 - 0x0230)
class UHDButtonBase : public UUserWidget
{
public:
	class FText                                   ButtonText;                                        // 0x0230(0x0018)(Edit, NativeAccessSpecifierPrivate)
	class UButton*                                Button;                                            // 0x0248(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_F25[0x18];                                     // 0x0250(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void HandleButtonClicked();
	void SetButtonText(class FText& InText);
	void UpdateButtonText(class FText& InText);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"HDButtonBase">();
	}
	static class UHDButtonBase* GetDefaultObj()
	{
		return GetDefaultObjImpl<UHDButtonBase>();
	}
};

// Class HDMain.HDPlayerController
// 0x00A8 (0x06A0 - 0x05F8)
class AHDPlayerController : public ADFBasePlayerController
{
public:
	class AHDPlayerCharacter*                     HDCharacter;                                       // 0x05F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UHDPlayerComponent*                     PlayerComponent;                                   // 0x0600(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TMap<class FName, struct FPTTKeyState>        PushToTalkKeyStates;                               // 0x0608(0x0050)(Transient, Protected, NativeAccessSpecifierProtected)
	uint8                                         Pad_F26[0x4];                                      // 0x0658(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   TextCommsFormatName;                               // 0x065C(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                   TeamLocalVoipCommChannelGroupName;                 // 0x0664(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                   SquadVoipCommChannelGroupName;                     // 0x066C(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                   CommandVoipCommChannelGroupName;                   // 0x0674(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_F27[0x4];                                      // 0x067C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UDFPlayerCommsComponent*                CachedPlayerCommsComp;                             // 0x0680(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSubclassOf<class UVictoryMenu>               VictoryMenuClass;                                  // 0x0688(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UVictoryMenu*                           VictoryMenu;                                       // 0x0690(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_F28[0x8];                                      // 0x0698(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void Auth_SpawnVehicle();
	bool CanTalkOverChannel(class FName TalkChannelName);
	void ClientCheatSetAllowIdleSway(bool bIdleSwayDisallowed);
	void ClientLoadTeamData(TArray<class FString>& FactionAssetPaths);
	void ClientRoundEnd(struct FHDGameRoundEndEventDetails& RoundDetails, bool bIsWinner);
	class UDFPlayerCommsComponent* GetPlayerCommsComponent();
	class UDFCommChannel* GetTalkChannel();
	bool IsTalkingOverChannel(class UDFCommChannel* TalkChannel);
	bool IsTalkingOverChannelGroup(class FName TalkGroupName);
	bool IsTalkingOverChannelName(class FName TalkChannelName);
	void LoadVictoryMenu(struct FHDGameRoundEndEventDetails& RoundDetails, bool bWinner);
	void OnPauseMenu();
	void OnPlayerSpawnTimerElapsed();
	void OnShowScoreboardPressed();
	void OnShowScoreboardReleased();
	void ReceiveVoipTalkerMsgReceived(class UDFCommChannel* MsgTalkerChannel, class APlayerState* MsgTalkerPS, bool bMsgIsTalking);
	void ServerCheatSetAllowIdleSway(bool bIdleSwayDisallowed);
	void ServerPickTeam(enum class EHDTeam DesiredTeam);
	void ServerRestartPlayerAtStartSpot(class AActor* DesiredStartSpot, class UDFLoadout* DesiredStartLoadout);
	void ServerSpawnVehicle();
	void ServerSwitchTeam();
	void StartTalkingOverChannel(class FName TalkStartChannelName);
	void StartTalkingOverChannelGroup(class FName TalkStartGroupName);
	void StopTalkingOnActiveChannels();
	void StopTalkingOverChannelGroupIfActive(class FName TalkStopGroupName);
	void StopTalkingOverChannelIfActive(class FName TalkStopChannelName);
	void Talk();
	void TeamTalk();
	void UnloadVictoryMenu();

	bool IsIdleSwayAllowed() const;
	bool IsInVehicle() const;
	bool IsTalking(bool bIncludeWantsToTalk) const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"HDPlayerController">();
	}
	static class AHDPlayerController* GetDefaultObj()
	{
		return GetDefaultObjImpl<AHDPlayerController>();
	}
};

// Class HDMain.HDCheatManager
// 0x0008 (0x0080 - 0x0078)
class UHDCheatManager final  : public UDFCheatManager
{
public:
	uint8                                         Pad_F30[0x8];                                      // 0x0078(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void SetFreeAimDeadzoneCameraSpeedFactor(float NewSpeedFactor);
	void SetFreeAimReturnToCenterInterpSpeed(float NewInterpSpeed);
	void SetMaxFreeAimPitch(float NewPitch);
	void SetMaxFreeAimPitchADS(float NewPitch);
	void SetMaxFreeAimYaw(float NewYaw);
	void SetMaxFreeAimYawADS(float NewYaw);
	void SpawnVehicle();
	void ToggleFreeAim();
	void ToggleFreeAimADS();
	void ToggleIdleSway();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"HDCheatManager">();
	}
	static class UHDCheatManager* GetDefaultObj()
	{
		return GetDefaultObjImpl<UHDCheatManager>();
	}
};

// Class HDMain.HDConfirmationDialog
// 0x0018 (0x0250 - 0x0238)
class UHDConfirmationDialog : public UDFGameDialog
{
public:
	uint8                                         Pad_F31[0x10];                                     // 0x0238(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	class UDynamicEntryBox*                       ButtonsEntryBox;                                   // 0x0248(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	void UpdateDialogText(class FText& TitleText, class FText& DescriptionText);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"HDConfirmationDialog">();
	}
	static class UHDConfirmationDialog* GetDefaultObj()
	{
		return GetDefaultObjImpl<UHDConfirmationDialog>();
	}
};

// Class HDMain.HDFactionInfo
// 0x0050 (0x00E0 - 0x0090)
class UHDFactionInfo : public UDFFactionInfo
{
public:
	TSet<TSoftObjectPtr<class UHDKit>>            Kits;                                              // 0x0090(0x0050)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, Protected, UObjectWrapper, NativeAccessSpecifierProtected)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"HDFactionInfo">();
	}
	static class UHDFactionInfo* GetDefaultObj()
	{
		return GetDefaultObjImpl<UHDFactionInfo>();
	}
};

// Class HDMain.HDGame_AdvanceAndSecure
// 0x0038 (0x04E0 - 0x04A8)
class AHDGame_AdvanceAndSecure final  : public AHDBaseGameMode
{
public:
	int32                                         StartingBlueTier;                                  // 0x04A8(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         StartingRedTier;                                   // 0x04AC(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ActiveRoute;                                       // 0x04B0(0x0004)(Edit, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                         CurrentBlueCaptureTier;                            // 0x04B4(0x0004)(Edit, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                         CurrentRedCaptureTier;                             // 0x04B8(0x0004)(Edit, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         bBlueIncreasesTier : 1;                            // 0x04BC(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, Transient, EditConst, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected))
	uint8                                         Pad_F32[0x23];                                     // 0x04BD(0x0023)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	int32 GetCurrentBlueCaptureTier() const;
	int32 GetCurrentRedCaptureTier() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"HDGame_AdvanceAndSecure">();
	}
	static class AHDGame_AdvanceAndSecure* GetDefaultObj()
	{
		return GetDefaultObjImpl<AHDGame_AdvanceAndSecure>();
	}
};

// Class HDMain.HDGame_TeamDeathMatch
// 0x0000 (0x04A8 - 0x04A8)
class AHDGame_TeamDeathMatch final  : public AHDBaseGameMode
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"HDGame_TeamDeathMatch">();
	}
	static class AHDGame_TeamDeathMatch* GetDefaultObj()
	{
		return GetDefaultObjImpl<AHDGame_TeamDeathMatch>();
	}
};

// Class HDMain.HDGameEngine
// 0x0000 (0x0E30 - 0x0E30)
class UHDGameEngine final  : public UDFGameEngine
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"HDGameEngine">();
	}
	static class UHDGameEngine* GetDefaultObj()
	{
		return GetDefaultObjImpl<UHDGameEngine>();
	}
};

// Class HDMain.HDGameInstance
// 0x0180 (0x0458 - 0x02D8)
class UHDGameInstance : public UTBGameInstance
{
public:
	class UHDUGCLoadProgressScreen*               UGCLoadProgressScreen;                             // 0x02D8(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UHDScoreboardBase*                      ScoreboardMenu;                                    // 0x02E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UHDUGCLoadProgressScreen>   UGCLoadProgressScreenClassPtr;                     // 0x02E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftClassPtr<class UClass>                   UGCLoadProgressScreenClass;                        // 0x02F0(0x0028)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_F33[0x140];                                    // 0x0318(0x0140)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static bool HasDLCBP(int64 DLCAppID);
	static bool HasModsLoaded();
	static bool OwnsAppBP(int64 AppID);

	void LoadScoreboardMenu();
	void ShowConfirmationDialog(class FText& Title, class FText& Message);
	void ShowErrorDialog(class FText& Title, class FText& Message);
	void UnloadScoreboardMenu();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"HDGameInstance">();
	}
	static class UHDGameInstance* GetDefaultObj()
	{
		return GetDefaultObjImpl<UHDGameInstance>();
	}
};

// Class HDMain.HDGameModeDefinition
// 0x0028 (0x0110 - 0x00E8)
class UHDGameModeDefinition final  : public UDFGameModeDefinition
{
public:
	TSoftClassPtr<class UClass>                   GameModeClass;                                     // 0x00E8(0x0028)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"HDGameModeDefinition">();
	}
	static class UHDGameModeDefinition* GetDefaultObj()
	{
		return GetDefaultObjImpl<UHDGameModeDefinition>();
	}
};

// Class HDMain.HDGameModsProjectPolicies
// 0x0000 (0x0030 - 0x0030)
class UHDGameModsProjectPolicies final  : public UHDCoreDefaultUGCProjectPolicies
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"HDGameModsProjectPolicies">();
	}
	static class UHDGameModsProjectPolicies* GetDefaultObj()
	{
		return GetDefaultObjImpl<UHDGameModsProjectPolicies>();
	}
};

// Class HDMain.HDGameProjectBuildSettings
// 0x0000 (0x0028 - 0x0028)
class UHDGameProjectBuildSettings final  : public UBlueprintFunctionLibrary
{
public:
	static bool IsDemoBuild();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"HDGameProjectBuildSettings">();
	}
	static class UHDGameProjectBuildSettings* GetDefaultObj()
	{
		return GetDefaultObjImpl<UHDGameProjectBuildSettings>();
	}
};

// Class HDMain.HDGameRulesetBase
// 0x0008 (0x0060 - 0x0058)
class UHDGameRulesetBase : public UDFGameRulesetBase
{
public:
	uint8                                         bUseTickets : 1;                                   // 0x0058(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected))

public:
	void GiveTicketsToTeam(enum class EHDTeam TicketTeam, int32 TicketsToAdd);
	void RevokeTicketsFromTeam(enum class EHDTeam TicketTeam, int32 TicketsToRemove);

	class AHDBaseGameMode* GetHDGameMode() const;
	class AHDGameState* GetHDGameState() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"HDGameRulesetBase">();
	}
	static class UHDGameRulesetBase* GetDefaultObj()
	{
		return GetDefaultObjImpl<UHDGameRulesetBase>();
	}
};

// Class HDMain.HDGameSession
// 0x0008 (0x0278 - 0x0270)
class AHDGameSession final  : public ADFGameSession
{
public:
	bool                                          bSupportersOnlyWhitelist;                          // 0x0270(0x0001)(ZeroConstructor, Config, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"HDGameSession">();
	}
	static class AHDGameSession* GetDefaultObj()
	{
		return GetDefaultObjImpl<AHDGameSession>();
	}
};

// Class HDMain.HDGameState
// 0x0020 (0x0330 - 0x0310)
class AHDGameState final  : public ADFBaseGameState
{
public:
	float                                         ReplicatedMinRespawnDelay;                         // 0x0310(0x0004)(Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         bReplicatedDisableSpawnKitRestrictions : 1;        // 0x0314(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Net, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate))
	uint8                                         Pad_F38[0x3];                                      // 0x0315(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         BluforTickets;                                     // 0x0318(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                         OpforTickets;                                      // 0x031C(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AHDTeamState*                           BluforTeamState;                                   // 0x0320(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AHDTeamState*                           OpforTeamState;                                    // 0x0328(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	void ClearTickets();
	void GiveTicketsToTeam(enum class EHDTeam TicketTeam, int32 TicketsToAdd);
	void RevokeTicketsFromTeam(enum class EHDTeam TicketTeam, int32 TicketsToRemove);

	int32 GetNumPlayersOnTeam(enum class EHDTeam TeamToCheck) const;
	bool IsGameUsingPlayerSpawnKitRestrictions(class AController* Controller) const;
	bool IsGameUsingTickets() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"HDGameState">();
	}
	static class AHDGameState* GetDefaultObj()
	{
		return GetDefaultObjImpl<AHDGameState>();
	}
};

// Class HDMain.HDGOAPAct_AttackEnemy
// 0x0000 (0x0098 - 0x0098)
class UHDGOAPAct_AttackEnemy final  : public UHDGOAPActionBase
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"HDGOAPAct_AttackEnemy">();
	}
	static class UHDGOAPAct_AttackEnemy* GetDefaultObj()
	{
		return GetDefaultObjImpl<UHDGOAPAct_AttackEnemy>();
	}
};

// Class HDMain.HDGOAPAct_CaptureControlPoint
// 0x0000 (0x0098 - 0x0098)
class UHDGOAPAct_CaptureControlPoint final  : public UHDGOAPActionBase
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"HDGOAPAct_CaptureControlPoint">();
	}
	static class UHDGOAPAct_CaptureControlPoint* GetDefaultObj()
	{
		return GetDefaultObjImpl<UHDGOAPAct_CaptureControlPoint>();
	}
};

// Class HDMain.HDGOAPAct_DefendControlPoint
// 0x0000 (0x0098 - 0x0098)
class UHDGOAPAct_DefendControlPoint final  : public UHDGOAPActionBase
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"HDGOAPAct_DefendControlPoint">();
	}
	static class UHDGOAPAct_DefendControlPoint* GetDefaultObj()
	{
		return GetDefaultObjImpl<UHDGOAPAct_DefendControlPoint>();
	}
};

// Class HDMain.HDGOAPAct_MoveToDesiredLocation
// 0x0000 (0x0098 - 0x0098)
class UHDGOAPAct_MoveToDesiredLocation final  : public UHDGOAPActionBase
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"HDGOAPAct_MoveToDesiredLocation">();
	}
	static class UHDGOAPAct_MoveToDesiredLocation* GetDefaultObj()
	{
		return GetDefaultObjImpl<UHDGOAPAct_MoveToDesiredLocation>();
	}
};

// Class HDMain.HDGOAPComponent
// 0x0070 (0x01D8 - 0x0168)
class UHDGOAPComponent final  : public UGOAPComponent
{
public:
	class AHDAIController*                        HDAIOwner;                                         // 0x0168(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class AHDPlayerCharacter*                     HDAICharOwner;                                     // 0x0170(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class UHDAIHandlerBase*>               AIHandlers;                                        // 0x0178(0x0010)(Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UHDAINavigationHandler*                 NavigationHandler;                                 // 0x0188(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, NoClear, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UHDAICaptureHandler*                    CaptureHandler;                                    // 0x0190(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, NoClear, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UHDAICombatHandler*                     CombatHandler;                                     // 0x0198(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, NoClear, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UHDAIBehaviorHandler*                   BehaviorHandler;                                   // 0x01A0(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, NoClear, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UHDAIGroupBehaviorHandler*              GroupBehaviorHandler;                              // 0x01A8(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, NoClear, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UHDAIAimingHandler*                     AimingHandler;                                     // 0x01B0(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, NoClear, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UHDAIVocalHandler*                      VocalHandler;                                      // 0x01B8(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, NoClear, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_F3D[0x10];                                     // 0x01C0(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         DecisionFrequency;                                 // 0x01D0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	void ResetPlanningTimer();
	void TargetPerceptionUpdated(class AActor* Actor, const struct FAIStimulus& Stimulus);

	class UHDAIHandlerBase* GetAIHandler(TSubclassOf<class UHDAIHandlerBase> HandlerClass) const;
	bool IsAIActive() const;
	bool IsAIActiveInWorld() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"HDGOAPComponent">();
	}
	static class UHDGOAPComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UHDGOAPComponent>();
	}
};

// Class HDMain.HDGOAPGoal_CaptureControlPoint
// 0x0010 (0x0078 - 0x0068)
class UHDGOAPGoal_CaptureControlPoint final  : public UHDGOAPGoalBase
{
public:
	class AHDBaseCapturePoint*                    CPToCaptureCurrent;                                // 0x0068(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class AHDBaseCapturePoint*                    CPToCapturePending;                                // 0x0070(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"HDGOAPGoal_CaptureControlPoint">();
	}
	static class UHDGOAPGoal_CaptureControlPoint* GetDefaultObj()
	{
		return GetDefaultObjImpl<UHDGOAPGoal_CaptureControlPoint>();
	}
};

// Class HDMain.HDHUD
// 0x0000 (0x0310 - 0x0310)
class AHDHUD : public AHUD
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"HDHUD">();
	}
	static class AHDHUD* GetDefaultObj()
	{
		return GetDefaultObjImpl<AHDHUD>();
	}
};

// Class HDMain.HDJoinGameMenu
// 0x0048 (0x0280 - 0x0238)
class UHDJoinGameMenu : public UDFBaseMenu
{
public:
	class UHDServerListView*                      ServerList;                                        // 0x0238(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<struct FPrimaryAssetId>                MapIds;                                            // 0x0240(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_F3E[0x30];                                     // 0x0250(0x0030)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void JoinGame(class UHDServerListItemData* ServerItem, const class FString& JoinPassword);
	void OnRefresh(bool bSortAscending, enum class EHDServerListSortBy SortBy);
	void ReceiveOnRefreshComplete(bool bSortAscending, enum class EHDServerListSortBy SortBy);
	void ReceiveOnRefreshStart();

	bool IsUsingDebugServerListings() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"HDJoinGameMenu">();
	}
	static class UHDJoinGameMenu* GetDefaultObj()
	{
		return GetDefaultObjImpl<UHDJoinGameMenu>();
	}
};

// Class HDMain.HDKit
// 0x0078 (0x00B8 - 0x0040)
class UHDKit final  : public UDFLoadout
{
public:
	TArray<struct FHDItemEntry>                   ItemEntries;                                       // 0x0040(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         PrimaryItemSlotNum;                                // 0x0050(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_F3F[0x4];                                      // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class AHDBasePickup_Kit>          KitDropPrefabClass;                                // 0x0058(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UHDKitPrerequisiteBase*>         KitRequirements;                                   // 0x0060(0x0010)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, ContainsInstancedReference, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FDataTableRowHandle>            CharacterVariations;                               // 0x0070(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         bSquadLeaderKit : 1;                               // 0x0080(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected))
	uint8                                         bAllowsRallyPointDeployment : 1;                   // 0x0080(0x0001)(BitIndex: 0x01, PropSize: 0x0001 (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected))
	uint8                                         Pad_F40[0x17];                                     // 0x0081(0x0017)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   KitDisplayName;                                    // 0x0098(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	class UTexture2D*                             KitDisplaySymbol;                                  // 0x00B0(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	static bool GetItemEntryDisplayEquipmentSymbol(struct FHDItemEntry& ItemEntry, class UTexture2D** OutDisplayEquipmentSymbol);
	static bool GetItemEntryDisplayIcon(struct FHDItemEntry& ItemEntry, class UTexture2D** OutDisplayIcon);

	bool GetItemEntryBySlotNum(int32 SlotNum, struct FHDItemEntry* OutEntry) const;
	int32 GetNumPlayersUsingKit(class UObject* WorldContextObject) const;
	int32 GetPlayersUsingKit(class UObject* WorldContextObject, TArray<class AHDPlayerState*>* OutPSArray) const;
	bool GetPrimaryItemEntry(struct FHDItemEntry* OutPrimaryEntry) const;
	bool GetPrimaryItemEntryDisplayIcon(class UTexture2D** OutDisplayIcon) const;
	bool HasKitRequirements() const;
	bool PlayerCanStartWithKit(class AController* Player, class FText* OutKitDenialReason) const;
	struct FDFCharacterVariationDataHandle RandomCharacterVariationDataFromKit() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"HDKit">();
	}
	static class UHDKit* GetDefaultObj()
	{
		return GetDefaultObjImpl<UHDKit>();
	}
};

// Class HDMain.HDKitPrerequisiteBase
// 0x0018 (0x0040 - 0x0028)
class UHDKitPrerequisiteBase : public UObject
{
public:
	class FText                                   KitDenialReason;                                   // 0x0028(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"HDKitPrerequisiteBase">();
	}
	static class UHDKitPrerequisiteBase* GetDefaultObj()
	{
		return GetDefaultObjImpl<UHDKitPrerequisiteBase>();
	}
};

// Class HDMain.HDKitPrerequisite_AdminOnly
// 0x0000 (0x0040 - 0x0040)
class UHDKitPrerequisite_AdminOnly final  : public UHDKitPrerequisiteBase
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"HDKitPrerequisite_AdminOnly">();
	}
	static class UHDKitPrerequisite_AdminOnly* GetDefaultObj()
	{
		return GetDefaultObjImpl<UHDKitPrerequisite_AdminOnly>();
	}
};

// Class HDMain.HDKitPrerequisite_AlwaysDisable
// 0x0000 (0x0040 - 0x0040)
class UHDKitPrerequisite_AlwaysDisable final  : public UHDKitPrerequisiteBase
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"HDKitPrerequisite_AlwaysDisable">();
	}
	static class UHDKitPrerequisite_AlwaysDisable* GetDefaultObj()
	{
		return GetDefaultObjImpl<UHDKitPrerequisite_AlwaysDisable>();
	}
};

// Class HDMain.HDKitPrerequisite_MinSquadMembers
// 0x0008 (0x0048 - 0x0040)
class UHDKitPrerequisite_MinSquadMembers final  : public UHDKitPrerequisiteBase
{
public:
	int32                                         MinSquadMembers;                                   // 0x0040(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"HDKitPrerequisite_MinSquadMembers">();
	}
	static class UHDKitPrerequisite_MinSquadMembers* GetDefaultObj()
	{
		return GetDefaultObjImpl<UHDKitPrerequisite_MinSquadMembers>();
	}
};

// Class HDMain.HDKitPrerequisite_SquadLeaderOnly
// 0x0000 (0x0040 - 0x0040)
class UHDKitPrerequisite_SquadLeaderOnly final  : public UHDKitPrerequisiteBase
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"HDKitPrerequisite_SquadLeaderOnly">();
	}
	static class UHDKitPrerequisite_SquadLeaderOnly* GetDefaultObj()
	{
		return GetDefaultObjImpl<UHDKitPrerequisite_SquadLeaderOnly>();
	}
};

// Class HDMain.HDKitPrerequisite_SquadSizeLimit
// 0x0008 (0x0048 - 0x0040)
class UHDKitPrerequisite_SquadSizeLimit final  : public UHDKitPrerequisiteBase
{
public:
	int32                                         MaxSquadCount;                                     // 0x0040(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"HDKitPrerequisite_SquadSizeLimit">();
	}
	static class UHDKitPrerequisite_SquadSizeLimit* GetDefaultObj()
	{
		return GetDefaultObjImpl<UHDKitPrerequisite_SquadSizeLimit>();
	}
};

// Class HDMain.HDKitPrerequisite_SquadUsageLimit
// 0x0008 (0x0048 - 0x0040)
class UHDKitPrerequisite_SquadUsageLimit final  : public UHDKitPrerequisiteBase
{
public:
	int32                                         MaxSquadMembers;                                   // 0x0040(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"HDKitPrerequisite_SquadUsageLimit">();
	}
	static class UHDKitPrerequisite_SquadUsageLimit* GetDefaultObj()
	{
		return GetDefaultObjImpl<UHDKitPrerequisite_SquadUsageLimit>();
	}
};

// Class HDMain.HDKitPrerequisite_TeamSpecific
// 0x0008 (0x0048 - 0x0040)
class UHDKitPrerequisite_TeamSpecific final  : public UHDKitPrerequisiteBase
{
public:
	enum class EHDTeam                            RequiredTeam;                                      // 0x0040(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"HDKitPrerequisite_TeamSpecific">();
	}
	static class UHDKitPrerequisite_TeamSpecific* GetDefaultObj()
	{
		return GetDefaultObjImpl<UHDKitPrerequisite_TeamSpecific>();
	}
};

// Class HDMain.HDKitPrerequisite_TeamUsageLimit
// 0x0008 (0x0048 - 0x0040)
class UHDKitPrerequisite_TeamUsageLimit final  : public UHDKitPrerequisiteBase
{
public:
	int32                                         MaxTeamMembers;                                    // 0x0040(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"HDKitPrerequisite_TeamUsageLimit">();
	}
	static class UHDKitPrerequisite_TeamUsageLimit* GetDefaultObj()
	{
		return GetDefaultObjImpl<UHDKitPrerequisite_TeamUsageLimit>();
	}
};

// Class HDMain.HDLocalPlayer
// 0x0000 (0x0258 - 0x0258)
class UHDLocalPlayer final  : public UDFLocalPlayer
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"HDLocalPlayer">();
	}
	static class UHDLocalPlayer* GetDefaultObj()
	{
		return GetDefaultObjImpl<UHDLocalPlayer>();
	}
};

// Class HDMain.HDModData
// 0x0018 (0x0048 - 0x0030)
class UHDModData final  : public UHDCoreUGCData
{
public:
	TArray<struct FHDPrimaryAssetSearchPath>      PrimaryAssetPathsToScan;                           // 0x0030(0x0010)(Edit, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bServersideOnlyMod;                                // 0x0040(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_F4A[0x3];                                      // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	uint32                                        ModDataVersion;                                    // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	static bool DoesModPluginUseLegacyMapScanning(const class FString& PluginName);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"HDModData">();
	}
	static class UHDModData* GetDefaultObj()
	{
		return GetDefaultObjImpl<UHDModData>();
	}
};

// Class HDMain.HDNavigationSystem
// 0x0000 (0x0538 - 0x0538)
class UHDNavigationSystem final  : public UDFNavigationSystem
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"HDNavigationSystem">();
	}
	static class UHDNavigationSystem* GetDefaultObj()
	{
		return GetDefaultObjImpl<UHDNavigationSystem>();
	}
};

// Class HDMain.HDNavigationSystemConfig
// 0x0000 (0x0060 - 0x0060)
class UHDNavigationSystemConfig final  : public UDFNavigationSystemConfig
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"HDNavigationSystemConfig">();
	}
	static class UHDNavigationSystemConfig* GetDefaultObj()
	{
		return GetDefaultObjImpl<UHDNavigationSystemConfig>();
	}
};

// Class HDMain.HDOnlineSessionClient
// 0x0000 (0x01A8 - 0x01A8)
class UHDOnlineSessionClient final  : public UDFOnlineSessionClient
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"HDOnlineSessionClient">();
	}
	static class UHDOnlineSessionClient* GetDefaultObj()
	{
		return GetDefaultObjImpl<UHDOnlineSessionClient>();
	}
};

// Class HDMain.HDOptionsMenu
// 0x0000 (0x0238 - 0x0238)
class UHDOptionsMenu : public UDFBaseMenu
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"HDOptionsMenu">();
	}
	static class UHDOptionsMenu* GetDefaultObj()
	{
		return GetDefaultObjImpl<UHDOptionsMenu>();
	}
};

// Class HDMain.HDPhysicsCollisionHandler
// 0x0000 (0x0040 - 0x0040)
class UHDPhysicsCollisionHandler final  : public UDFPhysicsCollisionHandler
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"HDPhysicsCollisionHandler">();
	}
	static class UHDPhysicsCollisionHandler* GetDefaultObj()
	{
		return GetDefaultObjImpl<UHDPhysicsCollisionHandler>();
	}
};

// Class HDMain.HDPlatoonCreationRuleBase
// 0x0000 (0x0028 - 0x0028)
class UHDPlatoonCreationRuleBase final  : public UObject
{
public:
	bool SatisfiesRule(class UHDTeamDefinition* TeamDef) const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"HDPlatoonCreationRuleBase">();
	}
	static class UHDPlatoonCreationRuleBase* GetDefaultObj()
	{
		return GetDefaultObjImpl<UHDPlatoonCreationRuleBase>();
	}
};

// Class HDMain.HDPlatoonInfo
// 0x0038 (0x0068 - 0x0030)
class UHDPlatoonInfo : public UPrimaryDataAsset
{
public:
	struct FPrimaryAssetType                      PlatoonType;                                       // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UHDPlatoonCreationRuleBase*>     CreationRules;                                     // 0x0038(0x0010)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, ContainsInstancedReference, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FText                                   DisplayName;                                       // 0x0048(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	int32                                         MaxSquadLimit;                                     // 0x0060(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	bool ShouldCreateForTeam(class UHDTeamDefinition* TeamDef) const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"HDPlatoonInfo">();
	}
	static class UHDPlatoonInfo* GetDefaultObj()
	{
		return GetDefaultObjImpl<UHDPlatoonInfo>();
	}
};

// Class HDMain.HDPlatoonStateCreationPayload
// 0x0010 (0x0038 - 0x0028)
class UHDPlatoonStateCreationPayload final  : public UObject
{
public:
	struct FHDPlatoonCreationParams               CreationParams;                                    // 0x0028(0x0010)(NoDestructor, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"HDPlatoonStateCreationPayload">();
	}
	static class UHDPlatoonStateCreationPayload* GetDefaultObj()
	{
		return GetDefaultObjImpl<UHDPlatoonStateCreationPayload>();
	}
};

// Class HDMain.HDPlatoonState
// 0x01D0 (0x03F0 - 0x0220)
class AHDPlatoonState final  : public ADFReplInfo
{
public:
	uint8                                         Pad_F4E[0x8];                                      // 0x0220(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	FMulticastInlineDelegateProperty_             OnSquadAdded;                                      // 0x0228(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             OnSquadPreRemove;                                  // 0x0238(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TSubclassOf<class AHDSquadState>              SquadStateClass;                                   // 0x0248(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoClear, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FDFGenericObjectContainer              Squads;                                            // 0x0250(0x0180)(Net, Transient, Protected, NativeAccessSpecifierProtected)
	uint8                                         bInitialized : 1;                                  // 0x03D0(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnTemplate, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate))
	uint8                                         Pad_F4F[0x3];                                      // 0x03D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ID;                                                // 0x03D4(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UHDPlatoonInfo*                         Info;                                              // 0x03D8(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         TeamId;                                            // 0x03E0(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_F50[0x7];                                      // 0x03E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AHDTeamState*                           OwnerTeam;                                         // 0x03E8(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	class AHDSquadState* AddSquad(class FText& SquadDisplayName, class AHDPlayerState* SquadLeader, bool bStartLocked);
	bool FindSquadByName(class FText& SquadDisplayName, class AHDSquadState** OutFoundSquad);
	void ReceiveSquadAdded(class AHDSquadState* Squad);
	void ReceiveSquadPreRemove(class AHDSquadState* Squad);
	void RemoveFromOwner();
	void RemoveSquad(class AHDSquadState* SquadToRemove);
	void RemoveSquadAt(int32 RemoveIdx);

	void DumpSquadState() const;
	int32 GetMaxSquadLimit() const;
	int32 GetNumSquads(bool bValidSquadsOnly) const;
	class AHDSquadState* GetSquadAt(int32 Index, bool bIgnorePendingRemoval) const;
	bool HasReachedMaxSquadLimit() const;
	bool IsSquadPendingRemovalFromPlatoon(class AHDSquadState* Squad) const;
	bool SquadExists(class AHDSquadState* Squad, bool bIgnorePendingRemoval) const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"HDPlatoonState">();
	}
	static class AHDPlatoonState* GetDefaultObj()
	{
		return GetDefaultObjImpl<AHDPlatoonState>();
	}
};

// Class HDMain.HDPlayerCameraManager
// 0x0000 (0x2740 - 0x2740)
class AHDPlayerCameraManager : public ADFPlayerCameraManager
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"HDPlayerCameraManager">();
	}
	static class AHDPlayerCameraManager* GetDefaultObj()
	{
		return GetDefaultObjImpl<AHDPlayerCameraManager>();
	}
};

// Class HDMain.HDPlayerCharacter
// 0x00D0 (0x0A40 - 0x0970)
class AHDPlayerCharacter : public ADFBasePlayerCharacter
{
public:
	bool                                          bUseAttachedVehicleRelevancy;                      // 0x0970(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_F57[0x3];                                      // 0x0971(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         WalkingBobSpeed;                                   // 0x0974(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         bDoHeadBob : 1;                                    // 0x0978(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bAllowFreeAim : 1;                                 // 0x0978(0x0001)(BitIndex: 0x01, PropSize: 0x0001 (Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate))
	uint8                                         bAllowFreeAimWhileAiming : 1;                      // 0x0978(0x0001)(BitIndex: 0x02, PropSize: 0x0001 (Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate))
	uint8                                         bDoFreeAim : 1;                                    // 0x0978(0x0001)(BitIndex: 0x03, PropSize: 0x0001 (Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate))
	uint8                                         Pad_F58[0x7];                                      // 0x0979(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDFCharacterVariationDataHandle        VariationHandle;                                   // 0x0980(0x0018)(BlueprintVisible, BlueprintReadOnly, Net, Transient, RepNotify, NativeAccessSpecifierPrivate)
	class USpringArmComponent*                    SpringArm;                                         // 0x0998(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class USpringArmComponent*                    FreeAimSpringArm;                                  // 0x09A0(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UHDKit*                                 CurrentLoadout;                                    // 0x09A8(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, EditConst, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class AHDBasePickup_Kit>          KitClassFallback;                                  // 0x09B0(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         KitDropTraceDistance;                              // 0x09B8(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         bInventoryMenuShown : 1;                           // 0x09BC(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, BlueprintVisible, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         Pad_F59[0x3];                                      // 0x09BD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	FMulticastInlineDelegateProperty_             OnAimStyleChanged;                                 // 0x09C0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	enum class EHDWeaponAimStyle                  AimStyle;                                          // 0x09D0(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_F5A[0x7];                                      // 0x09D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AHDTeamState*                           HDTeamState;                                       // 0x09D8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAudioComponent*                        AIVocalAC;                                         // 0x09E0(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSubclassOf<class UCameraShake>               WalkingHeadBob;                                    // 0x09E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSubclassOf<class UCameraShake>               SprintingHeadBob;                                  // 0x09F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         bCanAddYawInput : 1;                               // 0x09F8(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, BlueprintVisible, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate))
	uint8                                         bCanAddPitchInput : 1;                             // 0x09F8(0x0001)(BitIndex: 0x01, PropSize: 0x0001 (Edit, BlueprintVisible, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate))
	uint8                                         bCanAddRollInput : 1;                              // 0x09F8(0x0001)(BitIndex: 0x02, PropSize: 0x0001 (Edit, BlueprintVisible, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate))
	uint8                                         Pad_F5B[0x3];                                      // 0x09F9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         FreeAimDeadzoneCameraSpeedFactor;                  // 0x09FC(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         FreeAimReturnToCenterInterpSpeed;                  // 0x0A00(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         MaxFreeAimYaw;                                     // 0x0A04(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         MaxFreeAimPitch;                                   // 0x0A08(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         MaxFreeAimYawADS;                                  // 0x0A0C(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         MaxFreeAimPitchADS;                                // 0x0A10(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         CurrentFreeAimYaw;                                 // 0x0A14(0x0004)(Edit, BlueprintVisible, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         CurrentFreeAimPitch;                               // 0x0A18(0x0004)(Edit, BlueprintVisible, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         FreeAimMouseDeltaX;                                // 0x0A1C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         FreeAimMouseDeltaY;                                // 0x0A20(0x0004)(Edit, BlueprintVisible, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         FreeAimExternalDeltaX;                             // 0x0A24(0x0004)(Edit, BlueprintVisible, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         FreeAimExternalDeltaY;                             // 0x0A28(0x0004)(Edit, BlueprintVisible, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	enum class EHDAIVocalizationType              LastAIVocalization;                                // 0x0A2C(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_F5C[0x3];                                      // 0x0A2D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UHDAIPerceptionComponent*               HDAIPerceptionComponent;                           // 0x0A30(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	void DropKit();
	bool EquipPrimaryItem();
	void FreeAim(float DeltaSeconds);
	void HeadBob();
	void NotifyPlayerStateChanged(class APlayerState* NewPlayerState, class APlayerState* OldPlayerState);
	void OnPickupKit(class AHDBasePickup_Kit* Kit);
	void OnRep_CurrentLoadout();
	void PlayVocalSoundAI(class USoundBase* SoundToUse, enum class EHDAIVocalizationType VocalType, float PitchMultiplier);
	void ReceiveAimStyleChanged(enum class EHDWeaponAimStyle NewAimStyle, enum class EHDWeaponAimStyle PrevAimStyle, bool bFromPlayerInput);
	void ReceiveCurrentLoadout();
	void ReceiveFreeAim(float DeltaSeconds);
	void ReceiveVariationDataChanged(struct FDFCharacterVariationData& NewVariation, struct FDFCharacterVariationData& PreviousVariation);
	void ReceiveVoipTalkerMsgReceived(class UDFCommChannel* MsgTalkerChannel, class APlayerState* MsgTalkerPS, bool bMsgIsTalking);
	void SetAimStyle(enum class EHDWeaponAimStyle InAimStyle, bool bFromPlayerInput);
	void SetAllowFreeAim(bool bEnabled);
	void SetAllowFreeAimADS(bool bEnabled);
	void SetFreeAimDeadzoneCameraSpeedFactor(float NewSpeedFactor);
	void SetFreeAimReturnToCenterInterpSpeed(float NewInterpSpeed);
	void SetMaxFreeAimPitch(float NewPitch);
	void SetMaxFreeAimPitchADS(float NewPitch);
	void SetMaxFreeAimYaw(float NewYaw);
	void SetMaxFreeAimYawADS(float NewYaw);
	void SetVariationHandle(const struct FDFCharacterVariationDataHandle& InVariationHandle);
	void VariationDataChangedInternal(struct FDFCharacterVariationDataHandle& PreviousHandle);

	const TSubclassOf<class AHDBasePickup_Kit> GetKitClassToUse() const;
	float GetMaxFreeAimPitchToUse() const;
	float GetMaxFreeAimYawToUse() const;
	class UHDPlayerComponent* GetPlayerComponent() const;
	bool IsInVehicle() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"HDPlayerCharacter">();
	}
	static class AHDPlayerCharacter* GetDefaultObj()
	{
		return GetDefaultObjImpl<AHDPlayerCharacter>();
	}
};

// Class HDMain.HDPlayerCharacterAnimInstanceBase
// 0x0020 (0x02E0 - 0x02C0)
class UHDPlayerCharacterAnimInstanceBase : public UDFCharacterAnimInstance
{
public:
	class AHDPlayerCharacter*                     HDPlyCharOwner;                                    // 0x02B8(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class AHDPlayerController*                    HDPCOwner;                                         // 0x02C0(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class AHDBaseWeapon*                          HDEquippedWeapon;                                  // 0x02C8(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         bInVehicle : 1;                                    // 0x02D0(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnTemplate, Transient, EditConst, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected))

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"HDPlayerCharacterAnimInstanceBase">();
	}
	static class UHDPlayerCharacterAnimInstanceBase* GetDefaultObj()
	{
		return GetDefaultObjImpl<UHDPlayerCharacterAnimInstanceBase>();
	}
};

// Class HDMain.HDPlayerCharacterAnimInst_FPP
// 0x0000 (0x02E0 - 0x02E0)
class UHDPlayerCharacterAnimInst_FPP : public UHDPlayerCharacterAnimInstanceBase
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"HDPlayerCharacterAnimInst_FPP">();
	}
	static class UHDPlayerCharacterAnimInst_FPP* GetDefaultObj()
	{
		return GetDefaultObjImpl<UHDPlayerCharacterAnimInst_FPP>();
	}
};

// Class HDMain.HDPlayerCharacterAnimInst_TPP
// 0x0000 (0x02E0 - 0x02E0)
class UHDPlayerCharacterAnimInst_TPP : public UHDPlayerCharacterAnimInstanceBase
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"HDPlayerCharacterAnimInst_TPP">();
	}
	static class UHDPlayerCharacterAnimInst_TPP* GetDefaultObj()
	{
		return GetDefaultObjImpl<UHDPlayerCharacterAnimInst_TPP>();
	}
};

// Class HDMain.HDPlayerComponent
// 0x0008 (0x00D0 - 0x00C8)
class UHDPlayerComponent final  : public UDFPlayerComponent
{
public:
	class UDFLoadout*                             StartLoadout;                                      // 0x00C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	void PickTeam(enum class EHDTeam DesiredTeam);
	void RestartPlayerAtStartSpot(class AActor* DesiredStartSpot, class UDFLoadout* DesiredStartLoadout);
	void SwitchTeam();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"HDPlayerComponent">();
	}
	static class UHDPlayerComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UHDPlayerComponent>();
	}
};

// Class HDMain.HDPlayerStart
// 0x0000 (0x0250 - 0x0250)
class AHDPlayerStart final  : public APlayerStart
{
public:
	class UCapsuleComponent* K2_GetCapsuleComponent() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"HDPlayerStart">();
	}
	static class AHDPlayerStart* GetDefaultObj()
	{
		return GetDefaultObjImpl<AHDPlayerStart>();
	}
};

// Class HDMain.HDPlayerState
// 0x0030 (0x03A8 - 0x0378)
class AHDPlayerState final  : public ADFBasePlayerState
{
public:
	class UHDKit*                                 SpawnLoadout;                                      // 0x0378(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UHDKit*                                 CurrentLoadout;                                    // 0x0380(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FHDSquadAssignmentInfo                 SquadInfo;                                         // 0x0388(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, Net, DisableEditOnTemplate, Transient, EditConst, RepNotify, NoDestructor, Protected, NativeAccessSpecifierProtected)
	FMulticastInlineDelegateProperty_             OnPlayerSquadInfoUpdated;                          // 0x0398(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)

public:
	void AssignCurrentLoadout(class UHDKit* NewCurrentLoadout);
	void AssignSpawnLoadout(class UHDKit* NewSpawnLoadout);
	void OnRep_CurrentLoadout(class UHDKit* PrevLoadout);
	void OnRep_SpawnLoadout(class UHDKit* PrevSpawnLoadout);
	void OnRep_SquadInfo();
	void UnregisterFromSquad();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"HDPlayerState">();
	}
	static class AHDPlayerState* GetDefaultObj()
	{
		return GetDefaultObjImpl<AHDPlayerState>();
	}
};

// Class HDMain.HDProj_Bullet
// 0x0000 (0x0380 - 0x0380)
class AHDProj_Bullet final  : public AHDBaseProjectile
{
public:
	class USphereComponent*                       ProjectileCollision;                               // 0x0378(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"HDProj_Bullet">();
	}
	static class AHDProj_Bullet* GetDefaultObj()
	{
		return GetDefaultObjImpl<AHDProj_Bullet>();
	}
};

// Class HDMain.HDProj_Grenade
// 0x0010 (0x0390 - 0x0380)
class AHDProj_Grenade final  : public AHDBaseProjectile
{
public:
	float                                         FuzeDelay;                                         // 0x037C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         PayloadPostTriggerLifeSpan;                        // 0x0380(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         PayloadServerActivationTime;                       // 0x0384(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	void OnRep_PayloadServerActivationTime();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"HDProj_Grenade">();
	}
	static class AHDProj_Grenade* GetDefaultObj()
	{
		return GetDefaultObjImpl<AHDProj_Grenade>();
	}
};

// Class HDMain.HDRecastNavMesh
// 0x0000 (0x04B8 - 0x04B8)
class AHDRecastNavMesh final  : public ADFRecastNavMesh
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"HDRecastNavMesh">();
	}
	static class AHDRecastNavMesh* GetDefaultObj()
	{
		return GetDefaultObjImpl<AHDRecastNavMesh>();
	}
};

// Class HDMain.HDRuleset_AAS
// 0x0000 (0x0060 - 0x0060)
class UHDRuleset_AAS final  : public UHDGameRulesetBase
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"HDRuleset_AAS">();
	}
	static class UHDRuleset_AAS* GetDefaultObj()
	{
		return GetDefaultObjImpl<UHDRuleset_AAS>();
	}
};

// Class HDMain.HDRuleset_ControlPoint
// 0x0040 (0x00A0 - 0x0060)
class UHDRuleset_ControlPoint final  : public UHDGameRulesetBase
{
public:
	struct FControlPointRulesetSettings           BluforTeamCPSettings;                              // 0x0060(0x0020)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPrivate)
	struct FControlPointRulesetSettings           OpforTeamCPSettings;                               // 0x0080(0x0020)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPrivate)

public:
	void ControlPointCaptureProgressUpdated(class AHDBaseCapturePoint* ControlPoint, bool bContested, int32 Progress);
	void ControlPointTeamUpdated(class AHDBaseCapturePoint* ControlPoint, enum class EHDTeam PrevTeam, enum class EHDTeam NewTeam, bool bCaptured);

	const struct FControlPointRulesetSettings GetControlPointSettingsForTeam(enum class EHDTeam ControlPointTeam) const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"HDRuleset_ControlPoint">();
	}
	static class UHDRuleset_ControlPoint* GetDefaultObj()
	{
		return GetDefaultObjImpl<UHDRuleset_ControlPoint>();
	}
};

// Class HDMain.HDRuleset_KillDeath
// 0x0050 (0x00B0 - 0x0060)
class UHDRuleset_KillDeath final  : public UHDGameRulesetBase
{
public:
	struct FKillDeathRulesetSettings              BluforTeamKDSettings;                              // 0x0060(0x0028)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPrivate)
	struct FKillDeathRulesetSettings              OpforTeamKDSettings;                               // 0x0088(0x0028)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPrivate)

public:
	void PlayerTeamKilled(class AController* Killer, class AController* Victim);

	const struct FKillDeathRulesetSettings GetKillDeathSettingsForTeam(enum class EHDTeam KillDeathTeam) const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"HDRuleset_KillDeath">();
	}
	static class UHDRuleset_KillDeath* GetDefaultObj()
	{
		return GetDefaultObjImpl<UHDRuleset_KillDeath>();
	}
};

// Class HDMain.HDRuleset_NoPlayerSpawnKitRestrictions
// 0x0000 (0x0060 - 0x0060)
class UHDRuleset_NoPlayerSpawnKitRestrictions final  : public UHDGameRulesetBase
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"HDRuleset_NoPlayerSpawnKitRestrictions">();
	}
	static class UHDRuleset_NoPlayerSpawnKitRestrictions* GetDefaultObj()
	{
		return GetDefaultObjImpl<UHDRuleset_NoPlayerSpawnKitRestrictions>();
	}
};

// Class HDMain.HDRuleset_TicketBleed
// 0x0030 (0x0090 - 0x0060)
class UHDRuleset_TicketBleed final  : public UHDGameRulesetBase
{
public:
	uint8                                         Pad_F62[0x8];                                      // 0x0060(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AHDBaseCapturePoint*>            RegisteredCPs;                                     // 0x0068(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FTicketBleedRulesetSettings            BluforTeamTBSettings;                              // 0x0078(0x0010)(Edit, BlueprintVisible, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FTicketBleedRulesetSettings            OpforTeamTBSettings;                               // 0x0084(0x0010)(Edit, BlueprintVisible, NoDestructor, Protected, NativeAccessSpecifierProtected)

public:
	void ApplyTicketBleed(enum class EHDTeam BleedTeam, int32 TicketBleedMultiplier, bool bUseMercyTicketBleed);
	void ControlPointTeamUpdated(class AHDBaseCapturePoint* ControlPoint, enum class EHDTeam PrevTeam, enum class EHDTeam NewTeam, bool bCaptured);
	void UpdateTicketBleedState();

	const struct FTicketBleedRulesetSettings GetTicketBleedSettingsForTeam(enum class EHDTeam TicketBleedTeam) const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"HDRuleset_TicketBleed">();
	}
	static class UHDRuleset_TicketBleed* GetDefaultObj()
	{
		return GetDefaultObjImpl<UHDRuleset_TicketBleed>();
	}
};

// Class HDMain.HDScoreboardBase
// 0x0018 (0x0250 - 0x0238)
class UHDScoreboardBase final  : public UDFBaseMenu
{
public:
	TSubclassOf<class UHDScoreboardListingRowBase> ScoreboardListRowClass;                            // 0x0238(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPanelWidget*                           OpforPlayerList;                                   // 0x0240(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPanelWidget*                           BluforPlayerList;                                  // 0x0248(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	void ReceiveScoreboardListRowAdded(class UHDScoreboardListingRowBase* NewListEntry);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"HDScoreboardBase">();
	}
	static class UHDScoreboardBase* GetDefaultObj()
	{
		return GetDefaultObjImpl<UHDScoreboardBase>();
	}
};

// Class HDMain.HDEmptyServerFilterRule
// 0x0000 (0x0028 - 0x0028)
class UHDEmptyServerFilterRule final  : public UHDServerListFilterRule
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"HDEmptyServerFilterRule">();
	}
	static class UHDEmptyServerFilterRule* GetDefaultObj()
	{
		return GetDefaultObjImpl<UHDEmptyServerFilterRule>();
	}
};

// Class HDMain.HDPasswordProtectedServerFilterRule
// 0x0000 (0x0028 - 0x0028)
class UHDPasswordProtectedServerFilterRule final  : public UHDServerListFilterRule
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"HDPasswordProtectedServerFilterRule">();
	}
	static class UHDPasswordProtectedServerFilterRule* GetDefaultObj()
	{
		return GetDefaultObjImpl<UHDPasswordProtectedServerFilterRule>();
	}
};

// Class HDMain.HDSupportersOnlyServerFilterRule
// 0x0000 (0x0028 - 0x0028)
class UHDSupportersOnlyServerFilterRule final  : public UHDServerListFilterRule
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"HDSupportersOnlyServerFilterRule">();
	}
	static class UHDSupportersOnlyServerFilterRule* GetDefaultObj()
	{
		return GetDefaultObjImpl<UHDSupportersOnlyServerFilterRule>();
	}
};

// Class HDMain.HDContainsAddressServerFilterRule
// 0x0000 (0x0028 - 0x0028)
class UHDContainsAddressServerFilterRule final  : public UHDServerListFilterRule
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"HDContainsAddressServerFilterRule">();
	}
	static class UHDContainsAddressServerFilterRule* GetDefaultObj()
	{
		return GetDefaultObjImpl<UHDContainsAddressServerFilterRule>();
	}
};

// Class HDMain.HDServerListing
// 0x0040 (0x0270 - 0x0230)
class UHDServerListing : public UUserWidget
{
public:
	uint8                                         bTextToUpper : 1;                                  // 0x0230(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected))
	uint8                                         Pad_F67[0x7];                                      // 0x0231(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UHDServerListItemData*                  ServerData;                                        // 0x0238(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTextBlock*                             ServerNameText;                                    // 0x0240(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTextBlock*                             ModNameText;                                       // 0x0248(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTextBlock*                             GameModeText;                                      // 0x0250(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTextBlock*                             MapNameText;                                       // 0x0258(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTextBlock*                             PlayersText;                                       // 0x0260(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTextBlock*                             PingText;                                          // 0x0268(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	void OnServerItemDataSet(bool bIsDesignTime);
	void SetupListing(class UHDServerListItemData* InServerItemData);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"HDServerListing">();
	}
	static class UHDServerListing* GetDefaultObj()
	{
		return GetDefaultObjImpl<UHDServerListing>();
	}
};

// Class HDMain.HDSquadHiddenState
// 0x0010 (0x0230 - 0x0220)
class AHDSquadHiddenState final  : public AInfo
{
public:
	uint8                                         Pad_F68[0x8];                                      // 0x0220(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class AHDSquadState*                          SquadStateOwner;                                   // 0x0228(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"HDSquadHiddenState">();
	}
	static class AHDSquadHiddenState* GetDefaultObj()
	{
		return GetDefaultObjImpl<AHDSquadHiddenState>();
	}
};

// Class HDMain.HDSquadState
// 0x0240 (0x0460 - 0x0220)
class AHDSquadState final  : public ADFReplInfo
{
public:
	uint8                                         Pad_F69[0x8];                                      // 0x0220(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	uint8                                         bInitialized : 1;                                  // 0x0228(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnTemplate, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate))
	uint8                                         Pad_F6A[0x7];                                      // 0x0229(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class AHDSquadHiddenState>        SquadHiddenStateClass;                             // 0x0230(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoClear, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                         ID;                                                // 0x0238(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         TeamId;                                            // 0x023C(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_F6B[0x3];                                      // 0x023D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AHDPlatoonState*                        OwnerPlatoon;                                      // 0x0240(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FText                                   DisplayName;                                       // 0x0248(0x0018)(Edit, BlueprintVisible, Net, DisableEditOnTemplate, Transient, EditConst, RepNotify, NativeAccessSpecifierPrivate)
	class AHDSquadHiddenState*                    SquadHiddenState;                                  // 0x0260(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class AHDPlayerState*                         SquadLeader;                                       // 0x0268(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         bLocked : 1;                                       // 0x0270(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, BlueprintVisible, BlueprintReadOnly, Net, DisableEditOnTemplate, Transient, EditConst, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate))
	uint8                                         BitPad_43 : 2;                                     // 0x0270(0x0001)(Fixing Bit-Field Size Between Bits [ Dumper-7 ])
	uint8                                         bRequiresSquadLeader : 1;                          // 0x0270(0x0001)(BitIndex: 0x03, PropSize: 0x0001 (Edit, BlueprintVisible, BlueprintReadOnly, Config, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate))
	uint8                                         bDisbandSquadOnEmpty : 1;                          // 0x0270(0x0001)(BitIndex: 0x04, PropSize: 0x0001 (Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         Pad_F6C[0x7];                                      // 0x0271(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	FMulticastInlineDelegateProperty_             OnSquadLeaderAssigned;                             // 0x0278(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             OnSquadMemberRegistered;                           // 0x0288(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             OnSquadMemberPreUnregister;                        // 0x0298(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             OnSquadMemberInfoUpdated;                          // 0x02A8(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             OnSquadRenamed;                                    // 0x02B8(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             OnSquadLockToggled;                                // 0x02C8(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FDFGenericObjectContainer              SquadMembers;                                      // 0x02D8(0x0180)(Net, Transient, NativeAccessSpecifierPrivate)
	int32                                         MaxSquadMemberLimit;                               // 0x0458(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	bool AssignSquadLeader(class AHDPlayerState* NewLeaderPS);
	void LockSquad();
	void OnRep_bLocked();
	void OnRep_DisplayName(class FText& PrevDisplayName);
	void OnRep_SquadHiddenState();
	void OnRep_SquadLeader(class AHDPlayerState* PrevSquadLeader);
	void ReceiveInit(struct FHDSquadCreationParams& CreationParams);
	void ReceiveSquadLeaderAssigned(class AHDPlayerState* NewLeaderPS, class AHDPlayerState* PrevLeaderPS);
	void ReceiveSquadLocked();
	void ReceiveSquadMemberPreUnregister(class AHDPlayerState* MemberPS);
	void ReceiveSquadMemberRegistered(class AHDPlayerState* MemberPS);
	void ReceiveSquadRenamed(class FText& NewName, class FText& PrevName);
	void ReceiveSquadUnlocked();
	bool RegisterPlayerSquadMember(class AHDPlayerController* NewMemberPC);
	bool RegisterSquadMember(class AHDPlayerState* NewMemberPS);
	void RemoveFromOwner();
	void RenameSquad(class FText& NewDisplayName);
	void SquadMemberPSEndPlay(class AActor* Actor, enum class EEndPlayReason EndPlayReason);
	void SquadMemberPSSquadUpdated(class AHDPlayerState* MemberPS, struct FHDSquadAssignmentInfo& MemberSQInfo);
	void SquadMemberPSTeamUpdated(class APlayerState* MemberPS, uint8 LastTeamNum, uint8 NewTeamNum);
	void UnlockSquad();
	bool UnregisterPlayerSquadMember(class AHDPlayerController* MemberPCToRemove);
	bool UnregisterSquadMember(class AHDPlayerState* MemberPSToRemove);
	bool UnregisterSquadMemberAt(int32 RemoveIdx);

	bool CanRegisterPlayerSquadMember(class AHDPlayerController* NewMemberPC) const;
	bool CanRegisterSquadMember(class AHDPlayerState* NewMemberPS) const;
	void DumpSquadMemberState() const;
	int32 GetNumSquadMembers(bool bValidMembersOnly) const;
	int32 GetNumSquadMembersBots(bool bValidMembersOnly) const;
	class AHDPlayerState* GetSquadMemberAt(int32 Index, bool bIgnorePendingRemoval) const;
	bool HasReachedMaxSquadMemberLimit() const;
	bool IsPendingRemovalFromSquad(class AHDPlayerState* PS) const;
	bool IsPlayerPendingRemovalFromSquad(class AHDPlayerController* PC) const;
	bool IsPlayerRegisteredSquadMember(class AHDPlayerController* PC, bool bIgnorePendingRemoval) const;
	bool IsRegisteredSquadMember(class AHDPlayerState* PS, bool bIgnorePendingRemoval) const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"HDSquadState">();
	}
	static class AHDSquadState* GetDefaultObj()
	{
		return GetDefaultObjImpl<AHDSquadState>();
	}
};

// Class HDMain.HDTeamDefinition
// 0x0010 (0x0068 - 0x0058)
class UHDTeamDefinition final  : public UDFTeamDefinition
{
public:
	int32                                         StartingTickets;                                   // 0x0058(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_F7E[0x4];                                      // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UDFCommChannelDefinition*               CommChannelDefinition;                             // 0x0060(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"HDTeamDefinition">();
	}
	static class UHDTeamDefinition* GetDefaultObj()
	{
		return GetDefaultObjImpl<UHDTeamDefinition>();
	}
};

// Class HDMain.HDTeamState
// 0x01F8 (0x0448 - 0x0250)
class AHDTeamState final  : public ADFTeamState
{
public:
	FMulticastInlineDelegateProperty_             OnPlatoonAdded;                                    // 0x0250(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             OnPlatoonPreRemove;                                // 0x0260(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FDFGenericObjectContainer              Platoons;                                          // 0x0270(0x0180)(Net, Transient, Protected, NativeAccessSpecifierProtected)
	int32                                         MaxPlatoonLimit;                                   // 0x03F0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_F7F[0x4];                                      // 0x03F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSet<class UHDKit*>                           Kits;                                              // 0x03F8(0x0050)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnTemplate, Transient, EditConst, NativeAccessSpecifierPublic)

public:
	class AHDPlatoonState* AddPlatoon(class UHDPlatoonInfo* PlatoonInfo);
	bool FindPlatoonByDefinition(class UHDPlatoonInfo* PlatoonDef, class AHDPlatoonState** OutFoundPlatoon);
	bool FindPlatoonByName(class FText& PlatoonDisplayName, class AHDPlatoonState** OutFoundPlatoon);
	void ReceivePlatoonAdded(class AHDPlatoonState* Platoon);
	void ReceivePlatoonPreRemove(class AHDPlatoonState* Platoon);
	void RemovePlatoon(class AHDPlatoonState* PlatoonToRemove);
	void RemovePlatoonAt(int32 RemoveIdx);

	void DumpPlatoonState() const;
	int32 GetNumPlatoons(bool bValidPlatoonsOnly) const;
	class AHDPlatoonState* GetPlatoonAt(int32 Index, bool bIgnorePendingRemoval) const;
	enum class EHDTeam GetTeam() const;
	bool HasReachedMaxPlatoonLimit() const;
	bool IsPlatoonPendingRemovalFromTeam(class AHDPlatoonState* Platoon) const;
	bool PlatoonExists(class AHDPlatoonState* Platoon, bool bIgnorePendingRemoval) const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"HDTeamState">();
	}
	static class AHDTeamState* GetDefaultObj()
	{
		return GetDefaultObjImpl<AHDTeamState>();
	}
};

// Class HDMain.HDTextChatInputWidgetBase
// 0x0010 (0x0240 - 0x0230)
class UHDTextChatInputWidgetBase : public UUserWidget
{
public:
	class FName                                   TextCommsFormatName;                               // 0x0230(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UDFCommChannel*                         CurrentTalkChannel;                                // 0x0238(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	void OnChatMessageSubmitted(class UHDTextChatMsgInfo* SubmittedChatMsg);
	void StartTalking(class UDFCommChannel* NewTalkChannel);
	void StartTalkingOnChannel(class UDFCommChannel* TalkChannel);
	void StopTalking(class UDFCommChannel* CurrentChannel);
	void StopTalkingOnCurrentChannel();
	void SubmitChatMessage(class FText ChatMsgText);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"HDTextChatInputWidgetBase">();
	}
	static class UHDTextChatInputWidgetBase* GetDefaultObj()
	{
		return GetDefaultObjImpl<UHDTextChatInputWidgetBase>();
	}
};

// Class HDMain.HDTextChatMsgInfo
// 0x0020 (0x0048 - 0x0028)
class UHDTextChatMsgInfo final  : public UObject
{
public:
	class UDFCommChannel*                         CommChannel;                                       // 0x0028(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class APlayerState*                           SenderPS;                                          // 0x0030(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FString                                 ChatMsgContent;                                    // 0x0038(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"HDTextChatMsgInfo">();
	}
	static class UHDTextChatMsgInfo* GetDefaultObj()
	{
		return GetDefaultObjImpl<UHDTextChatMsgInfo>();
	}
};

// Class HDMain.HDTextChatWidgetBase
// 0x0078 (0x02A8 - 0x0230)
class UHDTextChatWidgetBase : public UUserWidget
{
public:
	uint8                                         Pad_F86[0x38];                                     // 0x0230(0x0038)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   SayAllInputActionName;                             // 0x0268(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                   SayTeamInputActionName;                            // 0x0270(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                   SaySquadInputActionName;                           // 0x0278(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                   SayAllChannelName;                                 // 0x0280(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                         MaxChatMsgsToCache;                                // 0x0288(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                   LastTalkChannelName;                               // 0x028C(0x0008)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_F87[0x4];                                      // 0x0294(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UHDTextChatMsgInfo*>             CurrentChatMsgs;                                   // 0x0298(0x0010)(ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	void DisplayChatMessage(class UHDTextChatMsgInfo* NewChatMsg);
	bool GetCachedChatMsgAt(int32 MsgIndex, class UHDTextChatMsgInfo** OutFoundMsg);
	void SayAllActionPressed();
	void SaySquadActionPressed();
	void SayTeamActionPressed();
	void SetMaxChatMsgsToCache(int32 NumChatMsgsToCache);
	void StartTalking(class UDFCommChannel* TalkChannel);
	void StopTalking();

	int32 GetNumCachedChatMsgs() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"HDTextChatWidgetBase">();
	}
	static class UHDTextChatWidgetBase* GetDefaultObj()
	{
		return GetDefaultObjImpl<UHDTextChatWidgetBase>();
	}
};

// Class HDMain.HDUGCLoadProgressScreen
// 0x0000 (0x0238 - 0x0238)
class UHDUGCLoadProgressScreen : public UDFBaseMenu
{
public:
	void SetupProgressScreen(int32 TotalUGCToLoad);
	void UpdateLoadProgress(int32 NumUGCRemainingToLoad);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"HDUGCLoadProgressScreen">();
	}
	static class UHDUGCLoadProgressScreen* GetDefaultObj()
	{
		return GetDefaultObjImpl<UHDUGCLoadProgressScreen>();
	}
};

// Class HDMain.HDUIStatics
// 0x0000 (0x0028 - 0x0028)
class UHDUIStatics final  : public UBlueprintFunctionLibrary
{
public:
	static class FString GetServerIp(struct FHDServerInfo& InServerInfo);
	static class FString GetServerIpPort(struct FHDServerInfo& InServerInfo);
	static int32 GetServerPort(struct FHDServerInfo& InServerInfo);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"HDUIStatics">();
	}
	static class UHDUIStatics* GetDefaultObj()
	{
		return GetDefaultObjImpl<UHDUIStatics>();
	}
};

// Class HDMain.HDUIUserWidget
// 0x0008 (0x0238 - 0x0230)
class UHDUIUserWidget : public UUserWidget
{
public:
	uint8                                         bListenForPlayerCharacterEvents : 1;               // 0x0230(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected))

public:
	void BPDeinitializeFromOwnerPlayerCharacter(class AHDPlayerCharacter* OwnerPlyChar);
	void BPDeinitializeFromOwnerWeapon(class AHDBaseWeapon* OwnerWeap);
	void BPInitializeForOwnerPlayerCharacter(class AHDPlayerCharacter* OwnerPlyChar);
	void BPInitializeForOwnerWeapon(class AHDBaseWeapon* OwnerWeap);
	void BPOwnerDeath(class APawn* VictimPawn, class AController* VictimController, float KillingDamage, struct FDamageEvent& DamageEvent, class APawn* InstigatingPawn, class AActor* DamageCauser);
	void BPOwnerPossessPawn(class APawn* NewPawn);
	void BPOwnerUnpossessPawn(class APawn* UnpossessedPawn);
	void BPOwnerWeaponChanged(class AHDBaseWeapon* NewWeap, class AHDBaseWeapon* PrevWeap);
	void OwnerDeath(class APawn* VictimPawn, class AController* VictimController, float KillingDamage, struct FDamageEvent& DamageEvent, class APawn* InstigatingPawn, class AActor* DamageCauser);
	void OwnerEquippedItemChanged(class ADFBaseCharacter* Character, class ADFBaseItem* NewEquippedItem, class ADFBaseItem* PrevEquippedItem);
	void OwnerPossessPawn(class APawn* NewPawn);
	void OwnerUnpossessPawn(class APawn* UnpossessedPawn);

	class AHDBaseWeapon* GetOwnerEquippedWeapon() const;
	class AHDPlayerController* GetOwningHDPlayer() const;
	class AHDPlayerCharacter* GetOwningHDPlayerCharacter() const;
	class UDFCharacterMovementComponent* GetOwningHDPlayerCharacterMovement() const;
	class AHDHUD* GetOwningHDPlayerHUD() const;
	class AHUD* GetOwningPlayerHUD() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"HDUIUserWidget">();
	}
	static class UHDUIUserWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UHDUIUserWidget>();
	}
};

// Class HDMain.HDUIUWCaptureStatus
// 0x0030 (0x0268 - 0x0238)
class UHDUIUWCaptureStatus : public UHDUIUserWidget
{
public:
	uint8                                         Pad_F8D[0x30];                                     // 0x0238(0x0030)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void ControlPointSetCaptureProgress(bool bContested, float NewValueNorm, float OldValueNorm, bool bInitial);
	void ControlPointSetGarrisonedPlayerCount(int32 NumFriendlies, int32 NumEnemies, int32 MinNumRequiredForCapture, bool bInitial);
	void ControlPointSetOwnershipState(bool bCaptured, enum class EHDTeam NewOwningTeam, enum class EHDTeam OldOwningTeam, bool bInitial);
	void CPBeginEndOverlap(class AActor* OverlappedControlPointActor, class AActor* OtherActor);
	void CPCaptureProgressUpdate(class AHDBaseCapturePoint* ControlPoint, bool bInCaptureContested, int32 InCaptureProgress);
	void CPOwnershipUpdate(class AHDBaseCapturePoint* ControlPoint, enum class EHDTeam PrevOwningTeam, enum class EHDTeam NewOwningTeam, bool bCaptured);
	void OwnerBeginOverlap(class AActor* OverlappedOwnerChar, class AActor* OtherActor);
	void OwnerEndOverlap(class AActor* OverlappedOwnerChar, class AActor* OtherActor);
	void OwnerNoControlPoint();
	void OwnerTouchingControlPoint(class AHDBaseCapturePoint* OverlappingCP, bool bInitial);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"HDUIUWCaptureStatus">();
	}
	static class UHDUIUWCaptureStatus* GetDefaultObj()
	{
		return GetDefaultObjImpl<UHDUIUWCaptureStatus>();
	}
};

// Class HDMain.HDUIUWHUD
// 0x0000 (0x0238 - 0x0238)
class UHDUIUWHUD : public UHDUIUserWidget
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"HDUIUWHUD">();
	}
	static class UHDUIUWHUD* GetDefaultObj()
	{
		return GetDefaultObjImpl<UHDUIUWHUD>();
	}
};

// Class HDMain.HDUIUWPlayerStatus
// 0x0020 (0x0258 - 0x0238)
class UHDUIUWPlayerStatus : public UHDUIUserWidget
{
public:
	uint8                                         Pad_F91[0x20];                                     // 0x0238(0x0020)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OwnerAimTransitionUpdate(bool bIsAiming);
	void OwnerEndAim();
	void OwnerEndSprint();
	void OwnerHealthUpdate(class ADFBaseCharacter* Character, float NewHealthTotal, float PrevHealthTotal);
	void OwnerSetHealth(float NewValueNorm, float OldValueNorm, bool bInitial);
	void OwnerSetJumpStamina(float NewValueNorm, float OldValueNorm, bool bInitial);
	void OwnerSetSprintStamina(float NewValueNorm, float OldValueNorm, bool bInitial);
	void OwnerSetStance(enum class ECharacterStance NewStance, enum class ECharacterStance OldStance, bool bInitial);
	void OwnerSetStanceState(enum class EHDUICharacterStanceState NewState, enum class EHDUICharacterStanceState OldState, bool bInitial);
	void OwnerSprintTransitionUpdate(bool bIsSprinting);
	void OwnerStartAim();
	void OwnerStartSprint();
	void OwnerUpdateStamina(float SprintValueNorm, float JumpValueNorm, bool bInitial);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"HDUIUWPlayerStatus">();
	}
	static class UHDUIUWPlayerStatus* GetDefaultObj()
	{
		return GetDefaultObjImpl<UHDUIUWPlayerStatus>();
	}
};

// Class HDMain.HDUIUWWeaponStatus
// 0x0028 (0x0260 - 0x0238)
class UHDUIUWWeaponStatus : public UHDUIUserWidget
{
public:
	class AHDBaseWeapon*                          OwnerEquippedWeapon;                               // 0x0238(0x0008)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_F92[0x8];                                      // 0x0240(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHDUIWeaponAmmoState                   WeapAmmoState;                                     // 0x0248(0x0018)(Transient, NoDestructor, NativeAccessSpecifierPrivate)

public:
	void BPOwnerWeaponAmmoUpdated(struct FHDUIWeaponAmmoState& AmmoState, bool bFromReload, bool bTotalFreeAmmoUpdated, bool bNumFreeAmmoClipsUpdated);
	void BPOwnerWeaponSetFireMode(enum class EFireMode NewFireMode, enum class EFireMode PreviousFireMode, bool bFromPlayerInput);
	void OwnerAimStyleChanged(class AHDPlayerCharacter* Character, enum class EHDWeaponAimStyle NewAimStyle, enum class EHDWeaponAimStyle PrevAimStyle, bool bFromPlayerInput);
	void OwnerSetAimStyle(enum class EHDWeaponAimStyle NewAimStyle, enum class EHDWeaponAimStyle PrevAimStyle, bool bFromPlayerInput);
	void OwnerWeaponFireModeChanged(class ADFBaseGun* Gun, enum class EFireMode NewFireMode, enum class EFireMode PrevFireMode, bool bFromPlayerInput);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"HDUIUWWeaponStatus">();
	}
	static class UHDUIUWWeaponStatus* GetDefaultObj()
	{
		return GetDefaultObjImpl<UHDUIUWWeaponStatus>();
	}
};

// Class HDMain.HDVehiclePlayerSeatComponent
// 0x0000 (0x0198 - 0x0198)
class UHDVehiclePlayerSeatComponent : public UArcVehiclePlayerSeatComponent
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"HDVehiclePlayerSeatComponent">();
	}
	static class UHDVehiclePlayerSeatComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UHDVehiclePlayerSeatComponent>();
	}
};

// Class HDMain.HDVoiceChatMsgInfo
// 0x0018 (0x0040 - 0x0028)
class UHDVoiceChatMsgInfo final  : public UObject
{
public:
	class UDFCommChannel*                         CommChannel;                                       // 0x0028(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class APlayerState*                           TalkerPS;                                          // 0x0030(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         bTalking : 1;                                      // 0x0038(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnTemplate, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate))

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"HDVoiceChatMsgInfo">();
	}
	static class UHDVoiceChatMsgInfo* GetDefaultObj()
	{
		return GetDefaultObjImpl<UHDVoiceChatMsgInfo>();
	}
};

// Class HDMain.HDVoipIndicatorListingWidgetBase
// 0x0008 (0x0238 - 0x0230)
class UHDVoipIndicatorListingWidgetBase : public UUserWidget
{
public:
	class UHDVoiceChatMsgInfo*                    VoiceMsgInfo;                                      // 0x0230(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	void OnVoiceMsgInfoSet(bool bIsDesignTime);
	void SetupVoiceListing(class UHDVoiceChatMsgInfo* InVoiceMsgInfo);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"HDVoipIndicatorListingWidgetBase">();
	}
	static class UHDVoipIndicatorListingWidgetBase* GetDefaultObj()
	{
		return GetDefaultObjImpl<UHDVoipIndicatorListingWidgetBase>();
	}
};

// Class HDMain.HDVoipIndicatorWidgetBase
// 0x0050 (0x0280 - 0x0230)
class UHDVoipIndicatorWidgetBase : public UUserWidget
{
public:
	TMap<struct FUniqueNetIdVoipWrapper, class UHDVoiceChatMsgInfo*> ActiveTalkerMap;                                   // 0x0230(0x0050)(Transient, NativeAccessSpecifierPrivate)

public:
	void OnOwningPlayerStartTalking(class UHDVoiceChatMsgInfo* LocalTalkerMsgInfo);
	void OnOwningPlayerStopTalking(class UHDVoiceChatMsgInfo* LocalTalkerMsgInfo);
	void OnPlayerStartTalking(class UHDVoiceChatMsgInfo* TalkerMsgInfo);
	void OnPlayerStopTalking(class UHDVoiceChatMsgInfo* TalkerMsgInfo);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"HDVoipIndicatorWidgetBase">();
	}
	static class UHDVoipIndicatorWidgetBase* GetDefaultObj()
	{
		return GetDefaultObjImpl<UHDVoipIndicatorWidgetBase>();
	}
};

// Class HDMain.HDWeaponAnimInstance
// 0x0000 (0x0280 - 0x0280)
class UHDWeaponAnimInstance final  : public UDFWeaponAnimInstance
{
public:
	class AHDBaseWeapon*                          HDWeaponOwner;                                     // 0x0278(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"HDWeaponAnimInstance">();
	}
	static class UHDWeaponAnimInstance* GetDefaultObj()
	{
		return GetDefaultObjImpl<UHDWeaponAnimInstance>();
	}
};

// Class HDMain.HDWeaponScopeComponent
// 0x0000 (0x01F0 - 0x01F0)
class UHDWeaponScopeComponent : public USceneComponent
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"HDWeaponScopeComponent">();
	}
	static class UHDWeaponScopeComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UHDWeaponScopeComponent>();
	}
};

// Class HDMain.HDWorldSettings
// 0x0010 (0x0528 - 0x0518)
class AHDWorldSettings final  : public ATBWorldSettings
{
public:
	class UHDTeamDefinition*                      BluforTeamDefinition;                              // 0x0518(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, InstancedReference, NoClear, IsPlainOldData, NoDestructor, Protected, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UHDTeamDefinition*                      OpforTeamDefinition;                               // 0x0520(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, InstancedReference, NoClear, IsPlainOldData, NoDestructor, Protected, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"HDWorldSettings">();
	}
	static class AHDWorldSettings* GetDefaultObj()
	{
		return GetDefaultObjImpl<AHDWorldSettings>();
	}
};

// Class HDMain.PlatoonListEntry
// 0x0028 (0x0050 - 0x0028)
class UPlatoonListEntry final  : public UObject
{
public:
	uint8                                         TeamId;                                            // 0x0028(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	enum class EHDTeam                            Team;                                              // 0x0029(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_F95[0x6];                                      // 0x002A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AHDTeamState*                           TeamState;                                         // 0x0030(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                         ID;                                                // 0x0038(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_F96[0x4];                                      // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UHDPlatoonInfo*                         Info;                                              // 0x0040(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class AHDPlatoonState*                        PlatoonState;                                      // 0x0048(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PlatoonListEntry">();
	}
	static class UPlatoonListEntry* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPlatoonListEntry>();
	}
};

// Class HDMain.SquadListEntry
// 0x0028 (0x0050 - 0x0028)
class USquadListEntry final  : public UObject
{
public:
	uint8                                         TeamId;                                            // 0x0028(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	enum class EHDTeam                            Team;                                              // 0x0029(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_F97[0x6];                                      // 0x002A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AHDTeamState*                           TeamState;                                         // 0x0030(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UPlatoonListEntry*                      ParentPlatoonData;                                 // 0x0038(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                         ID;                                                // 0x0040(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_F98[0x4];                                      // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AHDSquadState*                          SquadState;                                        // 0x0048(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	class AHDPlatoonState* GetParentPlatoonState() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"SquadListEntry">();
	}
	static class USquadListEntry* GetDefaultObj()
	{
		return GetDefaultObjImpl<USquadListEntry>();
	}
};

// Class HDMain.SquadMemberInfo
// 0x0028 (0x0050 - 0x0028)
class USquadMemberInfo final  : public UObject
{
public:
	uint8                                         TeamId;                                            // 0x0028(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	enum class EHDTeam                            Team;                                              // 0x0029(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_F99[0x6];                                      // 0x002A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AHDTeamState*                           TeamState;                                         // 0x0030(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UPlatoonListEntry*                      ParentPlatoonData;                                 // 0x0038(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class USquadListEntry*                        ParentSquadData;                                   // 0x0040(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class AHDPlayerState*                         PlayerState;                                       // 0x0048(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	class AHDPlatoonState* GetParentPlatoonState() const;
	class AHDSquadState* GetParentSquadState() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"SquadMemberInfo">();
	}
	static class USquadMemberInfo* GetDefaultObj()
	{
		return GetDefaultObjImpl<USquadMemberInfo>();
	}
};

// Class HDMain.VictoryMenu
// 0x0018 (0x0250 - 0x0238)
class UVictoryMenu : public UDFBaseMenu
{
public:
	struct FHDGameRoundEndEventDetails            RoundDetails;                                      // 0x0238(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	uint8                                         bWinner : 1;                                       // 0x0248(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (BlueprintVisible, BlueprintReadOnly, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected))

public:
	void Init(struct FHDGameRoundEndEventDetails& InRoundDetails, bool bInWinner);
	void OnVictoryInit();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"VictoryMenu">();
	}
	static class UVictoryMenu* GetDefaultObj()
	{
		return GetDefaultObjImpl<UVictoryMenu>();
	}
};

}

