#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_HDVehicleBase

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "ArcVehicles_structs.hpp"
#include "ArcVehicles_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_HDVehicleBase.BP_HDVehicleBase_C
// 0x00C0 (0x0388 - 0x02C8)
class ABP_HDVehicleBase_C final  : public AArcBaseVehicle
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02C8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UAudioComponent*                        EngineSound;                                       // 0x02D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 Mesh;                                              // 0x02D8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UWheeledVehicleMovementComponentNW*     VehicleMovementOWI;                                // 0x02E0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TMap<class FName, class UAnimSequenceBase*>   DriverAnimSet;                                     // 0x02E8(0x0050)(Edit, BlueprintVisible, BlueprintReadOnly)
	TMap<class FName, class UAnimSequenceBase*>   PassengerAnimSet;                                  // 0x0338(0x0050)(Edit, BlueprintVisible, BlueprintReadOnly)

public:
	void ExecuteUbergraph_BP_HDVehicleBase(int32 EntryPoint, const struct FKey& K2Node_InputActionEvent_Key, float K2Node_InputAxisEvent_AxisValue_1, float K2Node_InputAxisEvent_AxisValue, const struct FKey& K2Node_InputActionEvent_Key_2, class AActor* K2Node_Event_Invoker, const struct FKey& Temp_struct_Variable, class ABP_HDPlayerCharacterBase_C* K2Node_DynamicCast_AsBP_HDPlayer_Character_Base, bool K2Node_DynamicCast_bSuccess, class AController* CallFunc_GetController_ReturnValue, class ABP_HDPlayerControllerBase_C* K2Node_DynamicCast_AsBP_HDPlayer_Controller_Base, bool K2Node_DynamicCast_bSuccess_1, const struct FKey& K2Node_InputActionEvent_Key_1, bool CallFunc_HasAuthority_ReturnValue, class APlayerState* K2Node_Event_Player, class UArcVehicleSeatConfig* K2Node_Event_ToSeat, class UArcVehicleSeatConfig* K2Node_Event_FromSeat, enum class EArcVehicleSeatChangeType K2Node_Event_SeatChangeEvent, bool K2Node_SwitchEnum_CmpSuccess, class UArcVehicleSeatConfig* CallFunc_GetDriverSeat_ReturnValue, bool CallFunc_EqualEqual_ObjectObject_ReturnValue, float K2Node_Event_DeltaSeconds, float CallFunc_GetEngineRotationSpeed_ReturnValue);
	void ReceiveTick(float DeltaSeconds);
	void NotifyPlayerSeatChangeEvent(class APlayerState* Player, class UArcVehicleSeatConfig* ToSeat, class UArcVehicleSeatConfig* FromSeat, enum class EArcVehicleSeatChangeType SeatChangeEvent);
	void Used(class AActor* Invoker);
	void InpAxisEvt_MoveRight_K2Node_InputAxisEvent_1(float AxisValue);
	void InpAxisEvt_MoveForward_K2Node_InputAxisEvent_0(float AxisValue);
	void InpActEvt_Use_K2Node_InputActionEvent_0(const struct FKey& Key);
	void InpActEvt_Jump_K2Node_InputActionEvent_1(const struct FKey& Key);
	void InpActEvt_Jump_K2Node_InputActionEvent_2(const struct FKey& Key);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"BP_HDVehicleBase_C">();
	}
	static class ABP_HDVehicleBase_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_HDVehicleBase_C>();
	}
};

}

