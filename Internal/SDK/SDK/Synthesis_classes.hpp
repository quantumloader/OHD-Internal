#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Synthesis

#include "Basic.hpp"

#include "Synthesis_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "CoreUObject_classes.hpp"
#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "AudioMixer_classes.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// Class Synthesis.EnvelopeFollowerListener
// 0x0020 (0x00D0 - 0x00B0)
class UEnvelopeFollowerListener final  : public UActorComponent
{
public:
	FMulticastInlineDelegateProperty_             OnEnvelopeFollowerUpdate;                          // 0x00B0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_127C[0x10];                                    // 0x00C0(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"EnvelopeFollowerListener">();
	}
	static class UEnvelopeFollowerListener* GetDefaultObj()
	{
		return GetDefaultObjImpl<UEnvelopeFollowerListener>();
	}
};

// Class Synthesis.ModularSynthPresetBank
// 0x0010 (0x0038 - 0x0028)
class UModularSynthPresetBank final  : public UObject
{
public:
	TArray<struct FModularSynthPresetBankEntry>   Presets;                                           // 0x0028(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ModularSynthPresetBank">();
	}
	static class UModularSynthPresetBank* GetDefaultObj()
	{
		return GetDefaultObjImpl<UModularSynthPresetBank>();
	}
};

// Class Synthesis.SourceEffectEnvelopeFollowerPreset
// 0x0040 (0x0080 - 0x0040)
class USourceEffectEnvelopeFollowerPreset final  : public USoundEffectSourcePreset
{
public:
	uint8                                         Pad_127D[0x34];                                    // 0x0040(0x0034)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSourceEffectEnvelopeFollowerSettings  Settings;                                          // 0x0074(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)

public:
	void RegisterEnvelopeFollowerListener(class UEnvelopeFollowerListener* EnvelopeFollowerListener);
	void SetSettings(struct FSourceEffectEnvelopeFollowerSettings& InSettings);
	void UnregisterEnvelopeFollowerListener(class UEnvelopeFollowerListener* EnvelopeFollowerListener);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"SourceEffectEnvelopeFollowerPreset">();
	}
	static class USourceEffectEnvelopeFollowerPreset* GetDefaultObj()
	{
		return GetDefaultObjImpl<USourceEffectEnvelopeFollowerPreset>();
	}
};

// Class Synthesis.ModularSynthLibrary
// 0x0000 (0x0028 - 0x0028)
class UModularSynthLibrary final  : public UBlueprintFunctionLibrary
{
public:
	static void AddModularSynthPresetToBankAsset(class UModularSynthPresetBank* InBank, struct FModularSynthPreset& Preset, const class FString& PresetName);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ModularSynthLibrary">();
	}
	static class UModularSynthLibrary* GetDefaultObj()
	{
		return GetDefaultObjImpl<UModularSynthLibrary>();
	}
};

// Class Synthesis.ModularSynthComponent
// 0x06A0 (0x0D70 - 0x06D0)
class UModularSynthComponent final  : public USynthComponent
{
public:
	int32                                         VoiceCount;                                        // 0x06D0(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_127E[0x69C];                                   // 0x06D4(0x069C)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	struct FPatchId CreatePatch(enum class ESynth1PatchSource PatchSource, TArray<struct FSynth1PatchCable>& PatchCables, bool bEnableByDefault);
	void NoteOff(float Note, bool bAllNotesOff, bool bKillAllNotes);
	void NoteOn(float Note, int32 Velocity, float Duration);
	void SetAttackTime(float AttackTimeMsec);
	void SetChorusDepth(float Depth);
	void SetChorusEnabled(bool EnableChorus);
	void SetChorusFeedback(float Feedback);
	void SetChorusFrequency(float Frequency);
	void SetDecayTime(float DecayTimeMsec);
	void SetEnableLegato(bool LegatoEnabled);
	bool SetEnablePatch(struct FPatchId& PatchId, bool bIsEnabled);
	void SetEnablePolyphony(bool bEnablePolyphony);
	void SetEnableRetrigger(bool RetriggerEnabled);
	void SetEnableUnison(bool EnableUnison);
	void SetFilterAlgorithm(enum class ESynthFilterAlgorithm FilterAlgorithm);
	void SetFilterFrequency(float FilterFrequencyHz);
	void SetFilterFrequencyMod(float FilterFrequencyHz);
	void SetFilterQ(float FilterQ);
	void SetFilterQMod(float FilterQ);
	void SetFilterType(enum class ESynthFilterType FilterType);
	void SetGainDb(float GainDb);
	void SetLFOFrequency(int32 LFOIndex, float FrequencyHz);
	void SetLFOFrequencyMod(int32 LFOIndex, float FrequencyModHz);
	void SetLFOGain(int32 LFOIndex, float Gain);
	void SetLFOGainMod(int32 LFOIndex, float GainMod);
	void SetLFOMode(int32 LFOIndex, enum class ESynthLFOMode LFOMode);
	void SetLFOPatch(int32 LFOIndex, enum class ESynthLFOPatchType LFOPatchType);
	void SetLFOType(int32 LFOIndex, enum class ESynthLFOType LFOType);
	void SetModEnvAttackTime(float AttackTimeMsec);
	void SetModEnvBiasInvert(bool bInvert);
	void SetModEnvBiasPatch(enum class ESynthModEnvBiasPatch InPatchType);
	void SetModEnvDecayTime(float DecayTimeMsec);
	void SetModEnvDepth(float Depth);
	void SetModEnvInvert(bool bInvert);
	void SetModEnvPatch(enum class ESynthModEnvPatch InPatchType);
	void SetModEnvReleaseTime(float Release);
	void SetModEnvSustainGain(float SustainGain);
	void SetOscCents(int32 OscIndex, float Cents);
	void SetOscFrequencyMod(int32 OscIndex, float OscFreqMod);
	void SetOscGain(int32 OscIndex, float OscGain);
	void SetOscGainMod(int32 OscIndex, float OscGainMod);
	void SetOscOctave(int32 OscIndex, float Octave);
	void SetOscPulsewidth(int32 OscIndex, float Pulsewidth);
	void SetOscSemitones(int32 OscIndex, float Semitones);
	void SetOscSync(bool bIsSynced);
	void SetOscType(int32 OscIndex, enum class ESynth1OscType OscType);
	void SetPan(float Pan);
	void SetPitchBend(float PitchBend);
	void SetPortamento(float Portamento);
	void SetReleaseTime(float ReleaseTimeMsec);
	void SetSpread(float Spread);
	void SetStereoDelayFeedback(float DelayFeedback);
	void SetStereoDelayIsEnabled(bool StereoDelayEnabled);
	void SetStereoDelayMode(enum class ESynthStereoDelayMode StereoDelayMode);
	void SetStereoDelayRatio(float DelayRatio);
	void SetStereoDelayTime(float DelayTimeMsec);
	void SetStereoDelayWetlevel(float DelayWetlevel);
	void SetSustainGain(float SustainGain);
	void SetSynthPreset(struct FModularSynthPreset& SynthPreset);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ModularSynthComponent">();
	}
	static class UModularSynthComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UModularSynthComponent>();
	}
};

// Class Synthesis.SourceEffectBitCrusherPreset
// 0x0038 (0x0078 - 0x0040)
class USourceEffectBitCrusherPreset final  : public USoundEffectSourcePreset
{
public:
	uint8                                         Pad_1287[0x30];                                    // 0x0040(0x0030)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSourceEffectBitCrusherSettings        Settings;                                          // 0x0070(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)

public:
	void SetSettings(struct FSourceEffectBitCrusherSettings& InSettings);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"SourceEffectBitCrusherPreset">();
	}
	static class USourceEffectBitCrusherPreset* GetDefaultObj()
	{
		return GetDefaultObjImpl<USourceEffectBitCrusherPreset>();
	}
};

// Class Synthesis.SourceEffectChorusPreset
// 0x0058 (0x0098 - 0x0040)
class USourceEffectChorusPreset final  : public USoundEffectSourcePreset
{
public:
	uint8                                         Pad_1288[0x40];                                    // 0x0040(0x0040)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSourceEffectChorusSettings            Settings;                                          // 0x0080(0x0018)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)

public:
	void SetSettings(struct FSourceEffectChorusSettings& InSettings);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"SourceEffectChorusPreset">();
	}
	static class USourceEffectChorusPreset* GetDefaultObj()
	{
		return GetDefaultObjImpl<USourceEffectChorusPreset>();
	}
};

// Class Synthesis.SourceEffectDynamicsProcessorPreset
// 0x0078 (0x00B8 - 0x0040)
class USourceEffectDynamicsProcessorPreset final  : public USoundEffectSourcePreset
{
public:
	uint8                                         Pad_1289[0x50];                                    // 0x0040(0x0050)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSourceEffectDynamicsProcessorSettings Settings;                                          // 0x0090(0x0028)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)

public:
	void SetSettings(struct FSourceEffectDynamicsProcessorSettings& InSettings);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"SourceEffectDynamicsProcessorPreset">();
	}
	static class USourceEffectDynamicsProcessorPreset* GetDefaultObj()
	{
		return GetDefaultObjImpl<USourceEffectDynamicsProcessorPreset>();
	}
};

// Class Synthesis.SourceEffectEQPreset
// 0x0048 (0x0088 - 0x0040)
class USourceEffectEQPreset final  : public USoundEffectSourcePreset
{
public:
	uint8                                         Pad_128A[0x38];                                    // 0x0040(0x0038)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSourceEffectEQSettings                Settings;                                          // 0x0078(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)

public:
	void SetSettings(struct FSourceEffectEQSettings& InSettings);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"SourceEffectEQPreset">();
	}
	static class USourceEffectEQPreset* GetDefaultObj()
	{
		return GetDefaultObjImpl<USourceEffectEQPreset>();
	}
};

// Class Synthesis.SourceEffectFilterPreset
// 0x0040 (0x0080 - 0x0040)
class USourceEffectFilterPreset final  : public USoundEffectSourcePreset
{
public:
	uint8                                         Pad_128B[0x34];                                    // 0x0040(0x0034)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSourceEffectFilterSettings            Settings;                                          // 0x0074(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)

public:
	void SetSettings(struct FSourceEffectFilterSettings& InSettings);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"SourceEffectFilterPreset">();
	}
	static class USourceEffectFilterPreset* GetDefaultObj()
	{
		return GetDefaultObjImpl<USourceEffectFilterPreset>();
	}
};

// Class Synthesis.SourceEffectFoldbackDistortionPreset
// 0x0040 (0x0080 - 0x0040)
class USourceEffectFoldbackDistortionPreset final  : public USoundEffectSourcePreset
{
public:
	uint8                                         Pad_128C[0x34];                                    // 0x0040(0x0034)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSourceEffectFoldbackDistortionSettings Settings;                                          // 0x0074(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)

public:
	void SetSettings(struct FSourceEffectFoldbackDistortionSettings& InSettings);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"SourceEffectFoldbackDistortionPreset">();
	}
	static class USourceEffectFoldbackDistortionPreset* GetDefaultObj()
	{
		return GetDefaultObjImpl<USourceEffectFoldbackDistortionPreset>();
	}
};

// Class Synthesis.SourceEffectMidSideSpreaderPreset
// 0x0040 (0x0080 - 0x0040)
class USourceEffectMidSideSpreaderPreset final  : public USoundEffectSourcePreset
{
public:
	uint8                                         Pad_128D[0x34];                                    // 0x0040(0x0034)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSourceEffectMidSideSpreaderSettings   Settings;                                          // 0x0074(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)

public:
	void SetSettings(struct FSourceEffectMidSideSpreaderSettings& InSettings);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"SourceEffectMidSideSpreaderPreset">();
	}
	static class USourceEffectMidSideSpreaderPreset* GetDefaultObj()
	{
		return GetDefaultObjImpl<USourceEffectMidSideSpreaderPreset>();
	}
};

// Class Synthesis.SourceEffectPannerPreset
// 0x0038 (0x0078 - 0x0040)
class USourceEffectPannerPreset final  : public USoundEffectSourcePreset
{
public:
	uint8                                         Pad_128E[0x30];                                    // 0x0040(0x0030)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSourceEffectPannerSettings            Settings;                                          // 0x0070(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)

public:
	void SetSettings(struct FSourceEffectPannerSettings& InSettings);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"SourceEffectPannerPreset">();
	}
	static class USourceEffectPannerPreset* GetDefaultObj()
	{
		return GetDefaultObjImpl<USourceEffectPannerPreset>();
	}
};

// Class Synthesis.SourceEffectPhaserPreset
// 0x0048 (0x0088 - 0x0040)
class USourceEffectPhaserPreset final  : public USoundEffectSourcePreset
{
public:
	uint8                                         Pad_128F[0x38];                                    // 0x0040(0x0038)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSourceEffectPhaserSettings            Settings;                                          // 0x0078(0x0010)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)

public:
	void SetSettings(struct FSourceEffectPhaserSettings& InSettings);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"SourceEffectPhaserPreset">();
	}
	static class USourceEffectPhaserPreset* GetDefaultObj()
	{
		return GetDefaultObjImpl<USourceEffectPhaserPreset>();
	}
};

// Class Synthesis.SourceEffectRingModulationPreset
// 0x0050 (0x0090 - 0x0040)
class USourceEffectRingModulationPreset final  : public USoundEffectSourcePreset
{
public:
	uint8                                         Pad_1290[0x3C];                                    // 0x0040(0x003C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSourceEffectRingModulationSettings    Settings;                                          // 0x007C(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)

public:
	void SetSettings(struct FSourceEffectRingModulationSettings& InSettings);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"SourceEffectRingModulationPreset">();
	}
	static class USourceEffectRingModulationPreset* GetDefaultObj()
	{
		return GetDefaultObjImpl<USourceEffectRingModulationPreset>();
	}
};

// Class Synthesis.SourceEffectSimpleDelayPreset
// 0x0058 (0x0098 - 0x0040)
class USourceEffectSimpleDelayPreset final  : public USoundEffectSourcePreset
{
public:
	uint8                                         Pad_1291[0x40];                                    // 0x0040(0x0040)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSourceEffectSimpleDelaySettings       Settings;                                          // 0x0080(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)

public:
	void SetSettings(struct FSourceEffectSimpleDelaySettings& InSettings);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"SourceEffectSimpleDelayPreset">();
	}
	static class USourceEffectSimpleDelayPreset* GetDefaultObj()
	{
		return GetDefaultObjImpl<USourceEffectSimpleDelayPreset>();
	}
};

// Class Synthesis.SourceEffectStereoDelayPreset
// 0x0050 (0x0090 - 0x0040)
class USourceEffectStereoDelayPreset final  : public USoundEffectSourcePreset
{
public:
	uint8                                         Pad_1292[0x3C];                                    // 0x0040(0x003C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSourceEffectStereoDelaySettings       Settings;                                          // 0x007C(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)

public:
	void SetSettings(struct FSourceEffectStereoDelaySettings& InSettings);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"SourceEffectStereoDelayPreset">();
	}
	static class USourceEffectStereoDelayPreset* GetDefaultObj()
	{
		return GetDefaultObjImpl<USourceEffectStereoDelayPreset>();
	}
};

// Class Synthesis.SourceEffectWaveShaperPreset
// 0x0038 (0x0078 - 0x0040)
class USourceEffectWaveShaperPreset final  : public USoundEffectSourcePreset
{
public:
	uint8                                         Pad_1293[0x30];                                    // 0x0040(0x0030)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSourceEffectWaveShaperSettings        Settings;                                          // 0x0070(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)

public:
	void SetSettings(struct FSourceEffectWaveShaperSettings& InSettings);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"SourceEffectWaveShaperPreset">();
	}
	static class USourceEffectWaveShaperPreset* GetDefaultObj()
	{
		return GetDefaultObjImpl<USourceEffectWaveShaperPreset>();
	}
};

// Class Synthesis.AudioImpulseResponse
// 0x0030 (0x0058 - 0x0028)
class UAudioImpulseResponse final  : public UObject
{
public:
	TArray<float>                                 ImpulseResponse;                                   // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         NumChannels;                                       // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         SampleRate;                                        // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         NormalizationVolumeDb;                             // 0x0040(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1294[0x4];                                     // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<float>                                 IRData;                                            // 0x0048(0x0010)(ZeroConstructor, Deprecated, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"AudioImpulseResponse">();
	}
	static class UAudioImpulseResponse* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAudioImpulseResponse>();
	}
};

// Class Synthesis.SubmixEffectConvolutionReverbPreset
// 0x0078 (0x00B8 - 0x0040)
class USubmixEffectConvolutionReverbPreset final  : public USoundEffectSubmixPreset
{
public:
	struct FSubmixEffectConvolutionReverbSettings Settings;                                          // 0x0040(0x0020)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	class UAudioImpulseResponse*                  ImpulseResponse;                                   // 0x0060(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ESubmixEffectConvolutionReverbBlockSize BlockSize;                                         // 0x0068(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bEnableHardwareAcceleration;                       // 0x0069(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1295[0x4E];                                    // 0x006A(0x004E)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void SetImpulseResponse(class UAudioImpulseResponse* InImpulseResponse);
	void SetSettings(struct FSubmixEffectConvolutionReverbSettings& InSettings);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"SubmixEffectConvolutionReverbPreset">();
	}
	static class USubmixEffectConvolutionReverbPreset* GetDefaultObj()
	{
		return GetDefaultObjImpl<USubmixEffectConvolutionReverbPreset>();
	}
};

// Class Synthesis.SubmixEffectDelayPreset
// 0x0050 (0x0090 - 0x0040)
class USubmixEffectDelayPreset final  : public USoundEffectSubmixPreset
{
public:
	uint8                                         Pad_1296[0x34];                                    // 0x0040(0x0034)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSubmixEffectDelaySettings             Settings;                                          // 0x0074(0x0010)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	struct FSubmixEffectDelaySettings             DynamicSettings;                                   // 0x0080(0x0010)(Transient, NoDestructor, NativeAccessSpecifierPublic)

public:
	float GetMaxDelayInMilliseconds();
	void SetDelay(float Length);
	void SetInterpolationTime(float Time);
	void SetSettings(struct FSubmixEffectDelaySettings& InSettings);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"SubmixEffectDelayPreset">();
	}
	static class USubmixEffectDelayPreset* GetDefaultObj()
	{
		return GetDefaultObjImpl<USubmixEffectDelayPreset>();
	}
};

// Class Synthesis.SubmixEffectFilterPreset
// 0x0040 (0x0080 - 0x0040)
class USubmixEffectFilterPreset final  : public USoundEffectSubmixPreset
{
public:
	uint8                                         Pad_1297[0x34];                                    // 0x0040(0x0034)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSubmixEffectFilterSettings            Settings;                                          // 0x0074(0x0010)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)

public:
	void SetFilterAlgorithm(enum class ESubmixFilterAlgorithm InAlgorithm);
	void SetFilterCutoffFrequency(float InFrequency);
	void SetFilterCutoffFrequencyMod(float InFrequency);
	void SetFilterQ(float InQ);
	void SetFilterQMod(float InQ);
	void SetFilterType(enum class ESubmixFilterType InType);
	void SetSettings(struct FSubmixEffectFilterSettings& InSettings);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"SubmixEffectFilterPreset">();
	}
	static class USubmixEffectFilterPreset* GetDefaultObj()
	{
		return GetDefaultObjImpl<USubmixEffectFilterPreset>();
	}
};

// Class Synthesis.SubmixEffectFlexiverbPreset
// 0x0048 (0x0088 - 0x0040)
class USubmixEffectFlexiverbPreset final  : public USoundEffectSubmixPreset
{
public:
	uint8                                         Pad_1298[0x38];                                    // 0x0040(0x0038)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSubmixEffectFlexiverbSettings         Settings;                                          // 0x0078(0x0010)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)

public:
	void SetSettings(struct FSubmixEffectFlexiverbSettings& InSettings);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"SubmixEffectFlexiverbPreset">();
	}
	static class USubmixEffectFlexiverbPreset* GetDefaultObj()
	{
		return GetDefaultObjImpl<USubmixEffectFlexiverbPreset>();
	}
};

// Class Synthesis.SubmixEffectTapDelayPreset
// 0x0070 (0x00B0 - 0x0040)
class USubmixEffectTapDelayPreset final  : public USoundEffectSubmixPreset
{
public:
	uint8                                         Pad_1299[0x40];                                    // 0x0040(0x0040)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSubmixEffectTapDelaySettings          Settings;                                          // 0x0080(0x0018)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	uint8                                         Pad_129A[0x18];                                    // 0x0098(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void AddTap(int32* TapId);
	float GetMaxDelayInMilliseconds();
	void GetTap(int32 TapId, struct FTapDelayInfo* TapInfo);
	void GetTapIds(TArray<int32>* TapIds);
	void RemoveTap(int32 TapId);
	void SetInterpolationTime(float Time);
	void SetSettings(struct FSubmixEffectTapDelaySettings& InSettings);
	void SetTap(int32 TapId, struct FTapDelayInfo& TapInfo);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"SubmixEffectTapDelayPreset">();
	}
	static class USubmixEffectTapDelayPreset* GetDefaultObj()
	{
		return GetDefaultObjImpl<USubmixEffectTapDelayPreset>();
	}
};

// Class Synthesis.Synth2DSlider
// 0x0370 (0x0478 - 0x0108)
class USynth2DSlider final  : public UWidget
{
public:
	float                                         ValueX;                                            // 0x0108(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ValueY;                                            // 0x010C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FDelegateProperty_                            ValueXDelegate;                                    // 0x0110(0x0010)(ZeroConstructor, InstancedReference, NoDestructor, NativeAccessSpecifierPublic)
	FDelegateProperty_                            ValueYDelegate;                                    // 0x0120(0x0010)(ZeroConstructor, InstancedReference, NoDestructor, NativeAccessSpecifierPublic)
	struct FSynth2DSliderStyle                    WidgetStyle;                                       // 0x0130(0x02B8)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FLinearColor                           SliderHandleColor;                                 // 0x03E8(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          IndentHandle;                                      // 0x03F8(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Locked;                                            // 0x03F9(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_129B[0x2];                                     // 0x03FA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         StepSize;                                          // 0x03FC(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          IsFocusable;                                       // 0x0400(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_129C[0x7];                                     // 0x0401(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	FMulticastInlineDelegateProperty_             OnMouseCaptureBegin;                               // 0x0408(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             OnMouseCaptureEnd;                                 // 0x0418(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             OnControllerCaptureBegin;                          // 0x0428(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             OnControllerCaptureEnd;                            // 0x0438(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             OnValueChangedX;                                   // 0x0448(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             OnValueChangedY;                                   // 0x0458(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_129D[0x10];                                    // 0x0468(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void SetIndentHandle(bool InValue);
	void SetLocked(bool InValue);
	void SetSliderHandleColor(const struct FLinearColor& InValue);
	void SetStepSize(float InValue);
	void SetValue(const struct FVector2D& InValue);

	struct FVector2D GetValue() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"Synth2DSlider">();
	}
	static class USynth2DSlider* GetDefaultObj()
	{
		return GetDefaultObjImpl<USynth2DSlider>();
	}
};

// Class Synthesis.GranularSynth
// 0x03C0 (0x0A90 - 0x06D0)
class UGranularSynth final  : public USynthComponent
{
public:
	class USoundWave*                             GranulatedSoundWave;                               // 0x06D0(0x0008)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_129E[0x3B8];                                   // 0x06D8(0x03B8)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void NoteOff(float Note, bool bKill);
	void NoteOn(float Note, int32 Velocity, float Duration);
	void SetAttackTime(float AttackTimeMsec);
	void SetDecayTime(float DecayTimeMsec);
	void SetGrainDuration(float BaseDurationMsec, struct FVector2D& DurationRange);
	void SetGrainEnvelopeType(enum class EGranularSynthEnvelopeType EnvelopeType);
	void SetGrainPan(float BasePan, struct FVector2D& PanRange);
	void SetGrainPitch(float BasePitch, struct FVector2D& PitchRange);
	void SetGrainProbability(float InGrainProbability);
	void SetGrainsPerSecond(float InGrainsPerSecond);
	void SetGrainVolume(float BaseVolume, struct FVector2D& VolumeRange);
	void SetPlaybackSpeed(float InPlayheadRate);
	void SetPlayheadTime(float InPositionSec, float LerpTimeSec, enum class EGranularSynthSeekType SeekType);
	void SetReleaseTimeMsec(float ReleaseTimeMsec);
	void SetScrubMode(bool bScrubMode);
	void SetSoundWave(class USoundWave* InSoundWave);
	void SetSustainGain(float SustainGain);

	float GetCurrentPlayheadTime() const;
	float GetSampleDuration() const;
	bool IsLoaded() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"GranularSynth">();
	}
	static class UGranularSynth* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGranularSynth>();
	}
};

// Class Synthesis.MonoWaveTableSynthPreset
// 0x0148 (0x0170 - 0x0028)
class UMonoWaveTableSynthPreset final  : public UObject
{
public:
	class FString                                 PresetName;                                        // 0x0028(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         bLockKeyframesToGridBool : 1;                      // 0x0038(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         Pad_12A1[0x3];                                     // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         LockKeyframesToGrid;                               // 0x003C(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         WaveTableResolution;                               // 0x0040(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_12A2[0x4];                                     // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FRuntimeFloatCurve>             WaveTable;                                         // 0x0048(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NonTransactional, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         bNormalizeWaveTables : 1;                          // 0x0058(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         Pad_12A3[0x117];                                   // 0x0059(0x0117)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"MonoWaveTableSynthPreset">();
	}
	static class UMonoWaveTableSynthPreset* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMonoWaveTableSynthPreset>();
	}
};

// Class Synthesis.SynthComponentMonoWaveTable
// 0x0740 (0x0E10 - 0x06D0)
class USynthComponentMonoWaveTable final  : public USynthComponent
{
public:
	FMulticastInlineDelegateProperty_             OnTableAltered;                                    // 0x06D0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             OnNumTablesChanged;                                // 0x06E0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class UMonoWaveTableSynthPreset*              CurrentPreset;                                     // 0x06F0(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_12A4[0x718];                                   // 0x06F8(0x0718)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	float GetCurveTangent(int32 TableIndex);
	int32 GetNumTableEntries();
	void NoteOff(float InMidiNote);
	void NoteOn(float InMidiNote, float InVelocity);
	void RefreshAllWaveTables();
	void RefreshWaveTable(int32 Index);
	void SetAmpEnvelopeAttackTime(float InAttackTimeMsec);
	void SetAmpEnvelopeBiasDepth(float InDepth);
	void SetAmpEnvelopeBiasInvert(bool bInBiasInvert);
	void SetAmpEnvelopeDecayTime(float InDecayTimeMsec);
	void SetAmpEnvelopeDepth(float InDepth);
	void SetAmpEnvelopeInvert(bool bInInvert);
	void SetAmpEnvelopeReleaseTime(float InReleaseTimeMsec);
	void SetAmpEnvelopeSustainGain(float InSustainGain);
	bool SetCurveInterpolationType(enum class ECurveInterpolationType InterpolationType, int32 TableIndex);
	bool SetCurveTangent(int32 TableIndex, float InNewTangent);
	bool SetCurveValue(int32 TableIndex, int32 KeyframeIndex, float NewValue);
	void SetFilterEnvelopeAttackTime(float InAttackTimeMsec);
	void SetFilterEnvelopeBiasDepth(float InDepth);
	void SetFilterEnvelopeBiasInvert(bool bInBiasInvert);
	void SetFilterEnvelopeDepth(float InDepth);
	void SetFilterEnvelopeInvert(bool bInInvert);
	void SetFilterEnvelopenDecayTime(float InDecayTimeMsec);
	void SetFilterEnvelopeReleaseTime(float InReleaseTimeMsec);
	void SetFilterEnvelopeSustainGain(float InSustainGain);
	void SetFrequency(float FrequencyHz);
	void SetFrequencyPitchBend(float FrequencyOffsetCents);
	void SetFrequencyWithMidiNote(float InMidiNote);
	void SetLowPassFilterFrequency(float InNewFrequency);
	void SetLowPassFilterResonance(float InNewQ);
	void SetPositionEnvelopeAttackTime(float InAttackTimeMsec);
	void SetPositionEnvelopeBiasDepth(float InDepth);
	void SetPositionEnvelopeBiasInvert(bool bInBiasInvert);
	void SetPositionEnvelopeDecayTime(float InDecayTimeMsec);
	void SetPositionEnvelopeDepth(float InDepth);
	void SetPositionEnvelopeInvert(bool bInInvert);
	void SetPositionEnvelopeReleaseTime(float InReleaseTimeMsec);
	void SetPositionEnvelopeSustainGain(float InSustainGain);
	void SetPosLfoDepth(float InLfoDepth);
	void SetPosLfoFrequency(float InLfoFrequency);
	void SetPosLfoType(enum class ESynthLFOType InLfoType);
	void SetSustainPedalState(bool InSustainPedalState);
	void SetWaveTablePosition(float InPosition);

	TArray<float> GetKeyFrameValuesForTable(float TableIndex) const;
	int32 GetMaxTableIndex() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"SynthComponentMonoWaveTable">();
	}
	static class USynthComponentMonoWaveTable* GetDefaultObj()
	{
		return GetDefaultObjImpl<USynthComponentMonoWaveTable>();
	}
};

// Class Synthesis.SynthSamplePlayer
// 0x0130 (0x0800 - 0x06D0)
class USynthSamplePlayer final  : public USynthComponent
{
public:
	class USoundWave*                             SoundWave;                                         // 0x06D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             OnSampleLoaded;                                    // 0x06D8(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             OnSamplePlaybackProgress;                          // 0x06E8(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_12AA[0x108];                                   // 0x06F8(0x0108)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void SeekToTime(float TimeSec, enum class ESamplePlayerSeekType SeekType, bool bWrap);
	void SetPitch(float InPitch, float TimeSec);
	void SetScrubMode(bool bScrubMode);
	void SetScrubTimeWidth(float InScrubTimeWidthSec);
	void SetSoundWave(class USoundWave* InSoundWave);

	float GetCurrentPlaybackProgressPercent() const;
	float GetCurrentPlaybackProgressTime() const;
	float GetSampleDuration() const;
	bool IsLoaded() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"SynthSamplePlayer">();
	}
	static class USynthSamplePlayer* GetDefaultObj()
	{
		return GetDefaultObjImpl<USynthSamplePlayer>();
	}
};

// Class Synthesis.SynthKnob
// 0x02F8 (0x0400 - 0x0108)
class USynthKnob final  : public UWidget
{
public:
	float                                         Value;                                             // 0x0108(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         StepSize;                                          // 0x010C(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MouseSpeed;                                        // 0x0110(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MouseFineTuneSpeed;                                // 0x0114(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         ShowTooltipInfo : 1;                               // 0x0118(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         Pad_12AC[0x7];                                     // 0x0119(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   ParameterName;                                     // 0x0120(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	class FText                                   ParameterUnits;                                    // 0x0138(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	FDelegateProperty_                            ValueDelegate;                                     // 0x0150(0x0010)(ZeroConstructor, InstancedReference, NoDestructor, NativeAccessSpecifierPublic)
	struct FSynthKnobStyle                        WidgetStyle;                                       // 0x0160(0x0238)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	bool                                          Locked;                                            // 0x0398(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          IsFocusable;                                       // 0x0399(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_12AD[0x6];                                     // 0x039A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	FMulticastInlineDelegateProperty_             OnMouseCaptureBegin;                               // 0x03A0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             OnMouseCaptureEnd;                                 // 0x03B0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             OnControllerCaptureBegin;                          // 0x03C0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             OnControllerCaptureEnd;                            // 0x03D0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             OnValueChanged;                                    // 0x03E0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_12AE[0x10];                                    // 0x03F0(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void SetLocked(bool InValue);
	void SetStepSize(float InValue);
	void SetValue(float InValue);

	float GetValue() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"SynthKnob">();
	}
	static class USynthKnob* GetDefaultObj()
	{
		return GetDefaultObjImpl<USynthKnob>();
	}
};

}

