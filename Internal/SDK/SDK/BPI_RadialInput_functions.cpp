#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPI_RadialInput

#include "Basic.hpp"

#include "BPI_RadialInput_classes.hpp"
#include "BPI_RadialInput_parameters.hpp"


namespace SDK
{

// Function BPI_RadialInput.BPI_RadialInput_C.GetJoystickDirection
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// enum class EJoystickTypes               Stick                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector2D                        StickInput                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_RadialInput_C::GetJoystickDirection(enum class EJoystickTypes Stick, struct FVector2D* StickInput)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_RadialInput_C", "GetJoystickDirection");

	Params::BPI_RadialInput_C_GetJoystickDirection Parms{};

	Parms.Stick = Stick;

	UObject::ProcessEvent(Func, &Parms);

	if (StickInput != nullptr)
		*StickInput = Parms.StickInput;
}

}

