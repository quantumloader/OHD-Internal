#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ABPI_WeaponAnimLayer

#include "Basic.hpp"

#include "ABPI_WeaponAnimLayer_classes.hpp"
#include "ABPI_WeaponAnimLayer_parameters.hpp"


namespace SDK
{

// Function ABPI_WeaponAnimLayer.ABPI_WeaponAnimLayer_C.WeaponUpperBody
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FPoseLink                        UpperBody                                              (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// struct FPoseLink                        Param_WeaponUpperBody                                  (Parm, OutParm, NoDestructor)

void IABPI_WeaponAnimLayer_C::WeaponUpperBody(const struct FPoseLink& UpperBody, struct FPoseLink* Param_WeaponUpperBody)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABPI_WeaponAnimLayer_C", "WeaponUpperBody");

	Params::ABPI_WeaponAnimLayer_C_WeaponUpperBody Parms{};

	Parms.UpperBody = std::move(UpperBody);

	UObject::ProcessEvent(Func, &Parms);

	if (Param_WeaponUpperBody != nullptr)
		*Param_WeaponUpperBody = Parms.Param_WeaponUpperBody;
}


// Function ABPI_WeaponAnimLayer.ABPI_WeaponAnimLayer_C.WeaponAdditive
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FPoseLink                        Param_WeaponAdditive                                   (Parm, OutParm, NoDestructor)

void IABPI_WeaponAnimLayer_C::WeaponAdditive(struct FPoseLink* Param_WeaponAdditive)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABPI_WeaponAnimLayer_C", "WeaponAdditive");

	Params::ABPI_WeaponAnimLayer_C_WeaponAdditive Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Param_WeaponAdditive != nullptr)
		*Param_WeaponAdditive = Parms.Param_WeaponAdditive;
}


// Function ABPI_WeaponAnimLayer.ABPI_WeaponAnimLayer_C.Move
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FPoseLink                        Param_Move                                             (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// struct FPoseLink                        Param_Move_0                                           (Parm, OutParm, NoDestructor)

void IABPI_WeaponAnimLayer_C::Move(const struct FPoseLink& Param_Move, struct FPoseLink* Param_Move_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABPI_WeaponAnimLayer_C", "Move");

	Params::ABPI_WeaponAnimLayer_C_Move Parms{};

	Parms.Param_Move = std::move(Param_Move);

	UObject::ProcessEvent(Func, &Parms);

	if (Param_Move_0 != nullptr)
		*Param_Move_0 = Parms.Param_Move_0;
}


// Function ABPI_WeaponAnimLayer.ABPI_WeaponAnimLayer_C.WeaponJumpLoop
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FPoseLink                        LowerJumpLoop                                          (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// struct FPoseLink                        Param_WeaponJumpLoop                                   (Parm, OutParm, NoDestructor)

void IABPI_WeaponAnimLayer_C::WeaponJumpLoop(const struct FPoseLink& LowerJumpLoop, struct FPoseLink* Param_WeaponJumpLoop)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABPI_WeaponAnimLayer_C", "WeaponJumpLoop");

	Params::ABPI_WeaponAnimLayer_C_WeaponJumpLoop Parms{};

	Parms.LowerJumpLoop = std::move(LowerJumpLoop);

	UObject::ProcessEvent(Func, &Parms);

	if (Param_WeaponJumpLoop != nullptr)
		*Param_WeaponJumpLoop = Parms.Param_WeaponJumpLoop;
}

}

