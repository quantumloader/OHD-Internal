#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_HDPlayerControllerBase

#include "Basic.hpp"

#include "DonkehFramework_structs.hpp"
#include "HDMain_classes.hpp"
#include "Engine_structs.hpp"
#include "EJoystickTypes_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_HDPlayerControllerBase.BP_HDPlayerControllerBase_C
// 0x0070 (0x0710 - 0x06A0)
class ABP_HDPlayerControllerBase_C final  : public AHDPlayerController
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x06A0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWBP_DeployMenu_C*                      DeployMenu;                                        // 0x06A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bInitialSpawn;                                     // 0x06B0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bWantsToOpenDeployMenu;                            // 0x06B1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bDeployMenuShown;                                  // 0x06B2(0x0001)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1B1C[0x5];                                     // 0x06B3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	FMulticastInlineDelegateProperty_             OnRepPlayerState;                                  // 0x06B8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                          bOpenDeployMenuOnBeginPlay;                        // 0x06C8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1B1D[0x7];                                     // 0x06C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            DeathScreen;                                       // 0x06D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bDeathScreenShown;                                 // 0x06D8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1B1E[0x7];                                     // 0x06D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            WatermarkWidget;                                   // 0x06E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSoftClassPtr<class UClass>                   WatermarkWidgetClass;                              // 0x06E8(0x0028)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, HasGetValueTypeHash)

public:
	void OnRepPlayerState__DelegateSignature();
	void ExecuteUbergraph_BP_HDPlayerControllerBase(int32 EntryPoint, FDelegateProperty_ K2Node_CreateDelegate_OutputDelegate, const struct FKey& K2Node_InputActionEvent_Key_1, class AHDSquadState* K2Node_CustomEvent_SquadToJoin, const struct FKey& K2Node_InputActionEvent_Key_2, bool CallFunc_JoinSquad_bJoinSuccess, int32 Temp_int_Loop_Counter_Variable, int32 CallFunc_Add_IntInt_ReturnValue, bool CallFunc_LeaveCurrentSquad_bLeaveSuccess, int32 Temp_int_Array_Index_Variable, class AHDSquadState* K2Node_CustomEvent_Squad_1, bool K2Node_CustomEvent_bLocked, int32 Temp_int_Loop_Counter_Variable_1, int32 CallFunc_Add_IntInt_ReturnValue_1, class AHDSquadState* K2Node_CustomEvent_Squad, class AHDPlayerState* K2Node_CustomEvent_MemberToRemove, bool CallFunc_KickSquadMember_bRemoveSuccess, class UClass* Temp_class_Variable, class UClass* K2Node_ClassDynamicCast_AsUser_Widget, bool K2Node_ClassDynamicCast_bSuccess, class UClass* K2Node_CustomEvent_Loaded, const struct FKey& K2Node_InputKeyEvent_Key, int32 Temp_int_Array_Index_Variable_1, const struct FKey& K2Node_InputActionEvent_Key_3, TArray<class ABP_HDPlayerCharacterBase_C*>& CallFunc_GetAllActorsOfClass_OutActors, int32 CallFunc_Array_Length_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, const struct FKey& K2Node_InputKeyEvent_Key_1, class UUserWidget* CallFunc_Create_ReturnValue, const struct FKey& K2Node_InputKeyEvent_Key_2, class APawn* CallFunc_K2_GetPawn_ReturnValue, const struct FKey& K2Node_InputKeyEvent_Key_3, class ABP_HDPlayerCharacterBase_C* K2Node_DynamicCast_AsBP_HDPlayer_Character_Base, bool K2Node_DynamicCast_bSuccess, bool CallFunc_Not_PreBool_ReturnValue, TArray<class AActor*>& Temp_object_Variable, TArray<class ABP_HDCapturePointBase_C*>& CallFunc_GetAllActorsOfClass_OutActors_1, class ABP_HDCapturePointBase_C* CallFunc_Array_Get_Item, int32 CallFunc_Array_Length_ReturnValue_1, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsValid_ReturnValue_1, class AHDTeamState* CallFunc_GetHDTeamState_TeamState, class AHDPlatoonState* K2Node_CustomEvent_ForPlatoon, bool CallFunc_IsValid_ReturnValue_2, bool CallFunc_InternalCreateUnnamedSquad_bSuccess, class AHDSquadState* CallFunc_InternalCreateUnnamedSquad_NewSquad, bool CallFunc_HasReachedMaxSquadLimit_ReturnValue, bool CallFunc_EqualEqual_ObjectObject_ReturnValue, bool CallFunc_IsValid_ReturnValue_3, class UDFMinimap* CallFunc_GetMinimapWidget_MinimapWidget, uint8 K2Node_Event_LastTeamNum, uint8 K2Node_Event_NewTeamNum, TArray<class ABP_HDCapturePointBase_C*>& CallFunc_GetAllActorsOfClass_OutActors_2, class ABP_HDCapturePointBase_C* CallFunc_Array_Get_Item_1, int32 CallFunc_Array_Length_ReturnValue_2, bool CallFunc_Less_IntInt_ReturnValue_1, bool CallFunc_IsValid_ReturnValue_4, bool CallFunc_IsLocalController_ReturnValue, TArray<enum class EObjectTypeQuery>& K2Node_MakeArray_Array, class AArcBaseVehicle* K2Node_CustomEvent_Vehicle_1, class APawn* CallFunc_K2_GetPawn_ReturnValue_1, class AArcBaseVehicle* K2Node_CustomEvent_Vehicle, const struct FVector& CallFunc_K2_GetActorLocation_ReturnValue, class ADFBasePlayerCharacter* K2Node_DynamicCast_AsDFBase_Player_Character, bool K2Node_DynamicCast_bSuccess_1, class UCameraComponent* CallFunc_GetComponentByClass_ReturnValue, const struct FVector& CallFunc_GetForwardVector_ReturnValue, class UArcVehiclePlayerSeatComponent* CallFunc_GetComponentByClass_ReturnValue_1, const struct FVector& CallFunc_Multiply_VectorFloat_ReturnValue, bool CallFunc_IsValid_ReturnValue_5, const struct FVector& CallFunc_Add_VectorVector_ReturnValue, const struct FHitResult& CallFunc_LineTraceSingleForObjects_OutHit, bool CallFunc_LineTraceSingleForObjects_ReturnValue, class AArcBaseVehicle* CallFunc_GetVehicleFromSeatConfig_ReturnValue, bool CallFunc_IsSeatRefValid_ReturnValue, bool CallFunc_BreakHitResult_bBlockingHit, bool CallFunc_BreakHitResult_bInitialOverlap, float CallFunc_BreakHitResult_Time, float CallFunc_BreakHitResult_Distance, const struct FVector& CallFunc_BreakHitResult_Location, const struct FVector& CallFunc_BreakHitResult_ImpactPoint, const struct FVector& CallFunc_BreakHitResult_Normal, const struct FVector& CallFunc_BreakHitResult_ImpactNormal, class UPhysicalMaterial* CallFunc_BreakHitResult_PhysMat, class AActor* CallFunc_BreakHitResult_HitActor, class UPrimitiveComponent* CallFunc_BreakHitResult_HitComponent, class FName CallFunc_BreakHitResult_HitBoneName, int32 CallFunc_BreakHitResult_HitItem, int32 CallFunc_BreakHitResult_FaceIndex, const struct FVector& CallFunc_BreakHitResult_TraceStart, const struct FVector& CallFunc_BreakHitResult_TraceEnd, class AArcBaseVehicle* K2Node_DynamicCast_AsArc_Base_Vehicle, bool K2Node_DynamicCast_bSuccess_2, class AArcBaseVehicle* K2Node_DynamicCast_AsArc_Base_Vehicle_1, bool K2Node_DynamicCast_bSuccess_3, const struct FKey& K2Node_InputActionEvent_Key, class APawn* CallFunc_K2_GetPawn_ReturnValue_2, const struct FKey& K2Node_InputActionEvent_Key_4, bool CallFunc_IsValid_ReturnValue_6, class AArcVehiclePawn* K2Node_DynamicCast_AsArc_Vehicle_Pawn, bool K2Node_DynamicCast_bSuccess_4, class AArcBaseVehicle* CallFunc_GetOwningVehicle_ReturnValue, class UArcVehiclePlayerSeatComponent* CallFunc_GetComponentByClass_ReturnValue_2, int32 K2Node_CustomEvent_Seat, bool CallFunc_IsValid_ReturnValue_7, bool CallFunc_IsSeatRefValid_ReturnValue_1, class AArcBaseVehicle* CallFunc_GetVehicleFromSeatConfig_ReturnValue_1, const struct FKey& Temp_struct_Variable, const struct FKey& K2Node_InputActionEvent_Key_5, bool CallFunc_HasAuthority_ReturnValue, bool CallFunc_IsDedicatedServer_ReturnValue, class AHUD* CallFunc_GetHUD_ReturnValue, int32 Temp_int_Loop_Counter_Variable_2, class ABP_HDHUDBase_C* K2Node_DynamicCast_AsBP_HDHUDBase, bool K2Node_DynamicCast_bSuccess_5, bool CallFunc_Less_IntInt_ReturnValue_2, int32 CallFunc_Add_IntInt_ReturnValue_2, const struct FKey& K2Node_InputActionEvent_Key_6, bool CallFunc_IsValidSoftClassReference_ReturnValue, int32 Temp_int_Array_Index_Variable_2, class ABP_HDPlayerCharacterBase_C* CallFunc_Array_Get_Item_2, bool CallFunc_IsValid_ReturnValue_8, class APawn* K2Node_Event_NewPawn, FDelegateProperty_ K2Node_CreateDelegate_OutputDelegate_1, class ADFBaseCharacter* K2Node_DynamicCast_AsDFBase_Character, bool K2Node_DynamicCast_bSuccess_6, class APawn* K2Node_CustomEvent_VictimPawn, class AController* K2Node_CustomEvent_VictimController, float K2Node_CustomEvent_KillingDamage, struct FDamageEvent& K2Node_CustomEvent_DamageEvent, class APawn* K2Node_CustomEvent_InstigatingPawn, class AActor* K2Node_CustomEvent_DamageCauser, class ADFBaseCharacter* K2Node_DynamicCast_AsDFBase_Character_1, bool K2Node_DynamicCast_bSuccess_7, FDelegateProperty_ K2Node_CreateDelegate_OutputDelegate_2, class APawn* CallFunc_K2_GetPawn_ReturnValue_3, class ABP_HDPlayerCharacterBase_C* K2Node_DynamicCast_AsBP_HDPlayer_Character_Base_1, bool K2Node_DynamicCast_bSuccess_8, bool CallFunc_IsLocalController_ReturnValue_1, class AActor* K2Node_Event_EndGameFocus, bool K2Node_Event_bIsWinner, bool CallFunc_IsLocalController_ReturnValue_2, const struct FLinearColor& CallFunc_MakeColor_ReturnValue, const struct FLinearColor& CallFunc_MakeColor_ReturnValue_1, class AHUD* CallFunc_GetHUD_ReturnValue_1, class ABP_HDHUDBase_C* K2Node_DynamicCast_AsBP_HDHUDBase_1, bool K2Node_DynamicCast_bSuccess_9, class AHUD* CallFunc_GetHUD_ReturnValue_2, bool CallFunc_IsTextChatHistoryVisible_bVisible, class ABP_HDHUDBase_C* K2Node_DynamicCast_AsBP_HDHUDBase_2, bool K2Node_DynamicCast_bSuccess_10, bool CallFunc_Not_PreBool_ReturnValue_1, class AHUD* CallFunc_GetHUD_ReturnValue_3, class APawn* K2Node_Event_UnpossessedPawn, bool CallFunc_CastVote_ReturnValue, bool CallFunc_IsValid_ReturnValue_9, bool CallFunc_CastVote_ReturnValue_1);
	void ReceiveUnpossessPawn(class APawn* UnpossessedPawn);
	void ReceiveGameHasEnded(class AActor* EndGameFocus, bool bIsWinner);
	void Auth_SpawnVehicle();
	void CharacterDeath(class APawn* VictimPawn, class AController* VictimController, float KillingDamage, struct FDamageEvent& DamageEvent, class APawn* InstigatingPawn, class AActor* DamageCauser);
	void ReceivePossessPawn(class APawn* NewPawn);
	void Server_RequestSeatChange(int32 Seat);
	void RequestExitVehicle(class AArcBaseVehicle* Vehicle);
	void TryGetInVehicle(class AArcBaseVehicle* Vehicle);
	void ReceivePlayerTeamNumUpdated(uint8 LastTeamNum, uint8 NewTeamNum);
	void OnPlayerSpawnTimerElapsed();
	void ReceiveOnRepPlayerState();
	void OnDeployMenuPreloadFinished();
	void ReceiveBeginPlay();
	void UpdatePlayerPOIs();
	void ServerKickSquadMember(class AHDSquadState* Squad, class AHDPlayerState* MemberToRemove);
	void ServerSetSquadLockedState(class AHDSquadState* Squad, bool bLocked);
	void ServerJoinSquad(class AHDSquadState* SquadToJoin);
	void ServerLeaveCurrentSquad();
	void ServerCreateAndJoinUserSquadUnnamed(class AHDPlatoonState* ForPlatoon);
	void InpActEvt_VoteNo_K2Node_InputActionEvent_0(const struct FKey& Key);
	void InpActEvt_VoteYes_K2Node_InputActionEvent_1(const struct FKey& Key);
	void InpActEvt_ChatHistoryToggle_K2Node_InputActionEvent_2(const struct FKey& Key);
	void OnLoaded_97A2A56D4425648AEE60ECA073085E53(class UClass* Loaded);
	void InpActEvt_F4_K2Node_InputKeyEvent_0(const struct FKey& Key);
	void InpActEvt_Use_K2Node_InputActionEvent_3(const struct FKey& Key);
	void InpActEvt_F3_K2Node_InputKeyEvent_1(const struct FKey& Key);
	void InpActEvt_F2_K2Node_InputKeyEvent_2(const struct FKey& Key);
	void InpActEvt_F1_K2Node_InputKeyEvent_3(const struct FKey& Key);
	void InpActEvt_DeployMenu_K2Node_InputActionEvent_4(const struct FKey& Key);
	void InpActEvt_Fire_K2Node_InputActionEvent_5(const struct FKey& Key);
	void InpActEvt_Fire_K2Node_InputActionEvent_6(const struct FKey& Key);
	void LoadAndActivateDeployMenu(class UGameInstance* CallFunc_GetGameInstance_ReturnValue, class UHDGameInstance* K2Node_DynamicCast_AsHDGame_Instance, bool K2Node_DynamicCast_bSuccess, class UWBP_DeployMenu_C* CallFunc_CreateAndActivate_ReturnValue);
	void LoadDeployMenu(FDelegateProperty_ K2Node_CreateDelegate_OutputDelegate, bool CallFunc_IsValid_ReturnValue, class UWBP_DeployMenu_C* CallFunc_Create_ReturnValue);
	void UnloadDeployMenu(bool CallFunc_Not_PreBool_ReturnValue, bool CallFunc_BooleanOR_ReturnValue);
	void DeployMenuToggle(bool bShowMenu, bool bForce, bool CallFunc_IsVictoryMenuShown_bShown, bool CallFunc_Not_PreBool_ReturnValue, class UGameInstance* CallFunc_GetGameInstance_ReturnValue, bool CallFunc_BooleanOR_ReturnValue, class UHDGameInstance* K2Node_DynamicCast_AsHDGame_Instance, bool K2Node_DynamicCast_bSuccess, bool CallFunc_Not_PreBool_ReturnValue_1, bool CallFunc_BooleanOR_ReturnValue_1, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsInViewport_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue_2, bool CallFunc_BooleanAND_ReturnValue, bool CallFunc_BooleanAND_ReturnValue_1, bool CallFunc_Not_PreBool_ReturnValue_3, class UDFMenuManager* CallFunc_GetMenuManager_ReturnValue, bool CallFunc_BooleanAND_ReturnValue_2);
	void LoadDeathScreen(class UWBP_DeathScreen_C* CallFunc_Create_ReturnValue, bool CallFunc_IsValid_ReturnValue);
	void UnloadDeathScreen();
	void DeathScreenToggle(bool bShow, bool CallFunc_AddToPlayerScreen_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsInViewport_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue);
	void IsVictoryMenuShown(bool* bShown, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsInViewport_ReturnValue);
	void GetMinimapWidget(class UDFMinimap** MinimapWidget, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsValid_ReturnValue_1);
	void ShowHUD(class AHUD* CallFunc_GetHUD_ReturnValue, bool CallFunc_IsValid_ReturnValue);
	void HideHUD(class AHUD* CallFunc_GetHUD_ReturnValue, bool CallFunc_IsValid_ReturnValue);
	void SpawnVehicleAtPlayer(class UClass* VehicleClass, const struct FVector& CallFunc_GetActorEyesViewPoint_OutLocation, const struct FRotator& CallFunc_GetActorEyesViewPoint_OutRotation, const struct FVector& CallFunc_GetForwardVector_ReturnValue, const struct FVector& CallFunc_Multiply_VectorFloat_ReturnValue, const struct FVector& CallFunc_Add_VectorVector_ReturnValue, const struct FTransform& CallFunc_MakeTransform_ReturnValue, class AActor* CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue, class ABP_HDVehicleBase_C* CallFunc_FinishSpawningActor_ReturnValue);
	void GetHDPlayerState(class AHDPlayerState** Param_PlayerState, class AHDPlayerState* K2Node_DynamicCast_AsHDPlayer_State, bool K2Node_DynamicCast_bSuccess);
	void GetHDTeamState(class AHDTeamState** Param_TeamState, class AHDTeamState* K2Node_DynamicCast_AsTeam_State__HD_, bool K2Node_DynamicCast_bSuccess);
	void InternalCreateUnnamedSquad(class AHDPlatoonState* ForPlatoon, bool bJoinSquadAfterCreation, bool bStartLocked, bool* bSuccess, class AHDSquadState** NewSquad, int32 PlayerPrevSquadIdx, int32 IdxToUseForName, bool Temp_bool_Variable, class FText Temp_text_Variable, const class FString& CallFunc_GetPlayerName_ReturnValue, class FText CallFunc_Conv_StringToText_ReturnValue, const struct FFormatArgumentData& K2Node_MakeStruct_FormatArgumentData, const struct FFormatArgumentData& K2Node_MakeStruct_FormatArgumentData_1, class AHDPlayerState* Temp_object_Variable, bool CallFunc_NotEqual_IntInt_ReturnValue, bool Temp_bool_Variable_1, class AHDPlayerState* CallFunc_GetHDPlayerState_PlayerState, bool Temp_bool_Variable_2, class AHDPlayerState* K2Node_Select_Default, bool Temp_bool_Variable_3, class FText CallFunc_MakeLiteralText_ReturnValue, class AHDSquadState* CallFunc_AddSquad_ReturnValue, bool CallFunc_EqualEqual_IntInt_ReturnValue, int32 K2Node_Select_Default_1, int32 K2Node_Select_Default_2, bool CallFunc_TextIsEmptyOrWhitespace_ReturnValue, class FText CallFunc_GetPredefinedSquadNameByIndex_SquadName, class FText K2Node_Select_Default_3, bool CallFunc_IsValid_ReturnValue, const struct FFormatArgumentData& K2Node_MakeStruct_FormatArgumentData_2, TArray<struct FFormatArgumentData>& K2Node_MakeArray_Array, class FText CallFunc_Format_ReturnValue, const class FString& CallFunc_Conv_TextToString_ReturnValue);
	void JoinSquad(class AHDSquadState* SquadToJoin, bool* bJoinSuccess, bool Temp_bool_Variable, bool CallFunc_CanJoinSquad_bJoinableSquad, enum class ELogVerbosityBP Temp_byte_Variable, enum class ELogVerbosityBP Temp_byte_Variable_1, bool CallFunc_HasAuthority_ReturnValue, bool CallFunc_HasAuthority_ReturnValue_1, enum class ELogVerbosityBP K2Node_Select_Default, bool CallFunc_RegisterPlayerSquadMember_ReturnValue);
	void CanJoinSquad(class AHDSquadState* SquadToJoin, bool* bJoinableSquad, bool CallFunc_IsValid_ReturnValue, class AHDTeamState* CallFunc_GetHDTeamState_TeamState, bool CallFunc_IsValid_ReturnValue_1, bool CallFunc_EqualEqual_ByteByte_ReturnValue, bool CallFunc_CanRegisterPlayerSquadMember_ReturnValue, bool CallFunc_IsPlayerRegisteredSquadMember_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue, bool CallFunc_BooleanAND_ReturnValue);
	void IsSquadLeader(class AHDSquadState* Squad, bool* bSquadLeader, bool CallFunc_IsValid_ReturnValue, class AHDPlayerState* CallFunc_GetHDPlayerState_PlayerState, bool CallFunc_EqualEqual_ObjectObject_ReturnValue, bool CallFunc_IsValid_ReturnValue_1);
	void LeaveCurrentSquad(bool* bLeaveSuccess, bool Temp_bool_Variable, bool CallFunc_HasAuthority_ReturnValue, bool CallFunc_HasAuthority_ReturnValue_1, enum class ELogVerbosityBP Temp_byte_Variable, enum class ELogVerbosityBP Temp_byte_Variable_1, class AHDPlayerState* CallFunc_GetHDPlayerState_PlayerState, enum class ELogVerbosityBP K2Node_Select_Default, bool CallFunc_UnregisterPlayerSquadMember_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsValid_ReturnValue_1);
	void KickSquadMember(class AHDSquadState* Squad, class AHDPlayerState* MemberToRemove, bool* bRemoveSuccess, enum class ELogVerbosityBP Temp_byte_Variable, bool CallFunc_IsValid_ReturnValue, enum class ELogVerbosityBP Temp_byte_Variable_1, bool Temp_bool_Variable, bool CallFunc_HasAuthority_ReturnValue, bool CallFunc_UnregisterSquadMember_ReturnValue, bool CallFunc_IsValid_ReturnValue_1, bool CallFunc_IsSquadLeader_bSquadLeader, bool CallFunc_HasAuthority_ReturnValue_1, enum class ELogVerbosityBP K2Node_Select_Default);
	void SetSquadLockedState(class AHDSquadState* Squad, bool bLocked, enum class ELogVerbosityBP Temp_byte_Variable, bool CallFunc_IsValid_ReturnValue, enum class ELogVerbosityBP Temp_byte_Variable_1, bool Temp_bool_Variable, bool CallFunc_HasAuthority_ReturnValue, bool CallFunc_IsSquadLeader_bSquadLeader, bool CallFunc_HasAuthority_ReturnValue_1, enum class ELogVerbosityBP K2Node_Select_Default);
	void SetCamViewRotationLimits(const struct FRotator& ViewRotMin, const struct FRotator& ViewRotMax, bool bRelativeToPawnRotation, const struct FRotator& PawnRotation, float CallFunc_BreakRotator_Roll, float CallFunc_BreakRotator_Pitch, float CallFunc_BreakRotator_Yaw, float CallFunc_BreakRotator_Roll_1, float CallFunc_BreakRotator_Pitch_1, float CallFunc_BreakRotator_Yaw_1);
	void SetCamViewRotationRollLimits(float ViewRollMin, float ViewRollMax, bool bRelativeToPawnRotation, const struct FRotator& PawnRotation, bool Temp_bool_Variable, float CallFunc_BreakRotator_Roll, float CallFunc_BreakRotator_Pitch, float CallFunc_BreakRotator_Yaw, float CallFunc_NormalizeAxis_ReturnValue, class APawn* CallFunc_K2_GetPawn_ReturnValue, float CallFunc_Add_FloatFloat_ReturnValue, bool CallFunc_IsValid_ReturnValue, const struct FRotator& CallFunc_K2_GetActorRotation_ReturnValue, float CallFunc_Add_FloatFloat_ReturnValue_1, bool Temp_bool_Variable_1, float K2Node_Select_Default, float K2Node_Select_Default_1);
	void SetCamViewRotationPitchLimits(float ViewPitchMin, float ViewPitchMax, bool bRelativeToPawnRotation, const struct FRotator& PawnRotation, bool Temp_bool_Variable, float CallFunc_BreakRotator_Roll, float CallFunc_BreakRotator_Pitch, float CallFunc_BreakRotator_Yaw, float CallFunc_NormalizeAxis_ReturnValue, class APawn* CallFunc_K2_GetPawn_ReturnValue, float CallFunc_Add_FloatFloat_ReturnValue, bool CallFunc_IsValid_ReturnValue, const struct FRotator& CallFunc_K2_GetActorRotation_ReturnValue, float CallFunc_Add_FloatFloat_ReturnValue_1, bool Temp_bool_Variable_1, float K2Node_Select_Default, float K2Node_Select_Default_1);
	void SetCamViewRotationYawLimits(float ViewYawMin, float ViewYawMax, bool bRelativeToPawnRotation, const struct FRotator& PawnRotation, bool Temp_bool_Variable, float CallFunc_BreakRotator_Roll, float CallFunc_BreakRotator_Pitch, float CallFunc_BreakRotator_Yaw, float CallFunc_NormalizeAxis_ReturnValue, class APawn* CallFunc_K2_GetPawn_ReturnValue, bool CallFunc_IsValid_ReturnValue, const struct FRotator& CallFunc_K2_GetActorRotation_ReturnValue, float CallFunc_Add_FloatFloat_ReturnValue, float CallFunc_Add_FloatFloat_ReturnValue_1, bool Temp_bool_Variable_1, float K2Node_Select_Default, float K2Node_Select_Default_1);
	void RestoreCamDefaultViewRotationLimits();
	void RestoreCamDefaultViewRotationRollLimits(class UClass* CallFunc_GetObjectClass_ReturnValue);
	void RestoreCamDefaultViewRotationPitchLimits(class UClass* CallFunc_GetObjectClass_ReturnValue);
	void RestoreCamDefaultViewRotationYawLimits(class UClass* CallFunc_GetObjectClass_ReturnValue);
	void GetJoystickDirection(enum class EJoystickTypes Stick, struct FVector2D* StickInput, float CallFunc_GetInputAxisKeyValue_ReturnValue, bool K2Node_SwitchEnum_CmpSuccess, float CallFunc_GetInputAxisKeyValue_ReturnValue_1, float CallFunc_GetInputAxisKeyValue_ReturnValue_2, const struct FVector2D& CallFunc_MakeVector2D_ReturnValue, float CallFunc_Multiply_FloatFloat_ReturnValue, float CallFunc_GetInputAxisKeyValue_ReturnValue_3, const struct FVector2D& CallFunc_MakeVector2D_ReturnValue_1);

	void GetTeamKits(TSet<class UHDKit*>* TeamKits, const TSet<class UHDKit*>& K2Node_MakeSet_Set, class AHDTeamState* K2Node_DynamicCast_AsTeam_State__HD_, bool K2Node_DynamicCast_bSuccess) const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"BP_HDPlayerControllerBase_C">();
	}
	static class ABP_HDPlayerControllerBase_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_HDPlayerControllerBase_C>();
	}
};

}

