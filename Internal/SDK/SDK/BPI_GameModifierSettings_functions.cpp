#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPI_GameModifierSettings

#include "Basic.hpp"

#include "BPI_GameModifierSettings_classes.hpp"
#include "BPI_GameModifierSettings_parameters.hpp"


namespace SDK
{

// Function BPI_GameModifierSettings.BPI_GameModifierSettings_C.SetupModifier
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UWBP_OptionMenu_CreateGame_C*     ParentMenu                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_GameModifierSettings_C::SetupModifier(class UWBP_OptionMenu_CreateGame_C* ParentMenu)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_GameModifierSettings_C", "SetupModifier");

	Params::BPI_GameModifierSettings_C_SetupModifier Parms{};

	Parms.ParentMenu = ParentMenu;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPI_GameModifierSettings.BPI_GameModifierSettings_C.IsEnabled
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bEnabled                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_GameModifierSettings_C::IsEnabled(bool* bEnabled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_GameModifierSettings_C", "IsEnabled");

	Params::BPI_GameModifierSettings_C_IsEnabled Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bEnabled != nullptr)
		*bEnabled = std::move(Parms.bEnabled);
}


// Function BPI_GameModifierSettings.BPI_GameModifierSettings_C.GetTravelURLOptions
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           Options                                                (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)

void IBPI_GameModifierSettings_C::GetTravelURLOptions(class FString* Options)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_GameModifierSettings_C", "GetTravelURLOptions");

	Params::BPI_GameModifierSettings_C_GetTravelURLOptions Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Options != nullptr)
		*Options = Parms.Options;
}

}

