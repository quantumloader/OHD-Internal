#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: DonkehFrameworkComms

#include "Basic.hpp"

#include "Engine_classes.hpp"
#include "DonkehFrameworkComms_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "CoreUObject_classes.hpp"


namespace SDK
{

// Class DonkehFrameworkComms.CreateCommChannelCallbackProxy
// 0x0058 (0x0088 - 0x0030)
class UCreateCommChannelCallbackProxy final  : public UBlueprintAsyncActionBase
{
public:
	FMulticastInlineDelegateProperty_             OnPerformSetup;                                    // 0x0030(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             OnSuccess;                                         // 0x0040(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             OnFailure;                                         // 0x0050(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class APlayerController*                      CreateChannelOwnerPC;                              // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UDFCommChannelDefinition*               CreateChannelDef;                                  // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_E8B[0x18];                                     // 0x0070(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UCreateCommChannelCallbackProxy* CreateCommChannelFor(class APlayerController* Player, class UDFCommChannelDefinition* ChannelDef, class FName ChannelNameOverride);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"CreateCommChannelCallbackProxy">();
	}
	static class UCreateCommChannelCallbackProxy* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCreateCommChannelCallbackProxy>();
	}
};

// Class DonkehFrameworkComms.DFCommChannel
// 0x0068 (0x0090 - 0x0028)
class UDFCommChannel final  : public UObject
{
public:
	uint8                                         Pad_E8C[0x8];                                      // 0x0028(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	uint8                                         bChannelPreInitialized : 1;                        // 0x0030(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnTemplate, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate))
	uint8                                         bChannelClosed : 1;                                // 0x0030(0x0001)(BitIndex: 0x01, PropSize: 0x0001 (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnTemplate, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate))
	uint8                                         bCompletedSetup : 1;                               // 0x0030(0x0001)(BitIndex: 0x02, PropSize: 0x0001 (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnTemplate, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate))
	uint8                                         bChannelOpenOnClient : 1;                          // 0x0030(0x0001)(BitIndex: 0x03, PropSize: 0x0001 (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnTemplate, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate))
	uint8                                         Pad_E8D[0x3];                                      // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   ChannelName;                                       // 0x0034(0x0008)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_E8E[0x4];                                      // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UDFCommChannelDefinition*               ChannelDefinition;                                 // 0x0040(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UObject*                                ChannelState;                                      // 0x0048(0x0008)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class UDFCommsFormatBase*>             AssociatedCommsFormats;                            // 0x0050(0x0010)(Edit, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_E8F[0x30];                                     // 0x0060(0x0030)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void SetChannelState(class UObject* NewChannelState);

	class FText GetChannelDisplayName() const;
	class FName GetChannelGroupNameIfValid() const;
	class FName GetChannelName() const;
	class FString GetChannelNameStr() const;
	bool HasFormat(class UDFCommsFormatBase* Format) const;
	bool IsReady() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DFCommChannel">();
	}
	static class UDFCommChannel* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDFCommChannel>();
	}
};

// Class DonkehFrameworkComms.DFCommChannelDefinition
// 0x0088 (0x00B8 - 0x0030)
class UDFCommChannelDefinition final  : public UDataAsset
{
public:
	class FName                                   ChannelName;                                       // 0x0030(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FText                                   ChannelDisplayName;                                // 0x0038(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPrivate)
	uint8                                         bInstanceChannelWithGroup : 1;                     // 0x0050(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate))
	uint8                                         Pad_E91[0x3];                                      // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   ChannelGroupName;                                  // 0x0054(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_E92[0x4];                                      // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 ChannelStateClass;                                 // 0x0060(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TMap<TSubclassOf<class UDFCommsFormatBase>, enum class EDFCommsFormatAccessRule> FormatAccessRules;                                 // 0x0068(0x0050)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPrivate)

public:
	bool InstancesChannelWithGroup() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DFCommChannelDefinition">();
	}
	static class UDFCommChannelDefinition* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDFCommChannelDefinition>();
	}
};

// Class DonkehFrameworkComms.DFCommChannelStateInterface
// 0x0000 (0x0028 - 0x0028)
class IDFCommChannelStateInterface final  : public IInterface
{
public:
	void BP_OnSetupState(struct FDFCommStateSetupParams& SetupParams);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DFCommChannelStateInterface">();
	}
	static class IDFCommChannelStateInterface* GetDefaultObj()
	{
		return GetDefaultObjImpl<IDFCommChannelStateInterface>();
	}
};

// Class DonkehFrameworkComms.DFCommChannelStateLibrary
// 0x0000 (0x0028 - 0x0028)
class UDFCommChannelStateLibrary final  : public UBlueprintFunctionLibrary
{
public:
	static class UDFCommChannel* GetOwningCommChannel(TScriptInterface<class IDFCommChannelStateInterface> ChannelState);
	static bool IsChannelStatePrepared(TScriptInterface<class IDFCommChannelStateInterface> ChannelState);
	static void NotifyChannelOfPreparedState(TScriptInterface<class IDFCommChannelStateInterface> ChannelState);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DFCommChannelStateLibrary">();
	}
	static class UDFCommChannelStateLibrary* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDFCommChannelStateLibrary>();
	}
};

// Class DonkehFrameworkComms.DFCommDeveloperSettings
// 0x00B8 (0x00F0 - 0x0038)
class UDFCommDeveloperSettings final  : public UDeveloperSettings
{
public:
	struct FSoftClassPath                         PlayerCommsCompClass;                              // 0x0038(0x0018)(Edit, ZeroConstructor, Config, NoClear, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSet<struct FDFCommsFormatEntry>              CommsFormatDefinitions;                            // 0x0050(0x0050)(Edit, Config, NativeAccessSpecifierPublic)
	TSet<struct FDFCommChannelEntry>              CommChannelDefinitions;                            // 0x00A0(0x0050)(Edit, Config, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DFCommDeveloperSettings">();
	}
	static class UDFCommDeveloperSettings* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDFCommDeveloperSettings>();
	}
};

// Class DonkehFrameworkComms.DFCommsFormatBase
// 0x00A8 (0x00D0 - 0x0028)
class UDFCommsFormatBase : public UObject
{
public:
	uint8                                         bSingleChannelUsageOnly : 1;                       // 0x0028(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate))
	uint8                                         bRequiresValidSingleChannelAssignment : 1;         // 0x0028(0x0001)(BitIndex: 0x01, PropSize: 0x0001 (Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate))
	uint8                                         Pad_E94[0x17];                                     // 0x0029(0x0017)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDFGenericChannelMsg                   LastReceivedCommMsg;                               // 0x0040(0x0038)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnTemplate, Transient, EditConst, NativeAccessSpecifierPrivate)
	uint8                                         Pad_E95[0x50];                                     // 0x0078(0x0050)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   FormatName;                                        // 0x00C8(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	bool CanReadFromChannel(class FName ChannelName) const;
	bool CanWriteToChannel(class FName ChannelName) const;
	bool HasAccessToChannel(class FName ChannelName, enum class EDFCommsFormatAccessRule AccessRulesToCheck) const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DFCommsFormatBase">();
	}
	static class UDFCommsFormatBase* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDFCommsFormatBase>();
	}
};

// Class DonkehFrameworkComms.DFCommStatics
// 0x0000 (0x0028 - 0x0028)
class UDFCommStatics final  : public UBlueprintFunctionLibrary
{
public:
	static void ClearCurrentExclusiveChannelForFormat(class APlayerController* Player, class UDFCommsFormatBase* FormatToUpdate);
	static void ClearCurrentExclusiveChannelForFormatByName(class APlayerController* Player, class FName FormatNameToUpdate);
	static class UDFCommChannel* CommsFormatGetExclusiveChannel(class UDFCommsFormatBase* Format);
	static class UDFCommChannel* CommsFormatGetExclusiveChannelByName(class APlayerController* PlayerFormatOwner, class FName FormatName);
	static bool CommsFormatHasExclusiveChannel(class UDFCommsFormatBase* Format);
	static bool CommsFormatHasExclusiveChannelByName(class APlayerController* PlayerFormatOwner, class FName FormatName);
	static bool CommsFormatUsesChannel(class APlayerController* Player, class UDFCommsFormatBase* Format, class UDFCommChannel* ChannelToCheck);
	static bool CommsFormatUsesChannelByName(class APlayerController* Player, class FName FormatName, class FName ChannelNameToCheck);
	static bool FindCommsComponentByPlayer(class APlayerController* Player, class UDFPlayerCommsComponent** OutPlayerCommsComp);
	static bool PlayerHasCommChannel(class APlayerController* Player, class UDFCommChannel* Channel);
	static bool PlayerHasCommChannelByName(class APlayerController* Player, class FName ChannelName);
	static void SendCommsViaChannel(class APlayerController* PlayerSender, class UDFCommsFormatBase* FormatToUse, class UDFCommChannel* ReceivingChannel, struct FDFGenericChannelMsg* MsgToSend, bool bUseChannelAsNewExclusive);
	static void SendCommsViaChannelByName(class APlayerController* PlayerSender, class FName FormatName, class FName ReceivingChannelName, struct FDFGenericChannelMsg* MsgToSend, bool bUseChannelAsNewExclusive);
	static void UpdateExclusiveChannelForFormat(class APlayerController* Player, class UDFCommsFormatBase* FormatToUpdate, class UDFCommChannel* SingleChannelToUse);
	static void UpdateExclusiveChannelForFormatByName(class APlayerController* Player, class FName FormatNameToUpdate, class FName SingleChannelNameToUse);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DFCommStatics">();
	}
	static class UDFCommStatics* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDFCommStatics>();
	}
};

// Class DonkehFrameworkComms.DFCommWorldSubsystem
// 0x0000 (0x0030 - 0x0030)
class UDFCommWorldSubsystem final  : public UWorldSubsystem
{
public:
	static class UDFPlayerCommsComponent* InitPlayerComms(class APlayerController* Player);

	void GameModePostLogin(class AGameModeBase* GameMode, class APlayerController* NewPlayer);
	void PostSeamlessTravelPCDestroyed(class AActor* DestroyedPlayerActor);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DFCommWorldSubsystem">();
	}
	static class UDFCommWorldSubsystem* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDFCommWorldSubsystem>();
	}
};

// Class DonkehFrameworkComms.DFPlayerCommsComponent
// 0x3A10 (0x3AC0 - 0x00B0)
class UDFPlayerCommsComponent final  : public UActorComponent
{
public:
	TMap<class FName, class UDFCommsFormatBase*>  CommsFormats;                                      // 0x00B0(0x0050)(Transient, NativeAccessSpecifierPrivate)
	struct FDFCommChannelMap                      OpenCommChannels;                                  // 0x0100(0x0170)(Net, Transient, NativeAccessSpecifierPrivate)
	struct FDFChannelMsgRecord                    MsgSendBuffer[0x64];                               // 0x0270(0x0048)(Transient, NativeAccessSpecifierPrivate)
	TArray<struct FDFChannelMsgRecord>            QueuedMsgsToSend;                                  // 0x1E90(0x0010)(ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FDFChannelMsgRecord                    MsgRecvBuffer[0x64];                               // 0x1EA0(0x0048)(Transient, NativeAccessSpecifierPrivate)

public:
	void ClearCurrentExclusiveChannelForCommsFormat(class UDFCommsFormatBase* Format);
	void ClearCurrentExclusiveChannelForCommsFormatByName(class FName& FormatName);
	void ClientClearCurrentExclusiveChannelForCommsFormat(class FName& FormatName);
	void ClientRecvCommMsgFromChannel(class FName& SourceFormatName, class UDFCommChannel* SourceChannel, struct FDFGenericChannelMsg& ReceivedCommMsg);
	void ClientUpdateExclusiveChannelToUseForCommsFormat(class FName& FormatName, class UDFCommChannel* SingleChannelToUse);
	void ReceiveCommChannelAdded(class UDFCommChannel* AddedChannel);
	void ReceiveCommChannelPreRemoved(class UDFCommChannel* RemovedChannel);
	void RemoveAllCommChannels();
	void RemoveCommChannel(class UDFCommChannel* ChannelToRemove);
	void RemoveCommChannelByName(class FName ChannelNameToRemove);
	void SendCommMsgViaChannel(class UDFCommsFormatBase* FormatToUse, class UDFCommChannel* ReceivingChannel, struct FDFGenericChannelMsg* CommMsgToSend, bool bUseChannelAsNewExclusive);
	void SendCommMsgViaChannelByName(class FName& FormatName, class FName& ReceivingChannelName, struct FDFGenericChannelMsg* CommMsgToSend, bool bUseChannelAsNewExclusive);
	void ServerChannelOpened(class UDFCommChannel* AckedChannel);
	void ServerClearCurrentExclusiveChannelForCommsFormat(class FName& FormatName);
	void ServerRequestExclusiveChannelUsedForCommsFormat(class FName& RequestedFormatName);
	void ServerSendCommMsgViaChannel(class FName& FormatName, class UDFCommChannel* ReceivingChannel, const struct FDFGenericChannelMsg& CommMsg);
	void ServerSendCommMsgViaExclChannel(class FName& FormatName, class UDFCommChannel* ReceivingChannel, const struct FDFGenericChannelMsg& CommMsg);
	void ServerUpdateExclusiveChannelToUseForCommsFormat(class FName& FormatName, class UDFCommChannel* SingleChannelToUse);
	void UpdateExclusiveChannelToUseForCommsFormat(class UDFCommsFormatBase* Format, class UDFCommChannel* SingleChannelToUse);
	void UpdateExclusiveChannelToUseForCommsFormatByName(class FName& FormatName, class FName& SingleChannelNameToUse);

	bool CanRecvCommMsgViaChannel(class FName& SourceFormatName, class FName& SourceChannelName, struct FDFGenericChannelMsg& CommMsgToReceive) const;
	bool CanSendAndRecvCommMsgViaChannel(class FName& FormatName, class FName& ChannelName, struct FDFGenericChannelMsg& CommMsg) const;
	bool CanSendCommMsgViaChannel(class UDFCommsFormatBase* ReceivingFormat, class UDFCommChannel* ReceivingChannel, struct FDFGenericChannelMsg& CommMsgToSend, bool bUseChannelAsNewExclusive) const;
	bool ContainsAssociatedCommsFormat(class FName FormatName) const;
	bool ContainsCommChannel(class UDFCommChannel* ChannelToCheck) const;
	bool ContainsCommChannelByName(class FName ChannelNameToCheck) const;
	bool FindAssociatedCommsFormat(class FName FormatName, class UDFCommsFormatBase** OutFormatFound) const;
	bool FindCommChannel(class FName ChannelName, class UDFCommChannel** OutChannelFound) const;
	bool FormatHasExclusiveChannel(class UDFCommsFormatBase* Format) const;
	bool FormatHasExclusiveChannelByName(class FName& FormatName) const;
	bool FormatUsesChannel(class UDFCommsFormatBase* Format, class UDFCommChannel* ChannelToCheck) const;
	bool FormatUsesChannelByName(class FName& FormatName, class FName& ChannelNameToCheck) const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DFPlayerCommsComponent">();
	}
	static class UDFPlayerCommsComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDFPlayerCommsComponent>();
	}
};

// Class DonkehFrameworkComms.DFTextCommsFormat
// 0x0010 (0x00E0 - 0x00D0)
class UDFTextCommsFormat final  : public UDFCommsFormatBase
{
public:
	FMulticastInlineDelegateProperty_             OnChatMsgReceived;                                 // 0x00D0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DFTextCommsFormat">();
	}
	static class UDFTextCommsFormat* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDFTextCommsFormat>();
	}
};

// Class DonkehFrameworkComms.DFVOIPCommsFormat
// 0x0030 (0x0100 - 0x00D0)
class UDFVOIPCommsFormat final  : public UDFCommsFormatBase
{
public:
	FMulticastInlineDelegateProperty_             OnPlayerTalkingStateChangedOnChannel;              // 0x00D0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_EB0[0x20];                                     // 0x00E0(0x0020)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnTalkerPSDestroyed(class AActor* DestroyedPS);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DFVOIPCommsFormat">();
	}
	static class UDFVOIPCommsFormat* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDFVOIPCommsFormat>();
	}
};

// Class DonkehFrameworkComms.DFVOIPCommStatics
// 0x0000 (0x0028 - 0x0028)
class UDFVOIPCommStatics final  : public UBlueprintFunctionLibrary
{
public:
	static void ApplyVOIPTalkerSettingsForPlayer(class APlayerState* TalkerPlayerState, uint8 ListenerLocalUserNum);
	static const struct FDFPlayerVOIPTalkingState GetValidVoiceEntryForPlayer(class APlayerState* PlayerState);
	static class UVoipListenerSynthComponent* GetVoiceSynthComponentForVOIPTalker(class UVOIPTalker* Talker);
	static class UVoipListenerSynthComponent* GetVoiceSynthOwnerOfAudioComponent(class UAudioComponent* TalkerAudioComp);
	static bool IsPlayerTalkerPendingReset(class APlayerState* PlayerState);
	static bool IsPlayerTalking(class APlayerState* PlayerState);
	static bool IsPlayerTalkingOverChannel(class APlayerState* PlayerState, class UDFCommChannel* TalkChannel);
	static bool WasPlayerTalking(class APlayerState* PlayerState);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DFVOIPCommStatics">();
	}
	static class UDFVOIPCommStatics* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDFVOIPCommStatics>();
	}
};

}

