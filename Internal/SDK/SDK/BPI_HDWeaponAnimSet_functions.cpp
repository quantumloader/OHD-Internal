#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPI_HDWeaponAnimSet

#include "Basic.hpp"

#include "BPI_HDWeaponAnimSet_classes.hpp"
#include "BPI_HDWeaponAnimSet_parameters.hpp"


namespace SDK
{

// Function BPI_HDWeaponAnimSet.BPI_HDWeaponAnimSet_C.GetLocoAnimSet
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// TMap<class FName, class UAnimSequenceBase*>OutAnimSet                                             (Parm, OutParm)

void IBPI_HDWeaponAnimSet_C::GetLocoAnimSet(TMap<class FName, class UAnimSequenceBase*>* OutAnimSet) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_HDWeaponAnimSet_C", "GetLocoAnimSet");

	Params::BPI_HDWeaponAnimSet_C_GetLocoAnimSet Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (OutAnimSet != nullptr)
		*OutAnimSet = Parms.OutAnimSet;
}


// Function BPI_HDWeaponAnimSet.BPI_HDWeaponAnimSet_C.GetLocoTPPAnimSet
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// TMap<class FName, class UAnimSequenceBase*>OutAnimSet                                             (Parm, OutParm)

void IBPI_HDWeaponAnimSet_C::GetLocoTPPAnimSet(TMap<class FName, class UAnimSequenceBase*>* OutAnimSet) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_HDWeaponAnimSet_C", "GetLocoTPPAnimSet");

	Params::BPI_HDWeaponAnimSet_C_GetLocoTPPAnimSet Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (OutAnimSet != nullptr)
		*OutAnimSet = Parms.OutAnimSet;
}


// Function BPI_HDWeaponAnimSet.BPI_HDWeaponAnimSet_C.ShouldUseMirroredLowerBodyLoco
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// bool                                    bOutUseMirrored                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_HDWeaponAnimSet_C::ShouldUseMirroredLowerBodyLoco(bool* bOutUseMirrored) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_HDWeaponAnimSet_C", "ShouldUseMirroredLowerBodyLoco");

	Params::BPI_HDWeaponAnimSet_C_ShouldUseMirroredLowerBodyLoco Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bOutUseMirrored != nullptr)
		*bOutUseMirrored = std::move(Parms.bOutUseMirrored);
}

}

