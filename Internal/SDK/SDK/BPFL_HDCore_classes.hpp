#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPFL_HDCore

#include "Basic.hpp"

#include "HDMain_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BPFL_HDCore.BPFL_HDCore_C
// 0x0000 (0x0028 - 0x0028)
class UBPFL_HDCore_C final  : public UBlueprintFunctionLibrary
{
public:
	static void GetPredefinedSquadNameByIndex(int32 SquadCreationIdx, class UObject* __WorldContext, class FText* SquadName, const class FString& CallFunc_GetPhoneticCodeWordByIndex_CodeWord, class FText CallFunc_Conv_StringToText_ReturnValue);
	static void AbbreviateString(const class FString& SourceString, int32 MaxStartLength, int32 MaxEndLength, const class FString& Separator, class UObject* __WorldContext, class FString* AbbrevString, const class FString& CallFunc_Left_ReturnValue, int32 CallFunc_Len_ReturnValue, const class FString& CallFunc_Concat_StrStr_ReturnValue, int32 CallFunc_Subtract_IntInt_ReturnValue, bool CallFunc_Greater_IntInt_ReturnValue, int32 CallFunc_Min_ReturnValue, const class FString& CallFunc_Right_ReturnValue, const class FString& CallFunc_Concat_StrStr_ReturnValue_1);
	static void GetPhoneticCodeWordByCharacter(const class FString& LetterChar, class UObject* __WorldContext, class FString* CodeWord, int32 CallFunc_GetIndexForPhoneticCodeWord_LetterIdx, const class FString& CallFunc_GetPhoneticCodeWordByIndex_CodeWord);
	static void GetPhoneticCodeWordByIndex(int32 LetterIdx, class UObject* __WorldContext, class FString* CodeWord, int32 Temp_int_Variable, int32 CallFunc_Clamp_ReturnValue, const class FString& Temp_string_Variable, const class FString& Temp_string_Variable_1, const class FString& Temp_string_Variable_2, const class FString& Temp_string_Variable_3, const class FString& Temp_string_Variable_4, const class FString& Temp_string_Variable_5, const class FString& Temp_string_Variable_6, const class FString& Temp_string_Variable_7, const class FString& Temp_string_Variable_8, const class FString& Temp_string_Variable_9, const class FString& Temp_string_Variable_10, const class FString& Temp_string_Variable_11, const class FString& Temp_string_Variable_12, const class FString& Temp_string_Variable_13, const class FString& Temp_string_Variable_14, const class FString& Temp_string_Variable_15, const class FString& Temp_string_Variable_16, const class FString& Temp_string_Variable_17, const class FString& Temp_string_Variable_18, const class FString& Temp_string_Variable_19, const class FString& Temp_string_Variable_20, const class FString& Temp_string_Variable_21, const class FString& Temp_string_Variable_22, const class FString& Temp_string_Variable_23, const class FString& Temp_string_Variable_24, const class FString& Temp_string_Variable_25, const class FString& Temp_string_Variable_26, const class FString& Temp_string_Variable_27, const class FString& Temp_string_Variable_28, const class FString& Temp_string_Variable_29, const class FString& Temp_string_Variable_30, const class FString& Temp_string_Variable_31, const class FString& Temp_string_Variable_32, const class FString& Temp_string_Variable_33, const class FString& Temp_string_Variable_34, const class FString& Temp_string_Variable_35, const class FString& K2Node_Select_Default);
	static void GetIndexForPredefinedSquadName(class FText SquadName, class UObject* __WorldContext, int32* SquadNameIdx, const class FString& CallFunc_Conv_TextToString_ReturnValue, int32 CallFunc_GetIndexForPhoneticCodeWord_LetterIdx);
	static void GetIndexForPhoneticCodeWord(const class FString& CodeWord, class UObject* __WorldContext, int32* LetterIdx, bool Temp_bool_Variable, const class FString& CallFunc_ToUpper_ReturnValue, int32 CallFunc_GetCharacterAsNumber_ReturnValue, bool CallFunc_InRange_IntInt_ReturnValue, int32 CallFunc_Subtract_IntInt_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue, int32 CallFunc_Subtract_IntInt_ReturnValue_1, int32 K2Node_Select_Default);
	static void GetControllerFromPlayerState(class APlayerState* PlayerState, class UObject* __WorldContext, class AController** OwnerC, class AActor* CallFunc_GetOwner_ReturnValue, class AController* K2Node_DynamicCast_AsController, bool K2Node_DynamicCast_bSuccess);
	static void GetPlayerControllerFromPlayerState(class APlayerState* PlayerState, class UObject* __WorldContext, class APlayerController** OwnerPC, class AActor* CallFunc_GetOwner_ReturnValue, class APlayerController* K2Node_DynamicCast_AsPlayer_Controller, bool K2Node_DynamicCast_bSuccess);
	static void GetAllMapAssets(class UObject* __WorldContext, bool* bSuccess, TArray<struct FAssetData>* LevelAssets, TArray<class FName>& K2Node_MakeArray_Array, TScriptInterface<class IAssetRegistry> CallFunc_GetAssetRegistry_ReturnValue, const struct FARFilter& K2Node_MakeStruct_ARFilter, TArray<struct FAssetData>& CallFunc_GetAssets_OutAssetData, bool CallFunc_GetAssets_ReturnValue);
	static void SplitLoadedPrimaryAssetIds(TArray<struct FPrimaryAssetId>& AssetIds, class UObject* __WorldContext, TArray<struct FPrimaryAssetId>* UnloadedAssetIds, TArray<class UObject*>* LoadedAssets, const TArray<class UObject*>& LoadedObjects, const TArray<struct FPrimaryAssetId>& UnloadedIds, int32 CallFunc_Array_Length_ReturnValue, int32 Temp_int_Array_Index_Variable, int32 Temp_int_Loop_Counter_Variable, const struct FPrimaryAssetId& CallFunc_Array_Get_Item, class UObject* CallFunc_GetObjectFromPrimaryAssetId_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, bool CallFunc_IsValid_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue, int32 CallFunc_Array_Add_ReturnValue, int32 CallFunc_Array_Add_ReturnValue_1);
	static void SplitLoadedPrimaryAssetClassIds(TArray<struct FPrimaryAssetId>& AssetIds, class UObject* __WorldContext, TArray<struct FPrimaryAssetId>* UnloadedAssetIds, TArray<class UClass*>* LoadedAssetClasses, const TArray<class UClass*>& LoadedClasses, const TArray<struct FPrimaryAssetId>& UnloadedIds, int32 CallFunc_Array_Length_ReturnValue, int32 Temp_int_Array_Index_Variable, int32 Temp_int_Loop_Counter_Variable, const struct FPrimaryAssetId& CallFunc_Array_Get_Item, class UClass* CallFunc_GetClassFromPrimaryAssetId_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, bool CallFunc_IsValidClass_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue, int32 CallFunc_Array_Add_ReturnValue, int32 CallFunc_Array_Add_ReturnValue_1);
	static void AddOption(class FString& Options, class FString& StrToAdd, class UObject* __WorldContext, const class FString& Temp_string_Variable, bool CallFunc_IsEmpty_ReturnValue, const class FString& Temp_string_Variable_1, bool Temp_bool_Variable, const class FString& K2Node_Select_Default, const class FString& CallFunc_Concat_StrStr_ReturnValue, const class FString& CallFunc_Concat_StrStr_ReturnValue_1);
	static void GetContentRootPathFromPackageName(class FString& PackageName, class UObject* __WorldContext, bool* bSuccess, class FString* ContentRootPath, bool CallFunc_StartsWith_ReturnValue, int32 CallFunc_FindSubstring_ReturnValue, bool CallFunc_NotEqual_IntInt_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue, const class FString& CallFunc_Mid_ReturnValue);
	static void GetContentRootFromPackageName(class FString& PackageName, class UObject* __WorldContext, bool* bSuccess, class FString* ContentRootName, bool Temp_bool_Variable, bool CallFunc_GetContentRootPathFromPackageName_bSuccess, const class FString& CallFunc_GetContentRootPathFromPackageName_ContentRootPath, const class FString& Temp_string_Variable, int32 CallFunc_FindSubstring_ReturnValue, int32 CallFunc_Subtract_IntInt_ReturnValue, const class FString& CallFunc_Mid_ReturnValue, const class FString& K2Node_Select_Default);
	static void GetPluginDisplayNameFromPath(class FString& AssetPath, class UObject* __WorldContext, class FString* ModName, bool Temp_bool_Variable, bool CallFunc_GetContentRootFromPackageName_bSuccess, const class FString& CallFunc_GetContentRootFromPackageName_ContentRootName, const class FString& Temp_string_Variable, const class FString& CallFunc_GetPluginFriendlyName_ReturnValue, bool CallFunc_IsEmpty_ReturnValue, bool Temp_bool_Variable_1, TArray<class FString>& K2Node_MakeArray_Array, bool CallFunc_Array_Contains_ReturnValue, const class FString& K2Node_Select_Default, const class FString& K2Node_Select_Default_1);
	static void GetPackageShortName(class FString& LongName, class UObject* __WorldContext, bool* bSuccess, class FString* ShortName, bool CallFunc_StartsWith_ReturnValue, int32 CallFunc_Len_ReturnValue, int32 CallFunc_FindSubstring_ReturnValue, bool CallFunc_NotEqual_IntInt_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue, const class FString& CallFunc_Mid_ReturnValue);
	static void FindMapIdByDisplayName(class FText& MapDisplayName, TArray<struct FPrimaryAssetId>& MapIds, class UObject* __WorldContext, struct FPrimaryAssetId* FoundMapId, int32 Temp_int_Array_Index_Variable, int32 CallFunc_Array_Length_ReturnValue, const struct FPrimaryAssetId& CallFunc_Array_Get_Item, class FText CallFunc_GetMapAssetNameForDisplay_ReturnValue, int32 Temp_int_Loop_Counter_Variable, bool CallFunc_EqualEqual_IgnoreCase_TextText_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue);
	static void CheckEntitlement(TArray<struct FFEntitlementDefinition>& Entitlements, class UObject* __WorldContext, bool* bEntitled, int32 CallFunc_Array_Length_ReturnValue, int32 Temp_int_Array_Index_Variable, int32 Temp_int_Loop_Counter_Variable, const struct FFEntitlementDefinition& CallFunc_Array_Get_Item, bool CallFunc_Less_IntInt_ReturnValue, bool CallFunc_OwnsAppBP_ReturnValue, bool CallFunc_HasDLCBP_ReturnValue, bool K2Node_SwitchEnum_CmpSuccess, int32 CallFunc_Add_IntInt_ReturnValue);

	static void GetHDPlayerControllerBP(int32 PlayerIndex, class UObject* __WorldContext, class ABP_HDPlayerControllerBase_C** HDPC, class APlayerController* CallFunc_GetPlayerController_ReturnValue, class ABP_HDPlayerControllerBase_C* K2Node_DynamicCast_AsBP_HDPlayer_Controller_Base, bool K2Node_DynamicCast_bSuccess);
	static void GetHDPlayerCharacterBP(int32 PlayerIndex, class UObject* __WorldContext, class ABP_HDPlayerCharacterBase_C** HDPlayerChar, class ACharacter* CallFunc_GetPlayerCharacter_ReturnValue, class ABP_HDPlayerCharacterBase_C* K2Node_DynamicCast_AsBP_HDPlayer_Character_Base, bool K2Node_DynamicCast_bSuccess);
	static void GetHDGameInstance(class UObject* __WorldContext, class UHDGameInstance** HDGI, class UGameInstance* CallFunc_GetGameInstance_ReturnValue, class UHDGameInstance* K2Node_DynamicCast_AsHDGame_Instance, bool K2Node_DynamicCast_bSuccess);
	static void GetHDGameMode(class UObject* __WorldContext, class AHDBaseGameMode** HDGame, class AGameModeBase* CallFunc_GetGameMode_ReturnValue, class AHDBaseGameMode* K2Node_DynamicCast_AsHDBase_Game_Mode, bool K2Node_DynamicCast_bSuccess);
	static void GetHDGameState(class UObject* __WorldContext, class AHDGameState** HDGameState, class AGameStateBase* CallFunc_GetGameState_ReturnValue, class AHDGameState* K2Node_DynamicCast_AsHDGame_State, bool K2Node_DynamicCast_bSuccess);
	static void GetHDGameUserSettings(class UObject* __WorldContext, class UTBGameUserSettings** HDGameUserSettings, class UGameUserSettings* CallFunc_GetGameUserSettings_ReturnValue, bool CallFunc_IsValid_ReturnValue, class UTBGameUserSettings* K2Node_DynamicCast_AsTBGame_User_Settings, bool K2Node_DynamicCast_bSuccess);
	static void GetHDHUDBP(int32 PlayerIndex, class UObject* __WorldContext, class ABP_HDHUDBase_C** HDHUD, class APlayerController* CallFunc_GetPlayerController_ReturnValue, class AHUD* CallFunc_GetHUD_ReturnValue, class ABP_HDHUDBase_C* K2Node_DynamicCast_AsBP_HDHUDBase, bool K2Node_DynamicCast_bSuccess);
	static void GetHDTeamStateForTeam(enum class EHDTeam Team, class UObject* __WorldContext, class AHDTeamState** HDTeamState, class ADFTeamState* CallFunc_GetTeamStateFromTeamId_ReturnValue, class AHDTeamState* K2Node_DynamicCast_AsTeam_State__HD_, bool K2Node_DynamicCast_bSuccess);
	static void GetHDFactionInfoForTeam(enum class EHDTeam Team, class UObject* __WorldContext, class UClass** HDFactionInfoClass, class AHDTeamState* CallFunc_GetHDTeamStateForTeam_HDTeamState, class UClass* K2Node_ClassDynamicCast_AsBP_HDFaction_Info_Base, bool K2Node_ClassDynamicCast_bSuccess);
	static void GetBluforOpforTeamStateForTeam(enum class EHDTeam Team, class UObject* __WorldContext, class AHDTeamState** HDTeamState, enum class EHDTeam Temp_byte_Variable, class AHDGameState* CallFunc_GetHDGameState_HDGameState, class AHDTeamState* Temp_object_Variable, class AHDTeamState* K2Node_Select_Default);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"BPFL_HDCore_C">();
	}
	static class UBPFL_HDCore_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBPFL_HDCore_C>();
	}
};

}

