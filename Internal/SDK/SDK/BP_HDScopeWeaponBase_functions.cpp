#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_HDScopeWeaponBase

#include "Basic.hpp"

#include "BP_HDScopeWeaponBase_classes.hpp"
#include "BP_HDScopeWeaponBase_parameters.hpp"


namespace SDK
{

// Function BP_HDScopeWeaponBase.BP_HDScopeWeaponBase_C.ExecuteUbergraph_BP_HDScopeWeaponBase
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    CallFunc_IsValid_ReturnValue                           (ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Temp_bool_Has_Been_Initd_Variable                      (ZeroConstructor, IsPlainOldData, NoDestructor)
// float                                   K2Node_Event_DeltaSeconds                              (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    CallFunc_IsValid_ReturnValue_1                         (ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    CallFunc_IsValid_ReturnValue_2                         (ZeroConstructor, IsPlainOldData, NoDestructor)
// class UMaterialInstanceDynamic*         CallFunc_CreateDynamicMaterialInstance_ReturnValue     (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UMaterialInstanceDynamic*         CallFunc_CreateDynamicMaterialInstance_ReturnValue_1   (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class ADFBaseCharacter*                 CallFunc_GetPawnOwner_ReturnValue                      (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class ADFBaseCharacter*                 CallFunc_GetPawnOwner_ReturnValue_1                    (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    CallFunc_IsLocallyPlayerControlled_ReturnValue         (ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    CallFunc_IsLocallyPlayerControlled_ReturnValue_1       (ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Temp_bool_IsClosed_Variable                            (ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    K2Node_Event_bPlayAnimAndWait                          (ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    K2Node_Event_bLeavingPawnInventory                     (ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    CallFunc_IsUnEquipping_ReturnValue                     (ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    CallFunc_IsEquipping_ReturnValue                       (ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    CallFunc_BooleanOR_ReturnValue                         (ZeroConstructor, IsPlainOldData, NoDestructor)
// class UUserWidget*                      CallFunc_Create_ReturnValue                            (ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    CallFunc_IsFalling_ReturnValue                         (ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    CallFunc_IsAiming_ReturnValue                          (ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    CallFunc_IsAiming_ReturnValue_1                        (ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    CallFunc_HasLocallyPlayerControlledOwner_bLocalPlayerOwner(ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    CallFunc_SetupOwnerData_bValidOwnerData                (ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    CallFunc_HasValidOwnerData_bValidOwnerData             (ZeroConstructor, IsPlainOldData, NoDestructor)
// class ADFBaseCharacter*                 K2Node_Event_LastOwner                                 (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    CallFunc_IsEquipped_ReturnValue                        (ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    CallFunc_IsEquipping_ReturnValue_1                     (ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    CallFunc_Not_PreBool_ReturnValue                       (ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    CallFunc_Not_PreBool_ReturnValue_1                     (ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    CallFunc_BooleanAND_ReturnValue                        (ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    CallFunc_IsLocallyPlayerControlled_ReturnValue_2       (ZeroConstructor, IsPlainOldData, NoDestructor)
// class USceneComponent*                  K2Node_Event_Sight                                     (ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    CallFunc_ShouldUseScope_bUseScope                      (ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    CallFunc_ShouldUseScope_bUseScope_1                    (ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    CallFunc_Not_PreBool_ReturnValue_2                     (ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    CallFunc_BooleanAND_ReturnValue_1                      (ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FVector                          CallFunc_K2_GetComponentLocation_ReturnValue           (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector2D                        CallFunc_ProjectWorldLocationToScreen_ScreenLocation   (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    CallFunc_ProjectWorldLocationToScreen_ReturnValue      (ZeroConstructor, IsPlainOldData, NoDestructor)
// float                                   CallFunc_BreakVector2D_X                               (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   CallFunc_BreakVector2D_Y                               (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    CallFunc_EqualEqual_ObjectObject_ReturnValue           (ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    CallFunc_EqualEqual_ObjectObject_ReturnValue_1         (ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FVector                          CallFunc_K2_GetComponentLocation_ReturnValue_1         (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector2D                        CallFunc_ProjectWorldLocationToScreen_ScreenLocation_1 (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    CallFunc_ProjectWorldLocationToScreen_ReturnValue_1    (ZeroConstructor, IsPlainOldData, NoDestructor)
// float                                   CallFunc_Distance2D_ReturnValue                        (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   CallFunc_GetViewportSize_SizeX                         (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   CallFunc_GetViewportSize_SizeY                         (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   CallFunc_Divide_IntInt_ReturnValue                     (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   CallFunc_Subtract_IntInt_ReturnValue                   (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UGameUserSettings*                CallFunc_GetGameUserSettings_ReturnValue               (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   CallFunc_Conv_IntToFloat_ReturnValue                   (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   CallFunc_GetResolutionScaleInformationEx_CurrentScaleNormalized(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   CallFunc_GetResolutionScaleInformationEx_CurrentScaleValue(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   CallFunc_GetResolutionScaleInformationEx_MinScaleValue (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   CallFunc_GetResolutionScaleInformationEx_MaxScaleValue (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   CallFunc_Multiply_FloatFloat_ReturnValue               (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          CallFunc_MakeVector_ReturnValue                        (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FHitResult                       CallFunc_K2_AddRelativeLocation_SweepHitResult         (IsPlainOldData, NoDestructor, ContainsInstancedReference)

void ABP_HDScopeWeaponBase_C::ExecuteUbergraph_BP_HDScopeWeaponBase(int32 EntryPoint, bool CallFunc_IsValid_ReturnValue, bool Temp_bool_Has_Been_Initd_Variable, float K2Node_Event_DeltaSeconds, bool CallFunc_IsValid_ReturnValue_1, bool CallFunc_IsValid_ReturnValue_2, class UMaterialInstanceDynamic* CallFunc_CreateDynamicMaterialInstance_ReturnValue, class UMaterialInstanceDynamic* CallFunc_CreateDynamicMaterialInstance_ReturnValue_1, class ADFBaseCharacter* CallFunc_GetPawnOwner_ReturnValue, class ADFBaseCharacter* CallFunc_GetPawnOwner_ReturnValue_1, bool CallFunc_IsLocallyPlayerControlled_ReturnValue, bool CallFunc_IsLocallyPlayerControlled_ReturnValue_1, bool Temp_bool_IsClosed_Variable, bool K2Node_Event_bPlayAnimAndWait, bool K2Node_Event_bLeavingPawnInventory, bool CallFunc_IsUnEquipping_ReturnValue, bool CallFunc_IsEquipping_ReturnValue, bool CallFunc_BooleanOR_ReturnValue, class UUserWidget* CallFunc_Create_ReturnValue, bool CallFunc_IsFalling_ReturnValue, bool CallFunc_IsAiming_ReturnValue, bool CallFunc_IsAiming_ReturnValue_1, bool CallFunc_HasLocallyPlayerControlledOwner_bLocalPlayerOwner, bool CallFunc_SetupOwnerData_bValidOwnerData, bool CallFunc_HasValidOwnerData_bValidOwnerData, class ADFBaseCharacter* K2Node_Event_LastOwner, bool CallFunc_IsEquipped_ReturnValue, bool CallFunc_IsEquipping_ReturnValue_1, bool CallFunc_Not_PreBool_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue_1, bool CallFunc_BooleanAND_ReturnValue, bool CallFunc_IsLocallyPlayerControlled_ReturnValue_2, class USceneComponent* K2Node_Event_Sight, bool CallFunc_ShouldUseScope_bUseScope, bool CallFunc_ShouldUseScope_bUseScope_1, bool CallFunc_Not_PreBool_ReturnValue_2, bool CallFunc_BooleanAND_ReturnValue_1, const struct FVector& CallFunc_K2_GetComponentLocation_ReturnValue, const struct FVector2D& CallFunc_ProjectWorldLocationToScreen_ScreenLocation, bool CallFunc_ProjectWorldLocationToScreen_ReturnValue, float CallFunc_BreakVector2D_X, float CallFunc_BreakVector2D_Y, bool CallFunc_EqualEqual_ObjectObject_ReturnValue, bool CallFunc_EqualEqual_ObjectObject_ReturnValue_1, const struct FVector& CallFunc_K2_GetComponentLocation_ReturnValue_1, const struct FVector2D& CallFunc_ProjectWorldLocationToScreen_ScreenLocation_1, bool CallFunc_ProjectWorldLocationToScreen_ReturnValue_1, float CallFunc_Distance2D_ReturnValue, int32 CallFunc_GetViewportSize_SizeX, int32 CallFunc_GetViewportSize_SizeY, int32 CallFunc_Divide_IntInt_ReturnValue, int32 CallFunc_Subtract_IntInt_ReturnValue, class UGameUserSettings* CallFunc_GetGameUserSettings_ReturnValue, float CallFunc_Conv_IntToFloat_ReturnValue, float CallFunc_GetResolutionScaleInformationEx_CurrentScaleNormalized, float CallFunc_GetResolutionScaleInformationEx_CurrentScaleValue, float CallFunc_GetResolutionScaleInformationEx_MinScaleValue, float CallFunc_GetResolutionScaleInformationEx_MaxScaleValue, float CallFunc_Multiply_FloatFloat_ReturnValue, const struct FVector& CallFunc_MakeVector_ReturnValue, const struct FHitResult& CallFunc_K2_AddRelativeLocation_SweepHitResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HDScopeWeaponBase_C", "ExecuteUbergraph_BP_HDScopeWeaponBase");

	Params::BP_HDScopeWeaponBase_C_ExecuteUbergraph_BP_HDScopeWeaponBase Parms{};

	Parms.EntryPoint = EntryPoint;
	Parms.CallFunc_IsValid_ReturnValue = CallFunc_IsValid_ReturnValue;
	Parms.Temp_bool_Has_Been_Initd_Variable = Temp_bool_Has_Been_Initd_Variable;
	Parms.K2Node_Event_DeltaSeconds = K2Node_Event_DeltaSeconds;
	Parms.CallFunc_IsValid_ReturnValue_1 = CallFunc_IsValid_ReturnValue_1;
	Parms.CallFunc_IsValid_ReturnValue_2 = CallFunc_IsValid_ReturnValue_2;
	Parms.CallFunc_CreateDynamicMaterialInstance_ReturnValue = CallFunc_CreateDynamicMaterialInstance_ReturnValue;
	Parms.CallFunc_CreateDynamicMaterialInstance_ReturnValue_1 = CallFunc_CreateDynamicMaterialInstance_ReturnValue_1;
	Parms.CallFunc_GetPawnOwner_ReturnValue = CallFunc_GetPawnOwner_ReturnValue;
	Parms.CallFunc_GetPawnOwner_ReturnValue_1 = CallFunc_GetPawnOwner_ReturnValue_1;
	Parms.CallFunc_IsLocallyPlayerControlled_ReturnValue = CallFunc_IsLocallyPlayerControlled_ReturnValue;
	Parms.CallFunc_IsLocallyPlayerControlled_ReturnValue_1 = CallFunc_IsLocallyPlayerControlled_ReturnValue_1;
	Parms.Temp_bool_IsClosed_Variable = Temp_bool_IsClosed_Variable;
	Parms.K2Node_Event_bPlayAnimAndWait = K2Node_Event_bPlayAnimAndWait;
	Parms.K2Node_Event_bLeavingPawnInventory = K2Node_Event_bLeavingPawnInventory;
	Parms.CallFunc_IsUnEquipping_ReturnValue = CallFunc_IsUnEquipping_ReturnValue;
	Parms.CallFunc_IsEquipping_ReturnValue = CallFunc_IsEquipping_ReturnValue;
	Parms.CallFunc_BooleanOR_ReturnValue = CallFunc_BooleanOR_ReturnValue;
	Parms.CallFunc_Create_ReturnValue = CallFunc_Create_ReturnValue;
	Parms.CallFunc_IsFalling_ReturnValue = CallFunc_IsFalling_ReturnValue;
	Parms.CallFunc_IsAiming_ReturnValue = CallFunc_IsAiming_ReturnValue;
	Parms.CallFunc_IsAiming_ReturnValue_1 = CallFunc_IsAiming_ReturnValue_1;
	Parms.CallFunc_HasLocallyPlayerControlledOwner_bLocalPlayerOwner = CallFunc_HasLocallyPlayerControlledOwner_bLocalPlayerOwner;
	Parms.CallFunc_SetupOwnerData_bValidOwnerData = CallFunc_SetupOwnerData_bValidOwnerData;
	Parms.CallFunc_HasValidOwnerData_bValidOwnerData = CallFunc_HasValidOwnerData_bValidOwnerData;
	Parms.K2Node_Event_LastOwner = K2Node_Event_LastOwner;
	Parms.CallFunc_IsEquipped_ReturnValue = CallFunc_IsEquipped_ReturnValue;
	Parms.CallFunc_IsEquipping_ReturnValue_1 = CallFunc_IsEquipping_ReturnValue_1;
	Parms.CallFunc_Not_PreBool_ReturnValue = CallFunc_Not_PreBool_ReturnValue;
	Parms.CallFunc_Not_PreBool_ReturnValue_1 = CallFunc_Not_PreBool_ReturnValue_1;
	Parms.CallFunc_BooleanAND_ReturnValue = CallFunc_BooleanAND_ReturnValue;
	Parms.CallFunc_IsLocallyPlayerControlled_ReturnValue_2 = CallFunc_IsLocallyPlayerControlled_ReturnValue_2;
	Parms.K2Node_Event_Sight = K2Node_Event_Sight;
	Parms.CallFunc_ShouldUseScope_bUseScope = CallFunc_ShouldUseScope_bUseScope;
	Parms.CallFunc_ShouldUseScope_bUseScope_1 = CallFunc_ShouldUseScope_bUseScope_1;
	Parms.CallFunc_Not_PreBool_ReturnValue_2 = CallFunc_Not_PreBool_ReturnValue_2;
	Parms.CallFunc_BooleanAND_ReturnValue_1 = CallFunc_BooleanAND_ReturnValue_1;
	Parms.CallFunc_K2_GetComponentLocation_ReturnValue = std::move(CallFunc_K2_GetComponentLocation_ReturnValue);
	Parms.CallFunc_ProjectWorldLocationToScreen_ScreenLocation = std::move(CallFunc_ProjectWorldLocationToScreen_ScreenLocation);
	Parms.CallFunc_ProjectWorldLocationToScreen_ReturnValue = CallFunc_ProjectWorldLocationToScreen_ReturnValue;
	Parms.CallFunc_BreakVector2D_X = CallFunc_BreakVector2D_X;
	Parms.CallFunc_BreakVector2D_Y = CallFunc_BreakVector2D_Y;
	Parms.CallFunc_EqualEqual_ObjectObject_ReturnValue = CallFunc_EqualEqual_ObjectObject_ReturnValue;
	Parms.CallFunc_EqualEqual_ObjectObject_ReturnValue_1 = CallFunc_EqualEqual_ObjectObject_ReturnValue_1;
	Parms.CallFunc_K2_GetComponentLocation_ReturnValue_1 = std::move(CallFunc_K2_GetComponentLocation_ReturnValue_1);
	Parms.CallFunc_ProjectWorldLocationToScreen_ScreenLocation_1 = std::move(CallFunc_ProjectWorldLocationToScreen_ScreenLocation_1);
	Parms.CallFunc_ProjectWorldLocationToScreen_ReturnValue_1 = CallFunc_ProjectWorldLocationToScreen_ReturnValue_1;
	Parms.CallFunc_Distance2D_ReturnValue = CallFunc_Distance2D_ReturnValue;
	Parms.CallFunc_GetViewportSize_SizeX = CallFunc_GetViewportSize_SizeX;
	Parms.CallFunc_GetViewportSize_SizeY = CallFunc_GetViewportSize_SizeY;
	Parms.CallFunc_Divide_IntInt_ReturnValue = CallFunc_Divide_IntInt_ReturnValue;
	Parms.CallFunc_Subtract_IntInt_ReturnValue = CallFunc_Subtract_IntInt_ReturnValue;
	Parms.CallFunc_GetGameUserSettings_ReturnValue = CallFunc_GetGameUserSettings_ReturnValue;
	Parms.CallFunc_Conv_IntToFloat_ReturnValue = CallFunc_Conv_IntToFloat_ReturnValue;
	Parms.CallFunc_GetResolutionScaleInformationEx_CurrentScaleNormalized = CallFunc_GetResolutionScaleInformationEx_CurrentScaleNormalized;
	Parms.CallFunc_GetResolutionScaleInformationEx_CurrentScaleValue = CallFunc_GetResolutionScaleInformationEx_CurrentScaleValue;
	Parms.CallFunc_GetResolutionScaleInformationEx_MinScaleValue = CallFunc_GetResolutionScaleInformationEx_MinScaleValue;
	Parms.CallFunc_GetResolutionScaleInformationEx_MaxScaleValue = CallFunc_GetResolutionScaleInformationEx_MaxScaleValue;
	Parms.CallFunc_Multiply_FloatFloat_ReturnValue = CallFunc_Multiply_FloatFloat_ReturnValue;
	Parms.CallFunc_MakeVector_ReturnValue = std::move(CallFunc_MakeVector_ReturnValue);
	Parms.CallFunc_K2_AddRelativeLocation_SweepHitResult = std::move(CallFunc_K2_AddRelativeLocation_SweepHitResult);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HDScopeWeaponBase.BP_HDScopeWeaponBase_C.OnBraceAimEnd
// (BlueprintCallable, BlueprintEvent)

void ABP_HDScopeWeaponBase_C::OnBraceAimEnd()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HDScopeWeaponBase_C", "OnBraceAimEnd");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_HDScopeWeaponBase.BP_HDScopeWeaponBase_C.SetCurrentSight
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class USceneComponent*                  Sight                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_HDScopeWeaponBase_C::SetCurrentSight(class USceneComponent* Sight)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HDScopeWeaponBase_C", "SetCurrentSight");

	Params::BP_HDScopeWeaponBase_C_SetCurrentSight Parms{};

	Parms.Sight = Sight;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HDScopeWeaponBase.BP_HDScopeWeaponBase_C.ReceiveOnLeaveInventory
// (Event, Protected, BlueprintEvent)
// Parameters:
// class ADFBaseCharacter*                 LastOwner                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_HDScopeWeaponBase_C::ReceiveOnLeaveInventory(class ADFBaseCharacter* LastOwner)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HDScopeWeaponBase_C", "ReceiveOnLeaveInventory");

	Params::BP_HDScopeWeaponBase_C_ReceiveOnLeaveInventory Parms{};

	Parms.LastOwner = LastOwner;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HDScopeWeaponBase.BP_HDScopeWeaponBase_C.ResetAimOutGate
// (BlueprintCallable, BlueprintEvent)

void ABP_HDScopeWeaponBase_C::ResetAimOutGate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HDScopeWeaponBase_C", "ResetAimOutGate");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_HDScopeWeaponBase.BP_HDScopeWeaponBase_C.ReceiveOnUnEquip
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bPlayAnimAndWait                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bLeavingPawnInventory                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_HDScopeWeaponBase_C::ReceiveOnUnEquip(bool bPlayAnimAndWait, bool bLeavingPawnInventory)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HDScopeWeaponBase_C", "ReceiveOnUnEquip");

	Params::BP_HDScopeWeaponBase_C_ReceiveOnUnEquip Parms{};

	Parms.bPlayAnimAndWait = bPlayAnimAndWait;
	Parms.bLeavingPawnInventory = bLeavingPawnInventory;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HDScopeWeaponBase.BP_HDScopeWeaponBase_C.ReceiveOnEquipFinished
// (Event, Protected, BlueprintEvent)

void ABP_HDScopeWeaponBase_C::ReceiveOnEquipFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HDScopeWeaponBase_C", "ReceiveOnEquipFinished");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_HDScopeWeaponBase.BP_HDScopeWeaponBase_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_HDScopeWeaponBase_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HDScopeWeaponBase_C", "ReceiveTick");

	Params::BP_HDScopeWeaponBase_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HDScopeWeaponBase.BP_HDScopeWeaponBase_C.StartAimOutScope
// (BlueprintCallable, BlueprintEvent)

void ABP_HDScopeWeaponBase_C::StartAimOutScope()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HDScopeWeaponBase_C", "StartAimOutScope");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_HDScopeWeaponBase.BP_HDScopeWeaponBase_C.StartAimInScope
// (BlueprintCallable, BlueprintEvent)

void ABP_HDScopeWeaponBase_C::StartAimInScope()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HDScopeWeaponBase_C", "StartAimInScope");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_HDScopeWeaponBase.BP_HDScopeWeaponBase_C.UserConstructionScript
// (Event, Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Temp_int_Array_Index_Variable                          (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Temp_int_Loop_Counter_Variable                         (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   CallFunc_Add_IntInt_ReturnValue                        (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    CallFunc_IsValid_ReturnValue                           (ZeroConstructor, IsPlainOldData, NoDestructor)
// TArray<class UMaterialInterface*>       CallFunc_GetMaterials_ReturnValue                      (ReferenceParm, HasGetValueTypeHash)
// class UMaterialInterface*               CallFunc_Array_Get_Item                                (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   CallFunc_Array_Length_ReturnValue                      (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UMaterialInstanceDynamic*         CallFunc_CreateDynamicMaterialInstance_ReturnValue     (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    CallFunc_Less_IntInt_ReturnValue                       (ZeroConstructor, IsPlainOldData, NoDestructor)
// class UMaterial*                        CallFunc_GetBaseMaterial_ReturnValue                   (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    CallFunc_EqualEqual_ObjectObject_ReturnValue           (ZeroConstructor, IsPlainOldData, NoDestructor)
// float                                   CallFunc_Multiply_FloatFloat_ReturnValue               (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          CallFunc_MakeVector_ReturnValue                        (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FHitResult                       CallFunc_K2_AddRelativeLocation_SweepHitResult         (IsPlainOldData, NoDestructor, ContainsInstancedReference)

void ABP_HDScopeWeaponBase_C::UserConstructionScript(int32 Temp_int_Array_Index_Variable, int32 Temp_int_Loop_Counter_Variable, int32 CallFunc_Add_IntInt_ReturnValue, bool CallFunc_IsValid_ReturnValue, TArray<class UMaterialInterface*>& CallFunc_GetMaterials_ReturnValue, class UMaterialInterface* CallFunc_Array_Get_Item, int32 CallFunc_Array_Length_ReturnValue, class UMaterialInstanceDynamic* CallFunc_CreateDynamicMaterialInstance_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, class UMaterial* CallFunc_GetBaseMaterial_ReturnValue, bool CallFunc_EqualEqual_ObjectObject_ReturnValue, float CallFunc_Multiply_FloatFloat_ReturnValue, const struct FVector& CallFunc_MakeVector_ReturnValue, const struct FHitResult& CallFunc_K2_AddRelativeLocation_SweepHitResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HDScopeWeaponBase_C", "UserConstructionScript");

	Params::BP_HDScopeWeaponBase_C_UserConstructionScript Parms{};

	Parms.Temp_int_Array_Index_Variable = Temp_int_Array_Index_Variable;
	Parms.Temp_int_Loop_Counter_Variable = Temp_int_Loop_Counter_Variable;
	Parms.CallFunc_Add_IntInt_ReturnValue = CallFunc_Add_IntInt_ReturnValue;
	Parms.CallFunc_IsValid_ReturnValue = CallFunc_IsValid_ReturnValue;
	Parms.CallFunc_GetMaterials_ReturnValue = std::move(CallFunc_GetMaterials_ReturnValue);
	Parms.CallFunc_Array_Get_Item = CallFunc_Array_Get_Item;
	Parms.CallFunc_Array_Length_ReturnValue = CallFunc_Array_Length_ReturnValue;
	Parms.CallFunc_CreateDynamicMaterialInstance_ReturnValue = CallFunc_CreateDynamicMaterialInstance_ReturnValue;
	Parms.CallFunc_Less_IntInt_ReturnValue = CallFunc_Less_IntInt_ReturnValue;
	Parms.CallFunc_GetBaseMaterial_ReturnValue = CallFunc_GetBaseMaterial_ReturnValue;
	Parms.CallFunc_EqualEqual_ObjectObject_ReturnValue = CallFunc_EqualEqual_ObjectObject_ReturnValue;
	Parms.CallFunc_Multiply_FloatFloat_ReturnValue = CallFunc_Multiply_FloatFloat_ReturnValue;
	Parms.CallFunc_MakeVector_ReturnValue = std::move(CallFunc_MakeVector_ReturnValue);
	Parms.CallFunc_K2_AddRelativeLocation_SweepHitResult = std::move(CallFunc_K2_AddRelativeLocation_SweepHitResult);

	UObject::ProcessEvent(Func, &Parms);

	CallFunc_GetMaterials_ReturnValue = std::move(Parms.CallFunc_GetMaterials_ReturnValue);
}


// Function BP_HDScopeWeaponBase.BP_HDScopeWeaponBase_C.SetupOwnerData
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bValidOwnerData                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class AController*                      CallFunc_GetController_ReturnValue                     (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class ADFPlayerCameraManager*           K2Node_DynamicCast_AsDFPlayer_Camera_Manager           (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    K2Node_DynamicCast_bSuccess                            (ZeroConstructor, IsPlainOldData, NoDestructor)
// class AHDPlayerController*              K2Node_DynamicCast_AsHDPlayer_Controller               (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    K2Node_DynamicCast_bSuccess_1                          (ZeroConstructor, IsPlainOldData, NoDestructor)
// class ADFBaseCharacter*                 CallFunc_GetPawnOwner_ReturnValue                      (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class ABP_HDPlayerCharacterBase_C*      K2Node_DynamicCast_AsBP_HDPlayer_Character_Base        (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    K2Node_DynamicCast_bSuccess_2                          (ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    CallFunc_IsValid_ReturnValue                           (ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_HDScopeWeaponBase_C::SetupOwnerData(bool* bValidOwnerData, class AController* CallFunc_GetController_ReturnValue, class ADFPlayerCameraManager* K2Node_DynamicCast_AsDFPlayer_Camera_Manager, bool K2Node_DynamicCast_bSuccess, class AHDPlayerController* K2Node_DynamicCast_AsHDPlayer_Controller, bool K2Node_DynamicCast_bSuccess_1, class ADFBaseCharacter* CallFunc_GetPawnOwner_ReturnValue, class ABP_HDPlayerCharacterBase_C* K2Node_DynamicCast_AsBP_HDPlayer_Character_Base, bool K2Node_DynamicCast_bSuccess_2, bool CallFunc_IsValid_ReturnValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HDScopeWeaponBase_C", "SetupOwnerData");

	Params::BP_HDScopeWeaponBase_C_SetupOwnerData Parms{};

	Parms.CallFunc_GetController_ReturnValue = CallFunc_GetController_ReturnValue;
	Parms.K2Node_DynamicCast_AsDFPlayer_Camera_Manager = K2Node_DynamicCast_AsDFPlayer_Camera_Manager;
	Parms.K2Node_DynamicCast_bSuccess = K2Node_DynamicCast_bSuccess;
	Parms.K2Node_DynamicCast_AsHDPlayer_Controller = K2Node_DynamicCast_AsHDPlayer_Controller;
	Parms.K2Node_DynamicCast_bSuccess_1 = K2Node_DynamicCast_bSuccess_1;
	Parms.CallFunc_GetPawnOwner_ReturnValue = CallFunc_GetPawnOwner_ReturnValue;
	Parms.K2Node_DynamicCast_AsBP_HDPlayer_Character_Base = K2Node_DynamicCast_AsBP_HDPlayer_Character_Base;
	Parms.K2Node_DynamicCast_bSuccess_2 = K2Node_DynamicCast_bSuccess_2;
	Parms.CallFunc_IsValid_ReturnValue = CallFunc_IsValid_ReturnValue;

	UObject::ProcessEvent(Func, &Parms);

	if (bValidOwnerData != nullptr)
		*bValidOwnerData = std::move(Parms.bValidOwnerData);
}


// Function BP_HDScopeWeaponBase.BP_HDScopeWeaponBase_C.CleanupOwnerData
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_HDScopeWeaponBase_C::CleanupOwnerData()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HDScopeWeaponBase_C", "CleanupOwnerData");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_HDScopeWeaponBase.BP_HDScopeWeaponBase_C.ResetDefaultValues
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_HDScopeWeaponBase_C::ResetDefaultValues()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HDScopeWeaponBase_C", "ResetDefaultValues");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_HDScopeWeaponBase.BP_HDScopeWeaponBase_C.HasValidOwnerData
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    bCharAliveCheck                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bValidOwnerData                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    CallFunc_IsValid_ReturnValue                           (ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    CallFunc_IsValid_ReturnValue_1                         (ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    CallFunc_IsAlive_ReturnValue                           (ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    CallFunc_IsValid_ReturnValue_2                         (ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    CallFunc_IsValid_ReturnValue_3                         (ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    CallFunc_BooleanAND_ReturnValue                        (ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    CallFunc_BooleanAND_ReturnValue_1                      (ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    CallFunc_Not_PreBool_ReturnValue                       (ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    CallFunc_BooleanOR_ReturnValue                         (ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_HDScopeWeaponBase_C::HasValidOwnerData(bool bCharAliveCheck, bool* bValidOwnerData, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsValid_ReturnValue_1, bool CallFunc_IsAlive_ReturnValue, bool CallFunc_IsValid_ReturnValue_2, bool CallFunc_IsValid_ReturnValue_3, bool CallFunc_BooleanAND_ReturnValue, bool CallFunc_BooleanAND_ReturnValue_1, bool CallFunc_Not_PreBool_ReturnValue, bool CallFunc_BooleanOR_ReturnValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HDScopeWeaponBase_C", "HasValidOwnerData");

	Params::BP_HDScopeWeaponBase_C_HasValidOwnerData Parms{};

	Parms.bCharAliveCheck = bCharAliveCheck;
	Parms.CallFunc_IsValid_ReturnValue = CallFunc_IsValid_ReturnValue;
	Parms.CallFunc_IsValid_ReturnValue_1 = CallFunc_IsValid_ReturnValue_1;
	Parms.CallFunc_IsAlive_ReturnValue = CallFunc_IsAlive_ReturnValue;
	Parms.CallFunc_IsValid_ReturnValue_2 = CallFunc_IsValid_ReturnValue_2;
	Parms.CallFunc_IsValid_ReturnValue_3 = CallFunc_IsValid_ReturnValue_3;
	Parms.CallFunc_BooleanAND_ReturnValue = CallFunc_BooleanAND_ReturnValue;
	Parms.CallFunc_BooleanAND_ReturnValue_1 = CallFunc_BooleanAND_ReturnValue_1;
	Parms.CallFunc_Not_PreBool_ReturnValue = CallFunc_Not_PreBool_ReturnValue;
	Parms.CallFunc_BooleanOR_ReturnValue = CallFunc_BooleanOR_ReturnValue;

	UObject::ProcessEvent(Func, &Parms);

	if (bValidOwnerData != nullptr)
		*bValidOwnerData = std::move(Parms.bValidOwnerData);
}


// Function BP_HDScopeWeaponBase.BP_HDScopeWeaponBase_C.HasLocallyPlayerControlledOwner
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    bLocalPlayerOwner                                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    CallFunc_IsValid_ReturnValue                           (ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    CallFunc_IsLocalController_ReturnValue                 (ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_HDScopeWeaponBase_C::HasLocallyPlayerControlledOwner(bool* bLocalPlayerOwner, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsLocalController_ReturnValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HDScopeWeaponBase_C", "HasLocallyPlayerControlledOwner");

	Params::BP_HDScopeWeaponBase_C_HasLocallyPlayerControlledOwner Parms{};

	Parms.CallFunc_IsValid_ReturnValue = CallFunc_IsValid_ReturnValue;
	Parms.CallFunc_IsLocalController_ReturnValue = CallFunc_IsLocalController_ReturnValue;

	UObject::ProcessEvent(Func, &Parms);

	if (bLocalPlayerOwner != nullptr)
		*bLocalPlayerOwner = std::move(Parms.bLocalPlayerOwner);
}


// Function BP_HDScopeWeaponBase.BP_HDScopeWeaponBase_C.AimIn
// (Protected, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   CallFunc_Array_Length_ReturnValue                      (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Temp_int_Array_Index_Variable                          (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FWeightedBlendable               CallFunc_Array_Get_Item                                (NoDestructor)
// int32                                   CallFunc_Array_AddUnique_ReturnValue                   (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FWeightedBlendables              K2Node_MakeStruct_WeightedBlendables                   ()
// int32                                   CallFunc_Array_Find_ReturnValue                        (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FPostProcessSettings             K2Node_MakeStruct_PostProcessSettings                  ()
// bool                                    CallFunc_NotEqual_IntInt_ReturnValue                   (ZeroConstructor, IsPlainOldData, NoDestructor)
// int32                                   Temp_int_Loop_Counter_Variable                         (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    CallFunc_Less_IntInt_ReturnValue                       (ZeroConstructor, IsPlainOldData, NoDestructor)
// int32                                   CallFunc_Add_IntInt_ReturnValue                        (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    CallFunc_IsValid_ReturnValue                           (ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    CallFunc_IsValid_ReturnValue_1                         (ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    CallFunc_IsValid_ReturnValue_2                         (ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_HDScopeWeaponBase_C::AimIn(int32 CallFunc_Array_Length_ReturnValue, int32 Temp_int_Array_Index_Variable, const struct FWeightedBlendable& CallFunc_Array_Get_Item, int32 CallFunc_Array_AddUnique_ReturnValue, const struct FWeightedBlendables& K2Node_MakeStruct_WeightedBlendables, int32 CallFunc_Array_Find_ReturnValue, const struct FPostProcessSettings& K2Node_MakeStruct_PostProcessSettings, bool CallFunc_NotEqual_IntInt_ReturnValue, int32 Temp_int_Loop_Counter_Variable, bool CallFunc_Less_IntInt_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsValid_ReturnValue_1, bool CallFunc_IsValid_ReturnValue_2)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HDScopeWeaponBase_C", "AimIn");

	Params::BP_HDScopeWeaponBase_C_AimIn Parms{};

	Parms.CallFunc_Array_Length_ReturnValue = CallFunc_Array_Length_ReturnValue;
	Parms.Temp_int_Array_Index_Variable = Temp_int_Array_Index_Variable;
	Parms.CallFunc_Array_Get_Item = std::move(CallFunc_Array_Get_Item);
	Parms.CallFunc_Array_AddUnique_ReturnValue = CallFunc_Array_AddUnique_ReturnValue;
	Parms.K2Node_MakeStruct_WeightedBlendables = std::move(K2Node_MakeStruct_WeightedBlendables);
	Parms.CallFunc_Array_Find_ReturnValue = CallFunc_Array_Find_ReturnValue;
	Parms.K2Node_MakeStruct_PostProcessSettings = std::move(K2Node_MakeStruct_PostProcessSettings);
	Parms.CallFunc_NotEqual_IntInt_ReturnValue = CallFunc_NotEqual_IntInt_ReturnValue;
	Parms.Temp_int_Loop_Counter_Variable = Temp_int_Loop_Counter_Variable;
	Parms.CallFunc_Less_IntInt_ReturnValue = CallFunc_Less_IntInt_ReturnValue;
	Parms.CallFunc_Add_IntInt_ReturnValue = CallFunc_Add_IntInt_ReturnValue;
	Parms.CallFunc_IsValid_ReturnValue = CallFunc_IsValid_ReturnValue;
	Parms.CallFunc_IsValid_ReturnValue_1 = CallFunc_IsValid_ReturnValue_1;
	Parms.CallFunc_IsValid_ReturnValue_2 = CallFunc_IsValid_ReturnValue_2;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HDScopeWeaponBase.BP_HDScopeWeaponBase_C.AimOut
// (Protected, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Temp_int_Array_Index_Variable                          (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FWeightedBlendable               CallFunc_Array_Get_Item                                (NoDestructor)
// int32                                   CallFunc_Array_Length_ReturnValue                      (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    CallFunc_Array_RemoveItem_ReturnValue                  (ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FWeightedBlendables              K2Node_MakeStruct_WeightedBlendables                   ()
// struct FPostProcessSettings             K2Node_MakeStruct_PostProcessSettings                  ()
// int32                                   Temp_int_Loop_Counter_Variable                         (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    CallFunc_Less_IntInt_ReturnValue                       (ZeroConstructor, IsPlainOldData, NoDestructor)
// int32                                   CallFunc_Add_IntInt_ReturnValue                        (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    CallFunc_IsValid_ReturnValue                           (ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    CallFunc_IsValid_ReturnValue_1                         (ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    CallFunc_IsValid_ReturnValue_2                         (ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    CallFunc_IsValid_ReturnValue_3                         (ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_HDScopeWeaponBase_C::AimOut(int32 Temp_int_Array_Index_Variable, const struct FWeightedBlendable& CallFunc_Array_Get_Item, int32 CallFunc_Array_Length_ReturnValue, bool CallFunc_Array_RemoveItem_ReturnValue, const struct FWeightedBlendables& K2Node_MakeStruct_WeightedBlendables, const struct FPostProcessSettings& K2Node_MakeStruct_PostProcessSettings, int32 Temp_int_Loop_Counter_Variable, bool CallFunc_Less_IntInt_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsValid_ReturnValue_1, bool CallFunc_IsValid_ReturnValue_2, bool CallFunc_IsValid_ReturnValue_3)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HDScopeWeaponBase_C", "AimOut");

	Params::BP_HDScopeWeaponBase_C_AimOut Parms{};

	Parms.Temp_int_Array_Index_Variable = Temp_int_Array_Index_Variable;
	Parms.CallFunc_Array_Get_Item = std::move(CallFunc_Array_Get_Item);
	Parms.CallFunc_Array_Length_ReturnValue = CallFunc_Array_Length_ReturnValue;
	Parms.CallFunc_Array_RemoveItem_ReturnValue = CallFunc_Array_RemoveItem_ReturnValue;
	Parms.K2Node_MakeStruct_WeightedBlendables = std::move(K2Node_MakeStruct_WeightedBlendables);
	Parms.K2Node_MakeStruct_PostProcessSettings = std::move(K2Node_MakeStruct_PostProcessSettings);
	Parms.Temp_int_Loop_Counter_Variable = Temp_int_Loop_Counter_Variable;
	Parms.CallFunc_Less_IntInt_ReturnValue = CallFunc_Less_IntInt_ReturnValue;
	Parms.CallFunc_Add_IntInt_ReturnValue = CallFunc_Add_IntInt_ReturnValue;
	Parms.CallFunc_IsValid_ReturnValue = CallFunc_IsValid_ReturnValue;
	Parms.CallFunc_IsValid_ReturnValue_1 = CallFunc_IsValid_ReturnValue_1;
	Parms.CallFunc_IsValid_ReturnValue_2 = CallFunc_IsValid_ReturnValue_2;
	Parms.CallFunc_IsValid_ReturnValue_3 = CallFunc_IsValid_ReturnValue_3;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HDScopeWeaponBase.BP_HDScopeWeaponBase_C.ScopeEffects
// (Protected, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   CallFunc_Array_Length_ReturnValue                      (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    CallFunc_ShouldUseScope_bUseScope                      (ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FWeightedBlendables              K2Node_MakeStruct_WeightedBlendables                   ()
// struct FPostProcessSettings             K2Node_MakeStruct_PostProcessSettings                  ()
// int32                                   Temp_int_Array_Index_Variable                          (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    CallFunc_IsValid_ReturnValue                           (ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FWeightedBlendable               CallFunc_Array_Get_Item                                (NoDestructor)
// int32                                   CallFunc_Array_AddUnique_ReturnValue                   (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   CallFunc_Array_Find_ReturnValue                        (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    CallFunc_NotEqual_IntInt_ReturnValue                   (ZeroConstructor, IsPlainOldData, NoDestructor)
// int32                                   Temp_int_Loop_Counter_Variable                         (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    CallFunc_Less_IntInt_ReturnValue                       (ZeroConstructor, IsPlainOldData, NoDestructor)
// int32                                   CallFunc_Add_IntInt_ReturnValue                        (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    CallFunc_IsValid_ReturnValue_1                         (ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_HDScopeWeaponBase_C::ScopeEffects(int32 CallFunc_Array_Length_ReturnValue, bool CallFunc_ShouldUseScope_bUseScope, const struct FWeightedBlendables& K2Node_MakeStruct_WeightedBlendables, const struct FPostProcessSettings& K2Node_MakeStruct_PostProcessSettings, int32 Temp_int_Array_Index_Variable, bool CallFunc_IsValid_ReturnValue, const struct FWeightedBlendable& CallFunc_Array_Get_Item, int32 CallFunc_Array_AddUnique_ReturnValue, int32 CallFunc_Array_Find_ReturnValue, bool CallFunc_NotEqual_IntInt_ReturnValue, int32 Temp_int_Loop_Counter_Variable, bool CallFunc_Less_IntInt_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue, bool CallFunc_IsValid_ReturnValue_1)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HDScopeWeaponBase_C", "ScopeEffects");

	Params::BP_HDScopeWeaponBase_C_ScopeEffects Parms{};

	Parms.CallFunc_Array_Length_ReturnValue = CallFunc_Array_Length_ReturnValue;
	Parms.CallFunc_ShouldUseScope_bUseScope = CallFunc_ShouldUseScope_bUseScope;
	Parms.K2Node_MakeStruct_WeightedBlendables = std::move(K2Node_MakeStruct_WeightedBlendables);
	Parms.K2Node_MakeStruct_PostProcessSettings = std::move(K2Node_MakeStruct_PostProcessSettings);
	Parms.Temp_int_Array_Index_Variable = Temp_int_Array_Index_Variable;
	Parms.CallFunc_IsValid_ReturnValue = CallFunc_IsValid_ReturnValue;
	Parms.CallFunc_Array_Get_Item = std::move(CallFunc_Array_Get_Item);
	Parms.CallFunc_Array_AddUnique_ReturnValue = CallFunc_Array_AddUnique_ReturnValue;
	Parms.CallFunc_Array_Find_ReturnValue = CallFunc_Array_Find_ReturnValue;
	Parms.CallFunc_NotEqual_IntInt_ReturnValue = CallFunc_NotEqual_IntInt_ReturnValue;
	Parms.Temp_int_Loop_Counter_Variable = Temp_int_Loop_Counter_Variable;
	Parms.CallFunc_Less_IntInt_ReturnValue = CallFunc_Less_IntInt_ReturnValue;
	Parms.CallFunc_Add_IntInt_ReturnValue = CallFunc_Add_IntInt_ReturnValue;
	Parms.CallFunc_IsValid_ReturnValue_1 = CallFunc_IsValid_ReturnValue_1;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HDScopeWeaponBase.BP_HDScopeWeaponBase_C.RestoreOwnerDefaultValues
// (Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    CallFunc_IsValid_ReturnValue                           (ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    CallFunc_IsValid_ReturnValue_1                         (ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_HDScopeWeaponBase_C::RestoreOwnerDefaultValues(bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsValid_ReturnValue_1)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HDScopeWeaponBase_C", "RestoreOwnerDefaultValues");

	Params::BP_HDScopeWeaponBase_C_RestoreOwnerDefaultValues Parms{};

	Parms.CallFunc_IsValid_ReturnValue = CallFunc_IsValid_ReturnValue;
	Parms.CallFunc_IsValid_ReturnValue_1 = CallFunc_IsValid_ReturnValue_1;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HDScopeWeaponBase.BP_HDScopeWeaponBase_C.SaveOwnerDefaultValues
// (Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    CallFunc_IsValid_ReturnValue                           (ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    CallFunc_IsValid_ReturnValue_1                         (ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_HDScopeWeaponBase_C::SaveOwnerDefaultValues(bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsValid_ReturnValue_1)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HDScopeWeaponBase_C", "SaveOwnerDefaultValues");

	Params::BP_HDScopeWeaponBase_C_SaveOwnerDefaultValues Parms{};

	Parms.CallFunc_IsValid_ReturnValue = CallFunc_IsValid_ReturnValue;
	Parms.CallFunc_IsValid_ReturnValue_1 = CallFunc_IsValid_ReturnValue_1;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HDScopeWeaponBase.BP_HDScopeWeaponBase_C.ShouldUseScope
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    bUseScope                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    CallFunc_EqualEqual_ObjectObject_ReturnValue           (ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    CallFunc_EqualEqual_ObjectObject_ReturnValue_1         (ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    CallFunc_Not_PreBool_ReturnValue                       (ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    CallFunc_BooleanAND_ReturnValue                        (ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    CallFunc_BooleanAND_ReturnValue_1                      (ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    CallFunc_BooleanAND_ReturnValue_2                      (ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_HDScopeWeaponBase_C::ShouldUseScope(bool* bUseScope, bool CallFunc_EqualEqual_ObjectObject_ReturnValue, bool CallFunc_EqualEqual_ObjectObject_ReturnValue_1, bool CallFunc_Not_PreBool_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, bool CallFunc_BooleanAND_ReturnValue_1, bool CallFunc_BooleanAND_ReturnValue_2)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HDScopeWeaponBase_C", "ShouldUseScope");

	Params::BP_HDScopeWeaponBase_C_ShouldUseScope Parms{};

	Parms.CallFunc_EqualEqual_ObjectObject_ReturnValue = CallFunc_EqualEqual_ObjectObject_ReturnValue;
	Parms.CallFunc_EqualEqual_ObjectObject_ReturnValue_1 = CallFunc_EqualEqual_ObjectObject_ReturnValue_1;
	Parms.CallFunc_Not_PreBool_ReturnValue = CallFunc_Not_PreBool_ReturnValue;
	Parms.CallFunc_BooleanAND_ReturnValue = CallFunc_BooleanAND_ReturnValue;
	Parms.CallFunc_BooleanAND_ReturnValue_1 = CallFunc_BooleanAND_ReturnValue_1;
	Parms.CallFunc_BooleanAND_ReturnValue_2 = CallFunc_BooleanAND_ReturnValue_2;

	UObject::ProcessEvent(Func, &Parms);

	if (bUseScope != nullptr)
		*bUseScope = std::move(Parms.bUseScope);
}

}

