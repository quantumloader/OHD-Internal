#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPFL_HDCore

#include "Basic.hpp"

#include "BPFL_HDCore_classes.hpp"
#include "BPFL_HDCore_parameters.hpp"


namespace SDK
{

// Function BPFL_HDCore.BPFL_HDCore_C.GetPredefinedSquadNameByIndex
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   SquadCreationIdx                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FText                             SquadName                                              (Parm, OutParm)
// class FString                           CallFunc_GetPhoneticCodeWordByIndex_CodeWord           (ZeroConstructor, HasGetValueTypeHash)
// class FText                             CallFunc_Conv_StringToText_ReturnValue                 ()

void UBPFL_HDCore_C::GetPredefinedSquadNameByIndex(int32 SquadCreationIdx, class UObject* __WorldContext, class FText* SquadName, const class FString& CallFunc_GetPhoneticCodeWordByIndex_CodeWord, class FText CallFunc_Conv_StringToText_ReturnValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPFL_HDCore_C", "GetPredefinedSquadNameByIndex");

	Params::BPFL_HDCore_C_GetPredefinedSquadNameByIndex Parms{};

	Parms.SquadCreationIdx = SquadCreationIdx;
	Parms.__WorldContext = __WorldContext;
	Parms.CallFunc_GetPhoneticCodeWordByIndex_CodeWord = std::move(CallFunc_GetPhoneticCodeWordByIndex_CodeWord);
	Parms.CallFunc_Conv_StringToText_ReturnValue = CallFunc_Conv_StringToText_ReturnValue;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (SquadName != nullptr)
		*SquadName = std::move(Parms.SquadName);
}


// Function BPFL_HDCore.BPFL_HDCore_C.AbbreviateString
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class FString                           SourceString                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// int32                                   MaxStartLength                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   MaxEndLength                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           Separator                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           AbbrevString                                           (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
// class FString                           CallFunc_Left_ReturnValue                              (ZeroConstructor, HasGetValueTypeHash)
// int32                                   CallFunc_Len_ReturnValue                               (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           CallFunc_Concat_StrStr_ReturnValue                     (ZeroConstructor, HasGetValueTypeHash)
// int32                                   CallFunc_Subtract_IntInt_ReturnValue                   (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    CallFunc_Greater_IntInt_ReturnValue                    (ZeroConstructor, IsPlainOldData, NoDestructor)
// int32                                   CallFunc_Min_ReturnValue                               (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           CallFunc_Right_ReturnValue                             (ZeroConstructor, HasGetValueTypeHash)
// class FString                           CallFunc_Concat_StrStr_ReturnValue_1                   (ZeroConstructor, HasGetValueTypeHash)

void UBPFL_HDCore_C::AbbreviateString(const class FString& SourceString, int32 MaxStartLength, int32 MaxEndLength, const class FString& Separator, class UObject* __WorldContext, class FString* AbbrevString, const class FString& CallFunc_Left_ReturnValue, int32 CallFunc_Len_ReturnValue, const class FString& CallFunc_Concat_StrStr_ReturnValue, int32 CallFunc_Subtract_IntInt_ReturnValue, bool CallFunc_Greater_IntInt_ReturnValue, int32 CallFunc_Min_ReturnValue, const class FString& CallFunc_Right_ReturnValue, const class FString& CallFunc_Concat_StrStr_ReturnValue_1)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPFL_HDCore_C", "AbbreviateString");

	Params::BPFL_HDCore_C_AbbreviateString Parms{};

	Parms.SourceString = std::move(SourceString);
	Parms.MaxStartLength = MaxStartLength;
	Parms.MaxEndLength = MaxEndLength;
	Parms.Separator = std::move(Separator);
	Parms.__WorldContext = __WorldContext;
	Parms.CallFunc_Left_ReturnValue = std::move(CallFunc_Left_ReturnValue);
	Parms.CallFunc_Len_ReturnValue = CallFunc_Len_ReturnValue;
	Parms.CallFunc_Concat_StrStr_ReturnValue = std::move(CallFunc_Concat_StrStr_ReturnValue);
	Parms.CallFunc_Subtract_IntInt_ReturnValue = CallFunc_Subtract_IntInt_ReturnValue;
	Parms.CallFunc_Greater_IntInt_ReturnValue = CallFunc_Greater_IntInt_ReturnValue;
	Parms.CallFunc_Min_ReturnValue = CallFunc_Min_ReturnValue;
	Parms.CallFunc_Right_ReturnValue = std::move(CallFunc_Right_ReturnValue);
	Parms.CallFunc_Concat_StrStr_ReturnValue_1 = std::move(CallFunc_Concat_StrStr_ReturnValue_1);

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (AbbrevString != nullptr)
		*AbbrevString = Parms.AbbrevString;
}


// Function BPFL_HDCore.BPFL_HDCore_C.GetPhoneticCodeWordByCharacter
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class FString                           LetterChar                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           CodeWord                                               (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
// int32                                   CallFunc_GetIndexForPhoneticCodeWord_LetterIdx         (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           CallFunc_GetPhoneticCodeWordByIndex_CodeWord           (ZeroConstructor, HasGetValueTypeHash)

void UBPFL_HDCore_C::GetPhoneticCodeWordByCharacter(const class FString& LetterChar, class UObject* __WorldContext, class FString* CodeWord, int32 CallFunc_GetIndexForPhoneticCodeWord_LetterIdx, const class FString& CallFunc_GetPhoneticCodeWordByIndex_CodeWord)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPFL_HDCore_C", "GetPhoneticCodeWordByCharacter");

	Params::BPFL_HDCore_C_GetPhoneticCodeWordByCharacter Parms{};

	Parms.LetterChar = std::move(LetterChar);
	Parms.__WorldContext = __WorldContext;
	Parms.CallFunc_GetIndexForPhoneticCodeWord_LetterIdx = CallFunc_GetIndexForPhoneticCodeWord_LetterIdx;
	Parms.CallFunc_GetPhoneticCodeWordByIndex_CodeWord = std::move(CallFunc_GetPhoneticCodeWordByIndex_CodeWord);

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (CodeWord != nullptr)
		*CodeWord = Parms.CodeWord;
}


// Function BPFL_HDCore.BPFL_HDCore_C.GetPhoneticCodeWordByIndex
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   LetterIdx                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           CodeWord                                               (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
// int32                                   Temp_int_Variable                                      (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   CallFunc_Clamp_ReturnValue                             (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           Temp_string_Variable                                   (ZeroConstructor, HasGetValueTypeHash)
// class FString                           Temp_string_Variable_1                                 (ZeroConstructor, HasGetValueTypeHash)
// class FString                           Temp_string_Variable_2                                 (ZeroConstructor, HasGetValueTypeHash)
// class FString                           Temp_string_Variable_3                                 (ZeroConstructor, HasGetValueTypeHash)
// class FString                           Temp_string_Variable_4                                 (ZeroConstructor, HasGetValueTypeHash)
// class FString                           Temp_string_Variable_5                                 (ZeroConstructor, HasGetValueTypeHash)
// class FString                           Temp_string_Variable_6                                 (ZeroConstructor, HasGetValueTypeHash)
// class FString                           Temp_string_Variable_7                                 (ZeroConstructor, HasGetValueTypeHash)
// class FString                           Temp_string_Variable_8                                 (ZeroConstructor, HasGetValueTypeHash)
// class FString                           Temp_string_Variable_9                                 (ZeroConstructor, HasGetValueTypeHash)
// class FString                           Temp_string_Variable_10                                (ZeroConstructor, HasGetValueTypeHash)
// class FString                           Temp_string_Variable_11                                (ZeroConstructor, HasGetValueTypeHash)
// class FString                           Temp_string_Variable_12                                (ZeroConstructor, HasGetValueTypeHash)
// class FString                           Temp_string_Variable_13                                (ZeroConstructor, HasGetValueTypeHash)
// class FString                           Temp_string_Variable_14                                (ZeroConstructor, HasGetValueTypeHash)
// class FString                           Temp_string_Variable_15                                (ZeroConstructor, HasGetValueTypeHash)
// class FString                           Temp_string_Variable_16                                (ZeroConstructor, HasGetValueTypeHash)
// class FString                           Temp_string_Variable_17                                (ZeroConstructor, HasGetValueTypeHash)
// class FString                           Temp_string_Variable_18                                (ZeroConstructor, HasGetValueTypeHash)
// class FString                           Temp_string_Variable_19                                (ZeroConstructor, HasGetValueTypeHash)
// class FString                           Temp_string_Variable_20                                (ZeroConstructor, HasGetValueTypeHash)
// class FString                           Temp_string_Variable_21                                (ZeroConstructor, HasGetValueTypeHash)
// class FString                           Temp_string_Variable_22                                (ZeroConstructor, HasGetValueTypeHash)
// class FString                           Temp_string_Variable_23                                (ZeroConstructor, HasGetValueTypeHash)
// class FString                           Temp_string_Variable_24                                (ZeroConstructor, HasGetValueTypeHash)
// class FString                           Temp_string_Variable_25                                (ZeroConstructor, HasGetValueTypeHash)
// class FString                           Temp_string_Variable_26                                (ZeroConstructor, HasGetValueTypeHash)
// class FString                           Temp_string_Variable_27                                (ZeroConstructor, HasGetValueTypeHash)
// class FString                           Temp_string_Variable_28                                (ZeroConstructor, HasGetValueTypeHash)
// class FString                           Temp_string_Variable_29                                (ZeroConstructor, HasGetValueTypeHash)
// class FString                           Temp_string_Variable_30                                (ZeroConstructor, HasGetValueTypeHash)
// class FString                           Temp_string_Variable_31                                (ZeroConstructor, HasGetValueTypeHash)
// class FString                           Temp_string_Variable_32                                (ZeroConstructor, HasGetValueTypeHash)
// class FString                           Temp_string_Variable_33                                (ZeroConstructor, HasGetValueTypeHash)
// class FString                           Temp_string_Variable_34                                (ZeroConstructor, HasGetValueTypeHash)
// class FString                           Temp_string_Variable_35                                (ZeroConstructor, HasGetValueTypeHash)
// class FString                           K2Node_Select_Default                                  (ZeroConstructor, HasGetValueTypeHash)

void UBPFL_HDCore_C::GetPhoneticCodeWordByIndex(int32 LetterIdx, class UObject* __WorldContext, class FString* CodeWord, int32 Temp_int_Variable, int32 CallFunc_Clamp_ReturnValue, const class FString& Temp_string_Variable, const class FString& Temp_string_Variable_1, const class FString& Temp_string_Variable_2, const class FString& Temp_string_Variable_3, const class FString& Temp_string_Variable_4, const class FString& Temp_string_Variable_5, const class FString& Temp_string_Variable_6, const class FString& Temp_string_Variable_7, const class FString& Temp_string_Variable_8, const class FString& Temp_string_Variable_9, const class FString& Temp_string_Variable_10, const class FString& Temp_string_Variable_11, const class FString& Temp_string_Variable_12, const class FString& Temp_string_Variable_13, const class FString& Temp_string_Variable_14, const class FString& Temp_string_Variable_15, const class FString& Temp_string_Variable_16, const class FString& Temp_string_Variable_17, const class FString& Temp_string_Variable_18, const class FString& Temp_string_Variable_19, const class FString& Temp_string_Variable_20, const class FString& Temp_string_Variable_21, const class FString& Temp_string_Variable_22, const class FString& Temp_string_Variable_23, const class FString& Temp_string_Variable_24, const class FString& Temp_string_Variable_25, const class FString& Temp_string_Variable_26, const class FString& Temp_string_Variable_27, const class FString& Temp_string_Variable_28, const class FString& Temp_string_Variable_29, const class FString& Temp_string_Variable_30, const class FString& Temp_string_Variable_31, const class FString& Temp_string_Variable_32, const class FString& Temp_string_Variable_33, const class FString& Temp_string_Variable_34, const class FString& Temp_string_Variable_35, const class FString& K2Node_Select_Default)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPFL_HDCore_C", "GetPhoneticCodeWordByIndex");

	Params::BPFL_HDCore_C_GetPhoneticCodeWordByIndex Parms{};

	Parms.LetterIdx = LetterIdx;
	Parms.__WorldContext = __WorldContext;
	Parms.Temp_int_Variable = Temp_int_Variable;
	Parms.CallFunc_Clamp_ReturnValue = CallFunc_Clamp_ReturnValue;
	Parms.Temp_string_Variable = std::move(Temp_string_Variable);
	Parms.Temp_string_Variable_1 = std::move(Temp_string_Variable_1);
	Parms.Temp_string_Variable_2 = std::move(Temp_string_Variable_2);
	Parms.Temp_string_Variable_3 = std::move(Temp_string_Variable_3);
	Parms.Temp_string_Variable_4 = std::move(Temp_string_Variable_4);
	Parms.Temp_string_Variable_5 = std::move(Temp_string_Variable_5);
	Parms.Temp_string_Variable_6 = std::move(Temp_string_Variable_6);
	Parms.Temp_string_Variable_7 = std::move(Temp_string_Variable_7);
	Parms.Temp_string_Variable_8 = std::move(Temp_string_Variable_8);
	Parms.Temp_string_Variable_9 = std::move(Temp_string_Variable_9);
	Parms.Temp_string_Variable_10 = std::move(Temp_string_Variable_10);
	Parms.Temp_string_Variable_11 = std::move(Temp_string_Variable_11);
	Parms.Temp_string_Variable_12 = std::move(Temp_string_Variable_12);
	Parms.Temp_string_Variable_13 = std::move(Temp_string_Variable_13);
	Parms.Temp_string_Variable_14 = std::move(Temp_string_Variable_14);
	Parms.Temp_string_Variable_15 = std::move(Temp_string_Variable_15);
	Parms.Temp_string_Variable_16 = std::move(Temp_string_Variable_16);
	Parms.Temp_string_Variable_17 = std::move(Temp_string_Variable_17);
	Parms.Temp_string_Variable_18 = std::move(Temp_string_Variable_18);
	Parms.Temp_string_Variable_19 = std::move(Temp_string_Variable_19);
	Parms.Temp_string_Variable_20 = std::move(Temp_string_Variable_20);
	Parms.Temp_string_Variable_21 = std::move(Temp_string_Variable_21);
	Parms.Temp_string_Variable_22 = std::move(Temp_string_Variable_22);
	Parms.Temp_string_Variable_23 = std::move(Temp_string_Variable_23);
	Parms.Temp_string_Variable_24 = std::move(Temp_string_Variable_24);
	Parms.Temp_string_Variable_25 = std::move(Temp_string_Variable_25);
	Parms.Temp_string_Variable_26 = std::move(Temp_string_Variable_26);
	Parms.Temp_string_Variable_27 = std::move(Temp_string_Variable_27);
	Parms.Temp_string_Variable_28 = std::move(Temp_string_Variable_28);
	Parms.Temp_string_Variable_29 = std::move(Temp_string_Variable_29);
	Parms.Temp_string_Variable_30 = std::move(Temp_string_Variable_30);
	Parms.Temp_string_Variable_31 = std::move(Temp_string_Variable_31);
	Parms.Temp_string_Variable_32 = std::move(Temp_string_Variable_32);
	Parms.Temp_string_Variable_33 = std::move(Temp_string_Variable_33);
	Parms.Temp_string_Variable_34 = std::move(Temp_string_Variable_34);
	Parms.Temp_string_Variable_35 = std::move(Temp_string_Variable_35);
	Parms.K2Node_Select_Default = std::move(K2Node_Select_Default);

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (CodeWord != nullptr)
		*CodeWord = Parms.CodeWord;
}


// Function BPFL_HDCore.BPFL_HDCore_C.GetIndexForPredefinedSquadName
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class FText                             SquadName                                              (BlueprintVisible, BlueprintReadOnly, Parm)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   SquadNameIdx                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           CallFunc_Conv_TextToString_ReturnValue                 (ZeroConstructor, HasGetValueTypeHash)
// int32                                   CallFunc_GetIndexForPhoneticCodeWord_LetterIdx         (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPFL_HDCore_C::GetIndexForPredefinedSquadName(class FText SquadName, class UObject* __WorldContext, int32* SquadNameIdx, const class FString& CallFunc_Conv_TextToString_ReturnValue, int32 CallFunc_GetIndexForPhoneticCodeWord_LetterIdx)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPFL_HDCore_C", "GetIndexForPredefinedSquadName");

	Params::BPFL_HDCore_C_GetIndexForPredefinedSquadName Parms{};

	Parms.SquadName = SquadName;
	Parms.__WorldContext = __WorldContext;
	Parms.CallFunc_Conv_TextToString_ReturnValue = std::move(CallFunc_Conv_TextToString_ReturnValue);
	Parms.CallFunc_GetIndexForPhoneticCodeWord_LetterIdx = CallFunc_GetIndexForPhoneticCodeWord_LetterIdx;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (SquadNameIdx != nullptr)
		*SquadNameIdx = std::move(Parms.SquadNameIdx);
}


// Function BPFL_HDCore.BPFL_HDCore_C.GetIndexForPhoneticCodeWord
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class FString                           CodeWord                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   LetterIdx                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Temp_bool_Variable                                     (ZeroConstructor, IsPlainOldData, NoDestructor)
// class FString                           CallFunc_ToUpper_ReturnValue                           (ZeroConstructor, HasGetValueTypeHash)
// int32                                   CallFunc_GetCharacterAsNumber_ReturnValue              (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    CallFunc_InRange_IntInt_ReturnValue                    (ZeroConstructor, IsPlainOldData, NoDestructor)
// int32                                   CallFunc_Subtract_IntInt_ReturnValue                   (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   CallFunc_Add_IntInt_ReturnValue                        (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   CallFunc_Subtract_IntInt_ReturnValue_1                 (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   K2Node_Select_Default                                  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPFL_HDCore_C::GetIndexForPhoneticCodeWord(const class FString& CodeWord, class UObject* __WorldContext, int32* LetterIdx, bool Temp_bool_Variable, const class FString& CallFunc_ToUpper_ReturnValue, int32 CallFunc_GetCharacterAsNumber_ReturnValue, bool CallFunc_InRange_IntInt_ReturnValue, int32 CallFunc_Subtract_IntInt_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue, int32 CallFunc_Subtract_IntInt_ReturnValue_1, int32 K2Node_Select_Default)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPFL_HDCore_C", "GetIndexForPhoneticCodeWord");

	Params::BPFL_HDCore_C_GetIndexForPhoneticCodeWord Parms{};

	Parms.CodeWord = std::move(CodeWord);
	Parms.__WorldContext = __WorldContext;
	Parms.Temp_bool_Variable = Temp_bool_Variable;
	Parms.CallFunc_ToUpper_ReturnValue = std::move(CallFunc_ToUpper_ReturnValue);
	Parms.CallFunc_GetCharacterAsNumber_ReturnValue = CallFunc_GetCharacterAsNumber_ReturnValue;
	Parms.CallFunc_InRange_IntInt_ReturnValue = CallFunc_InRange_IntInt_ReturnValue;
	Parms.CallFunc_Subtract_IntInt_ReturnValue = CallFunc_Subtract_IntInt_ReturnValue;
	Parms.CallFunc_Add_IntInt_ReturnValue = CallFunc_Add_IntInt_ReturnValue;
	Parms.CallFunc_Subtract_IntInt_ReturnValue_1 = CallFunc_Subtract_IntInt_ReturnValue_1;
	Parms.K2Node_Select_Default = K2Node_Select_Default;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (LetterIdx != nullptr)
		*LetterIdx = std::move(Parms.LetterIdx);
}


// Function BPFL_HDCore.BPFL_HDCore_C.GetControllerFromPlayerState
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class APlayerState*                     PlayerState                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AController*                      OwnerC                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           CallFunc_GetOwner_ReturnValue                          (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AController*                      K2Node_DynamicCast_AsController                        (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    K2Node_DynamicCast_bSuccess                            (ZeroConstructor, IsPlainOldData, NoDestructor)

void UBPFL_HDCore_C::GetControllerFromPlayerState(class APlayerState* PlayerState, class UObject* __WorldContext, class AController** OwnerC, class AActor* CallFunc_GetOwner_ReturnValue, class AController* K2Node_DynamicCast_AsController, bool K2Node_DynamicCast_bSuccess)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPFL_HDCore_C", "GetControllerFromPlayerState");

	Params::BPFL_HDCore_C_GetControllerFromPlayerState Parms{};

	Parms.PlayerState = PlayerState;
	Parms.__WorldContext = __WorldContext;
	Parms.CallFunc_GetOwner_ReturnValue = CallFunc_GetOwner_ReturnValue;
	Parms.K2Node_DynamicCast_AsController = K2Node_DynamicCast_AsController;
	Parms.K2Node_DynamicCast_bSuccess = K2Node_DynamicCast_bSuccess;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (OwnerC != nullptr)
		*OwnerC = std::move(Parms.OwnerC);
}


// Function BPFL_HDCore.BPFL_HDCore_C.GetPlayerControllerFromPlayerState
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class APlayerState*                     PlayerState                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class APlayerController*                OwnerPC                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           CallFunc_GetOwner_ReturnValue                          (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class APlayerController*                K2Node_DynamicCast_AsPlayer_Controller                 (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    K2Node_DynamicCast_bSuccess                            (ZeroConstructor, IsPlainOldData, NoDestructor)

void UBPFL_HDCore_C::GetPlayerControllerFromPlayerState(class APlayerState* PlayerState, class UObject* __WorldContext, class APlayerController** OwnerPC, class AActor* CallFunc_GetOwner_ReturnValue, class APlayerController* K2Node_DynamicCast_AsPlayer_Controller, bool K2Node_DynamicCast_bSuccess)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPFL_HDCore_C", "GetPlayerControllerFromPlayerState");

	Params::BPFL_HDCore_C_GetPlayerControllerFromPlayerState Parms{};

	Parms.PlayerState = PlayerState;
	Parms.__WorldContext = __WorldContext;
	Parms.CallFunc_GetOwner_ReturnValue = CallFunc_GetOwner_ReturnValue;
	Parms.K2Node_DynamicCast_AsPlayer_Controller = K2Node_DynamicCast_AsPlayer_Controller;
	Parms.K2Node_DynamicCast_bSuccess = K2Node_DynamicCast_bSuccess;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (OwnerPC != nullptr)
		*OwnerPC = std::move(Parms.OwnerPC);
}


// Function BPFL_HDCore.BPFL_HDCore_C.GetAllMapAssets
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bSuccess                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// TArray<struct FAssetData>               LevelAssets                                            (Parm, OutParm, HasGetValueTypeHash)
// TArray<class FName>                     K2Node_MakeArray_Array                                 (ReferenceParm, HasGetValueTypeHash)
// TScriptInterface<class IAssetRegistry>  CallFunc_GetAssetRegistry_ReturnValue                  (ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FARFilter                        K2Node_MakeStruct_ARFilter                             ()
// TArray<struct FAssetData>               CallFunc_GetAssets_OutAssetData                        (ReferenceParm, HasGetValueTypeHash)
// bool                                    CallFunc_GetAssets_ReturnValue                         (ZeroConstructor, IsPlainOldData, NoDestructor)

void UBPFL_HDCore_C::GetAllMapAssets(class UObject* __WorldContext, bool* bSuccess, TArray<struct FAssetData>* LevelAssets, TArray<class FName>& K2Node_MakeArray_Array, TScriptInterface<class IAssetRegistry> CallFunc_GetAssetRegistry_ReturnValue, const struct FARFilter& K2Node_MakeStruct_ARFilter, TArray<struct FAssetData>& CallFunc_GetAssets_OutAssetData, bool CallFunc_GetAssets_ReturnValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPFL_HDCore_C", "GetAllMapAssets");

	Params::BPFL_HDCore_C_GetAllMapAssets Parms{};

	Parms.__WorldContext = __WorldContext;
	Parms.K2Node_MakeArray_Array = std::move(K2Node_MakeArray_Array);
	Parms.CallFunc_GetAssetRegistry_ReturnValue = CallFunc_GetAssetRegistry_ReturnValue;
	Parms.K2Node_MakeStruct_ARFilter = std::move(K2Node_MakeStruct_ARFilter);
	Parms.CallFunc_GetAssets_OutAssetData = std::move(CallFunc_GetAssets_OutAssetData);
	Parms.CallFunc_GetAssets_ReturnValue = CallFunc_GetAssets_ReturnValue;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	K2Node_MakeArray_Array = std::move(Parms.K2Node_MakeArray_Array);
	CallFunc_GetAssets_OutAssetData = std::move(Parms.CallFunc_GetAssets_OutAssetData);

	if (bSuccess != nullptr)
		*bSuccess = std::move(Parms.bSuccess);

	if (LevelAssets != nullptr)
		*LevelAssets = Parms.LevelAssets;
}


// Function BPFL_HDCore.BPFL_HDCore_C.SplitLoadedPrimaryAssetIds
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// TArray<struct FPrimaryAssetId>          AssetIds                                               (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<struct FPrimaryAssetId>          UnloadedAssetIds                                       (Parm, OutParm, HasGetValueTypeHash)
// TArray<class UObject*>                  LoadedAssets                                           (Parm, OutParm, HasGetValueTypeHash)
// TArray<class UObject*>                  LoadedObjects                                          (Edit, BlueprintVisible, HasGetValueTypeHash)
// TArray<struct FPrimaryAssetId>          UnloadedIds                                            (Edit, BlueprintVisible, HasGetValueTypeHash)
// int32                                   CallFunc_Array_Length_ReturnValue                      (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Temp_int_Array_Index_Variable                          (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Temp_int_Loop_Counter_Variable                         (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FPrimaryAssetId                  CallFunc_Array_Get_Item                                (ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UObject*                          CallFunc_GetObjectFromPrimaryAssetId_ReturnValue       (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    CallFunc_Less_IntInt_ReturnValue                       (ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    CallFunc_IsValid_ReturnValue                           (ZeroConstructor, IsPlainOldData, NoDestructor)
// int32                                   CallFunc_Add_IntInt_ReturnValue                        (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   CallFunc_Array_Add_ReturnValue                         (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   CallFunc_Array_Add_ReturnValue_1                       (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPFL_HDCore_C::SplitLoadedPrimaryAssetIds(TArray<struct FPrimaryAssetId>& AssetIds, class UObject* __WorldContext, TArray<struct FPrimaryAssetId>* UnloadedAssetIds, TArray<class UObject*>* LoadedAssets, const TArray<class UObject*>& LoadedObjects, const TArray<struct FPrimaryAssetId>& UnloadedIds, int32 CallFunc_Array_Length_ReturnValue, int32 Temp_int_Array_Index_Variable, int32 Temp_int_Loop_Counter_Variable, const struct FPrimaryAssetId& CallFunc_Array_Get_Item, class UObject* CallFunc_GetObjectFromPrimaryAssetId_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, bool CallFunc_IsValid_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue, int32 CallFunc_Array_Add_ReturnValue, int32 CallFunc_Array_Add_ReturnValue_1)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPFL_HDCore_C", "SplitLoadedPrimaryAssetIds");

	Params::BPFL_HDCore_C_SplitLoadedPrimaryAssetIds Parms{};

	Parms.AssetIds = std::move(AssetIds);
	Parms.__WorldContext = __WorldContext;
	Parms.LoadedObjects = std::move(LoadedObjects);
	Parms.UnloadedIds = std::move(UnloadedIds);
	Parms.CallFunc_Array_Length_ReturnValue = CallFunc_Array_Length_ReturnValue;
	Parms.Temp_int_Array_Index_Variable = Temp_int_Array_Index_Variable;
	Parms.Temp_int_Loop_Counter_Variable = Temp_int_Loop_Counter_Variable;
	Parms.CallFunc_Array_Get_Item = std::move(CallFunc_Array_Get_Item);
	Parms.CallFunc_GetObjectFromPrimaryAssetId_ReturnValue = CallFunc_GetObjectFromPrimaryAssetId_ReturnValue;
	Parms.CallFunc_Less_IntInt_ReturnValue = CallFunc_Less_IntInt_ReturnValue;
	Parms.CallFunc_IsValid_ReturnValue = CallFunc_IsValid_ReturnValue;
	Parms.CallFunc_Add_IntInt_ReturnValue = CallFunc_Add_IntInt_ReturnValue;
	Parms.CallFunc_Array_Add_ReturnValue = CallFunc_Array_Add_ReturnValue;
	Parms.CallFunc_Array_Add_ReturnValue_1 = CallFunc_Array_Add_ReturnValue_1;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	AssetIds = std::move(Parms.AssetIds);

	if (UnloadedAssetIds != nullptr)
		*UnloadedAssetIds = Parms.UnloadedAssetIds;

	if (LoadedAssets != nullptr)
		*LoadedAssets = Parms.LoadedAssets;
}


// Function BPFL_HDCore.BPFL_HDCore_C.SplitLoadedPrimaryAssetClassIds
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// TArray<struct FPrimaryAssetId>          AssetIds                                               (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<struct FPrimaryAssetId>          UnloadedAssetIds                                       (Parm, OutParm, HasGetValueTypeHash)
// TArray<class UClass*>                   LoadedAssetClasses                                     (Parm, OutParm, HasGetValueTypeHash)
// TArray<class UClass*>                   LoadedClasses                                          (Edit, BlueprintVisible, HasGetValueTypeHash)
// TArray<struct FPrimaryAssetId>          UnloadedIds                                            (Edit, BlueprintVisible, HasGetValueTypeHash)
// int32                                   CallFunc_Array_Length_ReturnValue                      (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Temp_int_Array_Index_Variable                          (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Temp_int_Loop_Counter_Variable                         (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FPrimaryAssetId                  CallFunc_Array_Get_Item                                (ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UClass*                           CallFunc_GetClassFromPrimaryAssetId_ReturnValue        (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    CallFunc_Less_IntInt_ReturnValue                       (ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    CallFunc_IsValidClass_ReturnValue                      (ZeroConstructor, IsPlainOldData, NoDestructor)
// int32                                   CallFunc_Add_IntInt_ReturnValue                        (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   CallFunc_Array_Add_ReturnValue                         (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   CallFunc_Array_Add_ReturnValue_1                       (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPFL_HDCore_C::SplitLoadedPrimaryAssetClassIds(TArray<struct FPrimaryAssetId>& AssetIds, class UObject* __WorldContext, TArray<struct FPrimaryAssetId>* UnloadedAssetIds, TArray<class UClass*>* LoadedAssetClasses, const TArray<class UClass*>& LoadedClasses, const TArray<struct FPrimaryAssetId>& UnloadedIds, int32 CallFunc_Array_Length_ReturnValue, int32 Temp_int_Array_Index_Variable, int32 Temp_int_Loop_Counter_Variable, const struct FPrimaryAssetId& CallFunc_Array_Get_Item, class UClass* CallFunc_GetClassFromPrimaryAssetId_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, bool CallFunc_IsValidClass_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue, int32 CallFunc_Array_Add_ReturnValue, int32 CallFunc_Array_Add_ReturnValue_1)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPFL_HDCore_C", "SplitLoadedPrimaryAssetClassIds");

	Params::BPFL_HDCore_C_SplitLoadedPrimaryAssetClassIds Parms{};

	Parms.AssetIds = std::move(AssetIds);
	Parms.__WorldContext = __WorldContext;
	Parms.LoadedClasses = std::move(LoadedClasses);
	Parms.UnloadedIds = std::move(UnloadedIds);
	Parms.CallFunc_Array_Length_ReturnValue = CallFunc_Array_Length_ReturnValue;
	Parms.Temp_int_Array_Index_Variable = Temp_int_Array_Index_Variable;
	Parms.Temp_int_Loop_Counter_Variable = Temp_int_Loop_Counter_Variable;
	Parms.CallFunc_Array_Get_Item = std::move(CallFunc_Array_Get_Item);
	Parms.CallFunc_GetClassFromPrimaryAssetId_ReturnValue = CallFunc_GetClassFromPrimaryAssetId_ReturnValue;
	Parms.CallFunc_Less_IntInt_ReturnValue = CallFunc_Less_IntInt_ReturnValue;
	Parms.CallFunc_IsValidClass_ReturnValue = CallFunc_IsValidClass_ReturnValue;
	Parms.CallFunc_Add_IntInt_ReturnValue = CallFunc_Add_IntInt_ReturnValue;
	Parms.CallFunc_Array_Add_ReturnValue = CallFunc_Array_Add_ReturnValue;
	Parms.CallFunc_Array_Add_ReturnValue_1 = CallFunc_Array_Add_ReturnValue_1;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	AssetIds = std::move(Parms.AssetIds);

	if (UnloadedAssetIds != nullptr)
		*UnloadedAssetIds = Parms.UnloadedAssetIds;

	if (LoadedAssetClasses != nullptr)
		*LoadedAssetClasses = Parms.LoadedAssetClasses;
}


// Function BPFL_HDCore.BPFL_HDCore_C.AddOption
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           Options                                                (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash)
// class FString                           StrToAdd                                               (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           Temp_string_Variable                                   (ZeroConstructor, HasGetValueTypeHash)
// bool                                    CallFunc_IsEmpty_ReturnValue                           (ZeroConstructor, IsPlainOldData, NoDestructor)
// class FString                           Temp_string_Variable_1                                 (ZeroConstructor, HasGetValueTypeHash)
// bool                                    Temp_bool_Variable                                     (ZeroConstructor, IsPlainOldData, NoDestructor)
// class FString                           K2Node_Select_Default                                  (ZeroConstructor, HasGetValueTypeHash)
// class FString                           CallFunc_Concat_StrStr_ReturnValue                     (ZeroConstructor, HasGetValueTypeHash)
// class FString                           CallFunc_Concat_StrStr_ReturnValue_1                   (ZeroConstructor, HasGetValueTypeHash)

void UBPFL_HDCore_C::AddOption(class FString& Options, class FString& StrToAdd, class UObject* __WorldContext, const class FString& Temp_string_Variable, bool CallFunc_IsEmpty_ReturnValue, const class FString& Temp_string_Variable_1, bool Temp_bool_Variable, const class FString& K2Node_Select_Default, const class FString& CallFunc_Concat_StrStr_ReturnValue, const class FString& CallFunc_Concat_StrStr_ReturnValue_1)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPFL_HDCore_C", "AddOption");

	Params::BPFL_HDCore_C_AddOption Parms{};

	Parms.Options = std::move(Options);
	Parms.StrToAdd = std::move(StrToAdd);
	Parms.__WorldContext = __WorldContext;
	Parms.Temp_string_Variable = std::move(Temp_string_Variable);
	Parms.CallFunc_IsEmpty_ReturnValue = CallFunc_IsEmpty_ReturnValue;
	Parms.Temp_string_Variable_1 = std::move(Temp_string_Variable_1);
	Parms.Temp_bool_Variable = Temp_bool_Variable;
	Parms.K2Node_Select_Default = std::move(K2Node_Select_Default);
	Parms.CallFunc_Concat_StrStr_ReturnValue = std::move(CallFunc_Concat_StrStr_ReturnValue);
	Parms.CallFunc_Concat_StrStr_ReturnValue_1 = std::move(CallFunc_Concat_StrStr_ReturnValue_1);

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Options = std::move(Parms.Options);
	StrToAdd = std::move(Parms.StrToAdd);
}


// Function BPFL_HDCore.BPFL_HDCore_C.GetContentRootPathFromPackageName
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class FString                           PackageName                                            (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bSuccess                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class FString                           ContentRootPath                                        (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
// bool                                    CallFunc_StartsWith_ReturnValue                        (ZeroConstructor, IsPlainOldData, NoDestructor)
// int32                                   CallFunc_FindSubstring_ReturnValue                     (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    CallFunc_NotEqual_IntInt_ReturnValue                   (ZeroConstructor, IsPlainOldData, NoDestructor)
// int32                                   CallFunc_Add_IntInt_ReturnValue                        (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           CallFunc_Mid_ReturnValue                               (ZeroConstructor, HasGetValueTypeHash)

void UBPFL_HDCore_C::GetContentRootPathFromPackageName(class FString& PackageName, class UObject* __WorldContext, bool* bSuccess, class FString* ContentRootPath, bool CallFunc_StartsWith_ReturnValue, int32 CallFunc_FindSubstring_ReturnValue, bool CallFunc_NotEqual_IntInt_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue, const class FString& CallFunc_Mid_ReturnValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPFL_HDCore_C", "GetContentRootPathFromPackageName");

	Params::BPFL_HDCore_C_GetContentRootPathFromPackageName Parms{};

	Parms.PackageName = std::move(PackageName);
	Parms.__WorldContext = __WorldContext;
	Parms.CallFunc_StartsWith_ReturnValue = CallFunc_StartsWith_ReturnValue;
	Parms.CallFunc_FindSubstring_ReturnValue = CallFunc_FindSubstring_ReturnValue;
	Parms.CallFunc_NotEqual_IntInt_ReturnValue = CallFunc_NotEqual_IntInt_ReturnValue;
	Parms.CallFunc_Add_IntInt_ReturnValue = CallFunc_Add_IntInt_ReturnValue;
	Parms.CallFunc_Mid_ReturnValue = std::move(CallFunc_Mid_ReturnValue);

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	PackageName = std::move(Parms.PackageName);

	if (bSuccess != nullptr)
		*bSuccess = std::move(Parms.bSuccess);

	if (ContentRootPath != nullptr)
		*ContentRootPath = Parms.ContentRootPath;
}


// Function BPFL_HDCore.BPFL_HDCore_C.GetContentRootFromPackageName
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class FString                           PackageName                                            (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bSuccess                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class FString                           ContentRootName                                        (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
// bool                                    Temp_bool_Variable                                     (ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    CallFunc_GetContentRootPathFromPackageName_bSuccess    (ZeroConstructor, IsPlainOldData, NoDestructor)
// class FString                           CallFunc_GetContentRootPathFromPackageName_ContentRootPath(ZeroConstructor, HasGetValueTypeHash)
// class FString                           Temp_string_Variable                                   (ZeroConstructor, HasGetValueTypeHash)
// int32                                   CallFunc_FindSubstring_ReturnValue                     (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   CallFunc_Subtract_IntInt_ReturnValue                   (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           CallFunc_Mid_ReturnValue                               (ZeroConstructor, HasGetValueTypeHash)
// class FString                           K2Node_Select_Default                                  (ZeroConstructor, HasGetValueTypeHash)

void UBPFL_HDCore_C::GetContentRootFromPackageName(class FString& PackageName, class UObject* __WorldContext, bool* bSuccess, class FString* ContentRootName, bool Temp_bool_Variable, bool CallFunc_GetContentRootPathFromPackageName_bSuccess, const class FString& CallFunc_GetContentRootPathFromPackageName_ContentRootPath, const class FString& Temp_string_Variable, int32 CallFunc_FindSubstring_ReturnValue, int32 CallFunc_Subtract_IntInt_ReturnValue, const class FString& CallFunc_Mid_ReturnValue, const class FString& K2Node_Select_Default)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPFL_HDCore_C", "GetContentRootFromPackageName");

	Params::BPFL_HDCore_C_GetContentRootFromPackageName Parms{};

	Parms.PackageName = std::move(PackageName);
	Parms.__WorldContext = __WorldContext;
	Parms.Temp_bool_Variable = Temp_bool_Variable;
	Parms.CallFunc_GetContentRootPathFromPackageName_bSuccess = CallFunc_GetContentRootPathFromPackageName_bSuccess;
	Parms.CallFunc_GetContentRootPathFromPackageName_ContentRootPath = std::move(CallFunc_GetContentRootPathFromPackageName_ContentRootPath);
	Parms.Temp_string_Variable = std::move(Temp_string_Variable);
	Parms.CallFunc_FindSubstring_ReturnValue = CallFunc_FindSubstring_ReturnValue;
	Parms.CallFunc_Subtract_IntInt_ReturnValue = CallFunc_Subtract_IntInt_ReturnValue;
	Parms.CallFunc_Mid_ReturnValue = std::move(CallFunc_Mid_ReturnValue);
	Parms.K2Node_Select_Default = std::move(K2Node_Select_Default);

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	PackageName = std::move(Parms.PackageName);

	if (bSuccess != nullptr)
		*bSuccess = std::move(Parms.bSuccess);

	if (ContentRootName != nullptr)
		*ContentRootName = Parms.ContentRootName;
}


// Function BPFL_HDCore.BPFL_HDCore_C.GetPluginDisplayNameFromPath
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class FString                           AssetPath                                              (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           ModName                                                (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
// bool                                    Temp_bool_Variable                                     (ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    CallFunc_GetContentRootFromPackageName_bSuccess        (ZeroConstructor, IsPlainOldData, NoDestructor)
// class FString                           CallFunc_GetContentRootFromPackageName_ContentRootName (ZeroConstructor, HasGetValueTypeHash)
// class FString                           Temp_string_Variable                                   (ZeroConstructor, HasGetValueTypeHash)
// class FString                           CallFunc_GetPluginFriendlyName_ReturnValue             (ZeroConstructor, HasGetValueTypeHash)
// bool                                    CallFunc_IsEmpty_ReturnValue                           (ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Temp_bool_Variable_1                                   (ZeroConstructor, IsPlainOldData, NoDestructor)
// TArray<class FString>                   K2Node_MakeArray_Array                                 (ConstParm, ReferenceParm, HasGetValueTypeHash)
// bool                                    CallFunc_Array_Contains_ReturnValue                    (ZeroConstructor, IsPlainOldData, NoDestructor)
// class FString                           K2Node_Select_Default                                  (ZeroConstructor, HasGetValueTypeHash)
// class FString                           K2Node_Select_Default_1                                (ZeroConstructor, HasGetValueTypeHash)

void UBPFL_HDCore_C::GetPluginDisplayNameFromPath(class FString& AssetPath, class UObject* __WorldContext, class FString* ModName, bool Temp_bool_Variable, bool CallFunc_GetContentRootFromPackageName_bSuccess, const class FString& CallFunc_GetContentRootFromPackageName_ContentRootName, const class FString& Temp_string_Variable, const class FString& CallFunc_GetPluginFriendlyName_ReturnValue, bool CallFunc_IsEmpty_ReturnValue, bool Temp_bool_Variable_1, TArray<class FString>& K2Node_MakeArray_Array, bool CallFunc_Array_Contains_ReturnValue, const class FString& K2Node_Select_Default, const class FString& K2Node_Select_Default_1)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPFL_HDCore_C", "GetPluginDisplayNameFromPath");

	Params::BPFL_HDCore_C_GetPluginDisplayNameFromPath Parms{};

	Parms.AssetPath = std::move(AssetPath);
	Parms.__WorldContext = __WorldContext;
	Parms.Temp_bool_Variable = Temp_bool_Variable;
	Parms.CallFunc_GetContentRootFromPackageName_bSuccess = CallFunc_GetContentRootFromPackageName_bSuccess;
	Parms.CallFunc_GetContentRootFromPackageName_ContentRootName = std::move(CallFunc_GetContentRootFromPackageName_ContentRootName);
	Parms.Temp_string_Variable = std::move(Temp_string_Variable);
	Parms.CallFunc_GetPluginFriendlyName_ReturnValue = std::move(CallFunc_GetPluginFriendlyName_ReturnValue);
	Parms.CallFunc_IsEmpty_ReturnValue = CallFunc_IsEmpty_ReturnValue;
	Parms.Temp_bool_Variable_1 = Temp_bool_Variable_1;
	Parms.K2Node_MakeArray_Array = std::move(K2Node_MakeArray_Array);
	Parms.CallFunc_Array_Contains_ReturnValue = CallFunc_Array_Contains_ReturnValue;
	Parms.K2Node_Select_Default = std::move(K2Node_Select_Default);
	Parms.K2Node_Select_Default_1 = std::move(K2Node_Select_Default_1);

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	AssetPath = std::move(Parms.AssetPath);

	if (ModName != nullptr)
		*ModName = Parms.ModName;
}


// Function BPFL_HDCore.BPFL_HDCore_C.GetPackageShortName
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class FString                           LongName                                               (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bSuccess                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class FString                           ShortName                                              (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
// bool                                    CallFunc_StartsWith_ReturnValue                        (ZeroConstructor, IsPlainOldData, NoDestructor)
// int32                                   CallFunc_Len_ReturnValue                               (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   CallFunc_FindSubstring_ReturnValue                     (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    CallFunc_NotEqual_IntInt_ReturnValue                   (ZeroConstructor, IsPlainOldData, NoDestructor)
// int32                                   CallFunc_Add_IntInt_ReturnValue                        (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           CallFunc_Mid_ReturnValue                               (ZeroConstructor, HasGetValueTypeHash)

void UBPFL_HDCore_C::GetPackageShortName(class FString& LongName, class UObject* __WorldContext, bool* bSuccess, class FString* ShortName, bool CallFunc_StartsWith_ReturnValue, int32 CallFunc_Len_ReturnValue, int32 CallFunc_FindSubstring_ReturnValue, bool CallFunc_NotEqual_IntInt_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue, const class FString& CallFunc_Mid_ReturnValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPFL_HDCore_C", "GetPackageShortName");

	Params::BPFL_HDCore_C_GetPackageShortName Parms{};

	Parms.LongName = std::move(LongName);
	Parms.__WorldContext = __WorldContext;
	Parms.CallFunc_StartsWith_ReturnValue = CallFunc_StartsWith_ReturnValue;
	Parms.CallFunc_Len_ReturnValue = CallFunc_Len_ReturnValue;
	Parms.CallFunc_FindSubstring_ReturnValue = CallFunc_FindSubstring_ReturnValue;
	Parms.CallFunc_NotEqual_IntInt_ReturnValue = CallFunc_NotEqual_IntInt_ReturnValue;
	Parms.CallFunc_Add_IntInt_ReturnValue = CallFunc_Add_IntInt_ReturnValue;
	Parms.CallFunc_Mid_ReturnValue = std::move(CallFunc_Mid_ReturnValue);

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	LongName = std::move(Parms.LongName);

	if (bSuccess != nullptr)
		*bSuccess = std::move(Parms.bSuccess);

	if (ShortName != nullptr)
		*ShortName = Parms.ShortName;
}


// Function BPFL_HDCore.BPFL_HDCore_C.FindMapIdByDisplayName
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class FText                             MapDisplayName                                         (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// TArray<struct FPrimaryAssetId>          MapIds                                                 (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FPrimaryAssetId                  FoundMapId                                             (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// int32                                   Temp_int_Array_Index_Variable                          (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   CallFunc_Array_Length_ReturnValue                      (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FPrimaryAssetId                  CallFunc_Array_Get_Item                                (ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class FText                             CallFunc_GetMapAssetNameForDisplay_ReturnValue         ()
// int32                                   Temp_int_Loop_Counter_Variable                         (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    CallFunc_EqualEqual_IgnoreCase_TextText_ReturnValue    (ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    CallFunc_Less_IntInt_ReturnValue                       (ZeroConstructor, IsPlainOldData, NoDestructor)
// int32                                   CallFunc_Add_IntInt_ReturnValue                        (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPFL_HDCore_C::FindMapIdByDisplayName(class FText& MapDisplayName, TArray<struct FPrimaryAssetId>& MapIds, class UObject* __WorldContext, struct FPrimaryAssetId* FoundMapId, int32 Temp_int_Array_Index_Variable, int32 CallFunc_Array_Length_ReturnValue, const struct FPrimaryAssetId& CallFunc_Array_Get_Item, class FText CallFunc_GetMapAssetNameForDisplay_ReturnValue, int32 Temp_int_Loop_Counter_Variable, bool CallFunc_EqualEqual_IgnoreCase_TextText_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPFL_HDCore_C", "FindMapIdByDisplayName");

	Params::BPFL_HDCore_C_FindMapIdByDisplayName Parms{};

	Parms.MapDisplayName = MapDisplayName;
	Parms.MapIds = std::move(MapIds);
	Parms.__WorldContext = __WorldContext;
	Parms.Temp_int_Array_Index_Variable = Temp_int_Array_Index_Variable;
	Parms.CallFunc_Array_Length_ReturnValue = CallFunc_Array_Length_ReturnValue;
	Parms.CallFunc_Array_Get_Item = std::move(CallFunc_Array_Get_Item);
	Parms.CallFunc_GetMapAssetNameForDisplay_ReturnValue = CallFunc_GetMapAssetNameForDisplay_ReturnValue;
	Parms.Temp_int_Loop_Counter_Variable = Temp_int_Loop_Counter_Variable;
	Parms.CallFunc_EqualEqual_IgnoreCase_TextText_ReturnValue = CallFunc_EqualEqual_IgnoreCase_TextText_ReturnValue;
	Parms.CallFunc_Less_IntInt_ReturnValue = CallFunc_Less_IntInt_ReturnValue;
	Parms.CallFunc_Add_IntInt_ReturnValue = CallFunc_Add_IntInt_ReturnValue;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	MapDisplayName = Parms.MapDisplayName;
	MapIds = std::move(Parms.MapIds);

	if (FoundMapId != nullptr)
		*FoundMapId = Parms.FoundMapId;
}


// Function BPFL_HDCore.BPFL_HDCore_C.CheckEntitlement
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// TArray<struct FFEntitlementDefinition>  Entitlements                                           (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bEntitled                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// int32                                   CallFunc_Array_Length_ReturnValue                      (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Temp_int_Array_Index_Variable                          (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Temp_int_Loop_Counter_Variable                         (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FFEntitlementDefinition          CallFunc_Array_Get_Item                                (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    CallFunc_Less_IntInt_ReturnValue                       (ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    CallFunc_OwnsAppBP_ReturnValue                         (ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    CallFunc_HasDLCBP_ReturnValue                          (ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    K2Node_SwitchEnum_CmpSuccess                           (ZeroConstructor, IsPlainOldData, NoDestructor)
// int32                                   CallFunc_Add_IntInt_ReturnValue                        (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPFL_HDCore_C::CheckEntitlement(TArray<struct FFEntitlementDefinition>& Entitlements, class UObject* __WorldContext, bool* bEntitled, int32 CallFunc_Array_Length_ReturnValue, int32 Temp_int_Array_Index_Variable, int32 Temp_int_Loop_Counter_Variable, const struct FFEntitlementDefinition& CallFunc_Array_Get_Item, bool CallFunc_Less_IntInt_ReturnValue, bool CallFunc_OwnsAppBP_ReturnValue, bool CallFunc_HasDLCBP_ReturnValue, bool K2Node_SwitchEnum_CmpSuccess, int32 CallFunc_Add_IntInt_ReturnValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPFL_HDCore_C", "CheckEntitlement");

	Params::BPFL_HDCore_C_CheckEntitlement Parms{};

	Parms.Entitlements = std::move(Entitlements);
	Parms.__WorldContext = __WorldContext;
	Parms.CallFunc_Array_Length_ReturnValue = CallFunc_Array_Length_ReturnValue;
	Parms.Temp_int_Array_Index_Variable = Temp_int_Array_Index_Variable;
	Parms.Temp_int_Loop_Counter_Variable = Temp_int_Loop_Counter_Variable;
	Parms.CallFunc_Array_Get_Item = std::move(CallFunc_Array_Get_Item);
	Parms.CallFunc_Less_IntInt_ReturnValue = CallFunc_Less_IntInt_ReturnValue;
	Parms.CallFunc_OwnsAppBP_ReturnValue = CallFunc_OwnsAppBP_ReturnValue;
	Parms.CallFunc_HasDLCBP_ReturnValue = CallFunc_HasDLCBP_ReturnValue;
	Parms.K2Node_SwitchEnum_CmpSuccess = K2Node_SwitchEnum_CmpSuccess;
	Parms.CallFunc_Add_IntInt_ReturnValue = CallFunc_Add_IntInt_ReturnValue;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Entitlements = std::move(Parms.Entitlements);

	if (bEntitled != nullptr)
		*bEntitled = std::move(Parms.bEntitled);
}


// Function BPFL_HDCore.BPFL_HDCore_C.GetHDPlayerControllerBP
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// int32                                   PlayerIndex                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class ABP_HDPlayerControllerBase_C*     HDPC                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class APlayerController*                CallFunc_GetPlayerController_ReturnValue               (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class ABP_HDPlayerControllerBase_C*     K2Node_DynamicCast_AsBP_HDPlayer_Controller_Base       (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    K2Node_DynamicCast_bSuccess                            (ZeroConstructor, IsPlainOldData, NoDestructor)

void UBPFL_HDCore_C::GetHDPlayerControllerBP(int32 PlayerIndex, class UObject* __WorldContext, class ABP_HDPlayerControllerBase_C** HDPC, class APlayerController* CallFunc_GetPlayerController_ReturnValue, class ABP_HDPlayerControllerBase_C* K2Node_DynamicCast_AsBP_HDPlayer_Controller_Base, bool K2Node_DynamicCast_bSuccess)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPFL_HDCore_C", "GetHDPlayerControllerBP");

	Params::BPFL_HDCore_C_GetHDPlayerControllerBP Parms{};

	Parms.PlayerIndex = PlayerIndex;
	Parms.__WorldContext = __WorldContext;
	Parms.CallFunc_GetPlayerController_ReturnValue = CallFunc_GetPlayerController_ReturnValue;
	Parms.K2Node_DynamicCast_AsBP_HDPlayer_Controller_Base = K2Node_DynamicCast_AsBP_HDPlayer_Controller_Base;
	Parms.K2Node_DynamicCast_bSuccess = K2Node_DynamicCast_bSuccess;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (HDPC != nullptr)
		*HDPC = std::move(Parms.HDPC);
}


// Function BPFL_HDCore.BPFL_HDCore_C.GetHDPlayerCharacterBP
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// int32                                   PlayerIndex                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class ABP_HDPlayerCharacterBase_C*      HDPlayerChar                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class ACharacter*                       CallFunc_GetPlayerCharacter_ReturnValue                (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class ABP_HDPlayerCharacterBase_C*      K2Node_DynamicCast_AsBP_HDPlayer_Character_Base        (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    K2Node_DynamicCast_bSuccess                            (ZeroConstructor, IsPlainOldData, NoDestructor)

void UBPFL_HDCore_C::GetHDPlayerCharacterBP(int32 PlayerIndex, class UObject* __WorldContext, class ABP_HDPlayerCharacterBase_C** HDPlayerChar, class ACharacter* CallFunc_GetPlayerCharacter_ReturnValue, class ABP_HDPlayerCharacterBase_C* K2Node_DynamicCast_AsBP_HDPlayer_Character_Base, bool K2Node_DynamicCast_bSuccess)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPFL_HDCore_C", "GetHDPlayerCharacterBP");

	Params::BPFL_HDCore_C_GetHDPlayerCharacterBP Parms{};

	Parms.PlayerIndex = PlayerIndex;
	Parms.__WorldContext = __WorldContext;
	Parms.CallFunc_GetPlayerCharacter_ReturnValue = CallFunc_GetPlayerCharacter_ReturnValue;
	Parms.K2Node_DynamicCast_AsBP_HDPlayer_Character_Base = K2Node_DynamicCast_AsBP_HDPlayer_Character_Base;
	Parms.K2Node_DynamicCast_bSuccess = K2Node_DynamicCast_bSuccess;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (HDPlayerChar != nullptr)
		*HDPlayerChar = std::move(Parms.HDPlayerChar);
}


// Function BPFL_HDCore.BPFL_HDCore_C.GetHDGameInstance
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UHDGameInstance*                  HDGI                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UGameInstance*                    CallFunc_GetGameInstance_ReturnValue                   (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UHDGameInstance*                  K2Node_DynamicCast_AsHDGame_Instance                   (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    K2Node_DynamicCast_bSuccess                            (ZeroConstructor, IsPlainOldData, NoDestructor)

void UBPFL_HDCore_C::GetHDGameInstance(class UObject* __WorldContext, class UHDGameInstance** HDGI, class UGameInstance* CallFunc_GetGameInstance_ReturnValue, class UHDGameInstance* K2Node_DynamicCast_AsHDGame_Instance, bool K2Node_DynamicCast_bSuccess)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPFL_HDCore_C", "GetHDGameInstance");

	Params::BPFL_HDCore_C_GetHDGameInstance Parms{};

	Parms.__WorldContext = __WorldContext;
	Parms.CallFunc_GetGameInstance_ReturnValue = CallFunc_GetGameInstance_ReturnValue;
	Parms.K2Node_DynamicCast_AsHDGame_Instance = K2Node_DynamicCast_AsHDGame_Instance;
	Parms.K2Node_DynamicCast_bSuccess = K2Node_DynamicCast_bSuccess;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (HDGI != nullptr)
		*HDGI = std::move(Parms.HDGI);
}


// Function BPFL_HDCore.BPFL_HDCore_C.GetHDGameMode
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AHDBaseGameMode*                  HDGame                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AGameModeBase*                    CallFunc_GetGameMode_ReturnValue                       (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AHDBaseGameMode*                  K2Node_DynamicCast_AsHDBase_Game_Mode                  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    K2Node_DynamicCast_bSuccess                            (ZeroConstructor, IsPlainOldData, NoDestructor)

void UBPFL_HDCore_C::GetHDGameMode(class UObject* __WorldContext, class AHDBaseGameMode** HDGame, class AGameModeBase* CallFunc_GetGameMode_ReturnValue, class AHDBaseGameMode* K2Node_DynamicCast_AsHDBase_Game_Mode, bool K2Node_DynamicCast_bSuccess)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPFL_HDCore_C", "GetHDGameMode");

	Params::BPFL_HDCore_C_GetHDGameMode Parms{};

	Parms.__WorldContext = __WorldContext;
	Parms.CallFunc_GetGameMode_ReturnValue = CallFunc_GetGameMode_ReturnValue;
	Parms.K2Node_DynamicCast_AsHDBase_Game_Mode = K2Node_DynamicCast_AsHDBase_Game_Mode;
	Parms.K2Node_DynamicCast_bSuccess = K2Node_DynamicCast_bSuccess;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (HDGame != nullptr)
		*HDGame = std::move(Parms.HDGame);
}


// Function BPFL_HDCore.BPFL_HDCore_C.GetHDGameState
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AHDGameState*                     HDGameState                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AGameStateBase*                   CallFunc_GetGameState_ReturnValue                      (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AHDGameState*                     K2Node_DynamicCast_AsHDGame_State                      (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    K2Node_DynamicCast_bSuccess                            (ZeroConstructor, IsPlainOldData, NoDestructor)

void UBPFL_HDCore_C::GetHDGameState(class UObject* __WorldContext, class AHDGameState** HDGameState, class AGameStateBase* CallFunc_GetGameState_ReturnValue, class AHDGameState* K2Node_DynamicCast_AsHDGame_State, bool K2Node_DynamicCast_bSuccess)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPFL_HDCore_C", "GetHDGameState");

	Params::BPFL_HDCore_C_GetHDGameState Parms{};

	Parms.__WorldContext = __WorldContext;
	Parms.CallFunc_GetGameState_ReturnValue = CallFunc_GetGameState_ReturnValue;
	Parms.K2Node_DynamicCast_AsHDGame_State = K2Node_DynamicCast_AsHDGame_State;
	Parms.K2Node_DynamicCast_bSuccess = K2Node_DynamicCast_bSuccess;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (HDGameState != nullptr)
		*HDGameState = std::move(Parms.HDGameState);
}


// Function BPFL_HDCore.BPFL_HDCore_C.GetHDGameUserSettings
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UTBGameUserSettings*              HDGameUserSettings                                     (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UGameUserSettings*                CallFunc_GetGameUserSettings_ReturnValue               (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    CallFunc_IsValid_ReturnValue                           (ZeroConstructor, IsPlainOldData, NoDestructor)
// class UTBGameUserSettings*              K2Node_DynamicCast_AsTBGame_User_Settings              (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    K2Node_DynamicCast_bSuccess                            (ZeroConstructor, IsPlainOldData, NoDestructor)

void UBPFL_HDCore_C::GetHDGameUserSettings(class UObject* __WorldContext, class UTBGameUserSettings** HDGameUserSettings, class UGameUserSettings* CallFunc_GetGameUserSettings_ReturnValue, bool CallFunc_IsValid_ReturnValue, class UTBGameUserSettings* K2Node_DynamicCast_AsTBGame_User_Settings, bool K2Node_DynamicCast_bSuccess)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPFL_HDCore_C", "GetHDGameUserSettings");

	Params::BPFL_HDCore_C_GetHDGameUserSettings Parms{};

	Parms.__WorldContext = __WorldContext;
	Parms.CallFunc_GetGameUserSettings_ReturnValue = CallFunc_GetGameUserSettings_ReturnValue;
	Parms.CallFunc_IsValid_ReturnValue = CallFunc_IsValid_ReturnValue;
	Parms.K2Node_DynamicCast_AsTBGame_User_Settings = K2Node_DynamicCast_AsTBGame_User_Settings;
	Parms.K2Node_DynamicCast_bSuccess = K2Node_DynamicCast_bSuccess;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (HDGameUserSettings != nullptr)
		*HDGameUserSettings = std::move(Parms.HDGameUserSettings);
}


// Function BPFL_HDCore.BPFL_HDCore_C.GetHDHUDBP
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// int32                                   PlayerIndex                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class ABP_HDHUDBase_C*                  HDHUD                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class APlayerController*                CallFunc_GetPlayerController_ReturnValue               (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AHUD*                             CallFunc_GetHUD_ReturnValue                            (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class ABP_HDHUDBase_C*                  K2Node_DynamicCast_AsBP_HDHUDBase                      (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    K2Node_DynamicCast_bSuccess                            (ZeroConstructor, IsPlainOldData, NoDestructor)

void UBPFL_HDCore_C::GetHDHUDBP(int32 PlayerIndex, class UObject* __WorldContext, class ABP_HDHUDBase_C** HDHUD, class APlayerController* CallFunc_GetPlayerController_ReturnValue, class AHUD* CallFunc_GetHUD_ReturnValue, class ABP_HDHUDBase_C* K2Node_DynamicCast_AsBP_HDHUDBase, bool K2Node_DynamicCast_bSuccess)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPFL_HDCore_C", "GetHDHUDBP");

	Params::BPFL_HDCore_C_GetHDHUDBP Parms{};

	Parms.PlayerIndex = PlayerIndex;
	Parms.__WorldContext = __WorldContext;
	Parms.CallFunc_GetPlayerController_ReturnValue = CallFunc_GetPlayerController_ReturnValue;
	Parms.CallFunc_GetHUD_ReturnValue = CallFunc_GetHUD_ReturnValue;
	Parms.K2Node_DynamicCast_AsBP_HDHUDBase = K2Node_DynamicCast_AsBP_HDHUDBase;
	Parms.K2Node_DynamicCast_bSuccess = K2Node_DynamicCast_bSuccess;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (HDHUD != nullptr)
		*HDHUD = std::move(Parms.HDHUD);
}


// Function BPFL_HDCore.BPFL_HDCore_C.GetHDTeamStateForTeam
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// enum class EHDTeam                      Team                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AHDTeamState*                     HDTeamState                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class ADFTeamState*                     CallFunc_GetTeamStateFromTeamId_ReturnValue            (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AHDTeamState*                     K2Node_DynamicCast_AsTeam_State__HD_                   (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    K2Node_DynamicCast_bSuccess                            (ZeroConstructor, IsPlainOldData, NoDestructor)

void UBPFL_HDCore_C::GetHDTeamStateForTeam(enum class EHDTeam Team, class UObject* __WorldContext, class AHDTeamState** HDTeamState, class ADFTeamState* CallFunc_GetTeamStateFromTeamId_ReturnValue, class AHDTeamState* K2Node_DynamicCast_AsTeam_State__HD_, bool K2Node_DynamicCast_bSuccess)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPFL_HDCore_C", "GetHDTeamStateForTeam");

	Params::BPFL_HDCore_C_GetHDTeamStateForTeam Parms{};

	Parms.Team = Team;
	Parms.__WorldContext = __WorldContext;
	Parms.CallFunc_GetTeamStateFromTeamId_ReturnValue = CallFunc_GetTeamStateFromTeamId_ReturnValue;
	Parms.K2Node_DynamicCast_AsTeam_State__HD_ = K2Node_DynamicCast_AsTeam_State__HD_;
	Parms.K2Node_DynamicCast_bSuccess = K2Node_DynamicCast_bSuccess;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (HDTeamState != nullptr)
		*HDTeamState = std::move(Parms.HDTeamState);
}


// Function BPFL_HDCore.BPFL_HDCore_C.GetHDFactionInfoForTeam
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// enum class EHDTeam                      Team                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UClass*                           HDFactionInfoClass                                     (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AHDTeamState*                     CallFunc_GetHDTeamStateForTeam_HDTeamState             (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UClass*                           K2Node_ClassDynamicCast_AsBP_HDFaction_Info_Base       (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    K2Node_ClassDynamicCast_bSuccess                       (ZeroConstructor, IsPlainOldData, NoDestructor)

void UBPFL_HDCore_C::GetHDFactionInfoForTeam(enum class EHDTeam Team, class UObject* __WorldContext, class UClass** HDFactionInfoClass, class AHDTeamState* CallFunc_GetHDTeamStateForTeam_HDTeamState, class UClass* K2Node_ClassDynamicCast_AsBP_HDFaction_Info_Base, bool K2Node_ClassDynamicCast_bSuccess)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPFL_HDCore_C", "GetHDFactionInfoForTeam");

	Params::BPFL_HDCore_C_GetHDFactionInfoForTeam Parms{};

	Parms.Team = Team;
	Parms.__WorldContext = __WorldContext;
	Parms.CallFunc_GetHDTeamStateForTeam_HDTeamState = CallFunc_GetHDTeamStateForTeam_HDTeamState;
	Parms.K2Node_ClassDynamicCast_AsBP_HDFaction_Info_Base = K2Node_ClassDynamicCast_AsBP_HDFaction_Info_Base;
	Parms.K2Node_ClassDynamicCast_bSuccess = K2Node_ClassDynamicCast_bSuccess;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (HDFactionInfoClass != nullptr)
		*HDFactionInfoClass = std::move(Parms.HDFactionInfoClass);
}


// Function BPFL_HDCore.BPFL_HDCore_C.GetBluforOpforTeamStateForTeam
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// enum class EHDTeam                      Team                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AHDTeamState*                     HDTeamState                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// enum class EHDTeam                      Temp_byte_Variable                                     (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AHDGameState*                     CallFunc_GetHDGameState_HDGameState                    (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AHDTeamState*                     Temp_object_Variable                                   (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AHDTeamState*                     K2Node_Select_Default                                  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPFL_HDCore_C::GetBluforOpforTeamStateForTeam(enum class EHDTeam Team, class UObject* __WorldContext, class AHDTeamState** HDTeamState, enum class EHDTeam Temp_byte_Variable, class AHDGameState* CallFunc_GetHDGameState_HDGameState, class AHDTeamState* Temp_object_Variable, class AHDTeamState* K2Node_Select_Default)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPFL_HDCore_C", "GetBluforOpforTeamStateForTeam");

	Params::BPFL_HDCore_C_GetBluforOpforTeamStateForTeam Parms{};

	Parms.Team = Team;
	Parms.__WorldContext = __WorldContext;
	Parms.Temp_byte_Variable = Temp_byte_Variable;
	Parms.CallFunc_GetHDGameState_HDGameState = CallFunc_GetHDGameState_HDGameState;
	Parms.Temp_object_Variable = Temp_object_Variable;
	Parms.K2Node_Select_Default = K2Node_Select_Default;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (HDTeamState != nullptr)
		*HDTeamState = std::move(Parms.HDTeamState);
}

}

