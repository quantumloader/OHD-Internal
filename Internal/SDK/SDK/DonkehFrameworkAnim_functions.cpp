#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: DonkehFrameworkAnim

#include "Basic.hpp"

#include "DonkehFrameworkAnim_classes.hpp"
#include "DonkehFrameworkAnim_parameters.hpp"


namespace SDK
{

// Function DonkehFrameworkAnim.AnimNotify_PlayFootstepFX.EqualProps
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FFootstepFXSettings              Props                                                  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// struct FFootstepFXSettings              OtherProps                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAnimNotify_PlayFootstepFX::EqualProps(struct FFootstepFXSettings& Props, struct FFootstepFXSettings& OtherProps)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AnimNotify_PlayFootstepFX", "EqualProps");

	Params::AnimNotify_PlayFootstepFX_EqualProps Parms{};

	Parms.Props = std::move(Props);
	Parms.OtherProps = std::move(OtherProps);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function DonkehFrameworkAnim.AnimNotify_PlayFootstepFX.GetFootstepNotifyProps
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FFootstepFXSettings              ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FFootstepFXSettings UAnimNotify_PlayFootstepFX::GetFootstepNotifyProps() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AnimNotify_PlayFootstepFX", "GetFootstepNotifyProps");

	Params::AnimNotify_PlayFootstepFX_GetFootstepNotifyProps Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function DonkehFrameworkAnim.AnimNotify_PlayFootstepFX.SetFootstepNotifyProps
// (Final, Native, Public, HasOutParams, BlueprintCallable, Const)
// Parameters:
// struct FFootstepFXSettings              PropsToUse                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UAnimNotify_PlayFootstepFX::SetFootstepNotifyProps(struct FFootstepFXSettings& PropsToUse) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AnimNotify_PlayFootstepFX", "SetFootstepNotifyProps");

	Params::AnimNotify_PlayFootstepFX_SetFootstepNotifyProps Parms{};

	Parms.PropsToUse = std::move(PropsToUse);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DonkehFrameworkAnim.DFCharacterAnimInstance.BlueprintUpdateControllerOwnerRefs
// (Event, Protected, BlueprintEvent)
// Parameters:
// class AController*                      NewC                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UDFCharacterAnimInstance::BlueprintUpdateControllerOwnerRefs(class AController* NewC)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DFCharacterAnimInstance", "BlueprintUpdateControllerOwnerRefs");

	Params::DFCharacterAnimInstance_BlueprintUpdateControllerOwnerRefs Parms{};

	Parms.NewC = NewC;

	UObject::ProcessEvent(Func, &Parms);
}


// Function DonkehFrameworkAnim.DFCharacterAnimInstance.BlueprintUpdateEquippedWeaponRefs
// (Event, Protected, BlueprintEvent)
// Parameters:
// class ADFBaseItem*                      NewWeap                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UDFCharacterAnimInstance::BlueprintUpdateEquippedWeaponRefs(class ADFBaseItem* NewWeap)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DFCharacterAnimInstance", "BlueprintUpdateEquippedWeaponRefs");

	Params::DFCharacterAnimInstance_BlueprintUpdateEquippedWeaponRefs Parms{};

	Parms.NewWeap = NewWeap;

	UObject::ProcessEvent(Func, &Parms);
}


// Function DonkehFrameworkAnim.DFCharacterAnimInstance.BlueprintUpdatePawnOwnerRefs
// (Event, Protected, BlueprintEvent)
// Parameters:
// class APawn*                            NewPawn                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UDFCharacterAnimInstance::BlueprintUpdatePawnOwnerRefs(class APawn* NewPawn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DFCharacterAnimInstance", "BlueprintUpdatePawnOwnerRefs");

	Params::DFCharacterAnimInstance_BlueprintUpdatePawnOwnerRefs Parms{};

	Parms.NewPawn = NewPawn;

	UObject::ProcessEvent(Func, &Parms);
}


// Function DonkehFrameworkAnim.DFCharacterAnimInstance.EquippedWeaponChanged
// (Final, Native, Private)
// Parameters:
// class ADFBaseCharacter*                 Character                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ADFBaseItem*                      NewEquippedWeap                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ADFBaseItem*                      PrevEquippedWeap                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UDFCharacterAnimInstance::EquippedWeaponChanged(class ADFBaseCharacter* Character, class ADFBaseItem* NewEquippedWeap, class ADFBaseItem* PrevEquippedWeap)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DFCharacterAnimInstance", "EquippedWeaponChanged");

	Params::DFCharacterAnimInstance_EquippedWeaponChanged Parms{};

	Parms.Character = Character;
	Parms.NewEquippedWeap = NewEquippedWeap;
	Parms.PrevEquippedWeap = PrevEquippedWeap;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DonkehFrameworkAnim.DFCharacterAnimInstance.TryGetControllerOwner
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AController*                      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AController* UDFCharacterAnimInstance::TryGetControllerOwner() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DFCharacterAnimInstance", "TryGetControllerOwner");

	Params::DFCharacterAnimInstance_TryGetControllerOwner Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function DonkehFrameworkAnim.DFCharacterAnimInstance.TryGetOwnerWeapon
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ADFBaseItem*                      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ADFBaseItem* UDFCharacterAnimInstance::TryGetOwnerWeapon() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DFCharacterAnimInstance", "TryGetOwnerWeapon");

	Params::DFCharacterAnimInstance_TryGetOwnerWeapon Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function DonkehFrameworkAnim.DFWeaponAnimInstance.BlueprintUpdateWeaponOwnerRefs
// (Event, Protected, BlueprintEvent)
// Parameters:
// class ADFBaseWeapon*                    NewWeap                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UDFWeaponAnimInstance::BlueprintUpdateWeaponOwnerRefs(class ADFBaseWeapon* NewWeap)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DFWeaponAnimInstance", "BlueprintUpdateWeaponOwnerRefs");

	Params::DFWeaponAnimInstance_BlueprintUpdateWeaponOwnerRefs Parms{};

	Parms.NewWeap = NewWeap;

	UObject::ProcessEvent(Func, &Parms);
}


// Function DonkehFrameworkAnim.DFWeaponAnimInstance.TryGetWeaponOwner
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ADFBaseWeapon*                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ADFBaseWeapon* UDFWeaponAnimInstance::TryGetWeaponOwner() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DFWeaponAnimInstance", "TryGetWeaponOwner");

	Params::DFWeaponAnimInstance_TryGetWeaponOwner Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}

}

